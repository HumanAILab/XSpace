{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffeeCombined/packages/blaze/attrs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/blaze/attrs.js","filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffeeCombined/packages/blaze/attrs.js","passPerPreset":false,"envName":"development","cwd":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffeeCombined","root":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffeeCombined","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffeeCombined/packages/blaze/attrs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze/attrs.js"}},"code":"var jsUrlsAllowed = false;\n\nBlaze._allowJavascriptUrls = function () {\n  jsUrlsAllowed = true;\n};\n\nBlaze._javascriptUrlsAllowed = function () {\n  return jsUrlsAllowed;\n}; // An AttributeHandler object is responsible for updating a particular attribute\n// of a particular element.  AttributeHandler subclasses implement\n// browser-specific logic for dealing with particular attributes across\n// different browsers.\n//\n// To define a new type of AttributeHandler, use\n// `var FooHandler = AttributeHandler.extend({ update: function ... })`\n// where the `update` function takes arguments `(element, oldValue, value)`.\n// The `element` argument is always the same between calls to `update` on\n// the same instance.  `oldValue` and `value` are each either `null` or\n// a Unicode string of the type that might be passed to the value argument\n// of `setAttribute` (i.e. not an HTML string with character references).\n// When an AttributeHandler is installed, an initial call to `update` is\n// always made with `oldValue = null`.  The `update` method can access\n// `this.name` if the AttributeHandler class is a generic one that applies\n// to multiple attribute names.\n//\n// AttributeHandlers can store custom properties on `this`, as long as they\n// don't use the names `element`, `name`, `value`, and `oldValue`.\n//\n// AttributeHandlers can't influence how attributes appear in rendered HTML,\n// only how they are updated after materialization as DOM.\n\n\nAttributeHandler = function (name, value) {\n  this.name = name;\n  this.value = value;\n};\n\nBlaze._AttributeHandler = AttributeHandler;\n\nAttributeHandler.prototype.update = function (element, oldValue, value) {\n  if (value === null) {\n    if (oldValue !== null) element.removeAttribute(this.name);\n  } else {\n    element.setAttribute(this.name, value);\n  }\n};\n\nAttributeHandler.extend = function (options) {\n  var curType = this;\n\n  var subType = function () {\n    function AttributeHandlerSubtype()\n    /*arguments*/\n    {\n      AttributeHandler.apply(this, arguments);\n    }\n\n    return AttributeHandlerSubtype;\n  }();\n\n  subType.prototype = new curType();\n  subType.extend = curType.extend;\n  if (options) _.extend(subType.prototype, options);\n  return subType;\n}; /// Apply the diff between the attributes of \"oldValue\" and \"value\" to \"element.\"\n//\n// Each subclass must implement a parseValue method which takes a string\n// as an input and returns an ordered dict of attributes. The keys of the dict\n// are unique identifiers (ie. css properties in the case of styles), and the\n// values are the entire attribute which will be injected into the element.\n//\n// Extended below to support classes, SVG elements and styles.\n\n\nBlaze._DiffingAttributeHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    if (!this.getCurrentValue || !this.setValue || !this.parseValue || !this.joinValues) throw new Error(\"Missing methods in subclass of 'DiffingAttributeHandler'\");\n    var oldAttrsMap = oldValue ? this.parseValue(oldValue) : new OrderedDict();\n    var attrsMap = value ? this.parseValue(value) : new OrderedDict(); // the current attributes on the element, which we will mutate.\n\n    var currentAttrString = this.getCurrentValue(element);\n    var currentAttrsMap = currentAttrString ? this.parseValue(currentAttrString) : new OrderedDict(); // Any outside changes to attributes we add at the end.\n\n    currentAttrsMap.forEach(function (value, key, i) {\n      // If the key already exists, we do not use the current value, but the new value.\n      if (attrsMap.has(key)) {\n        return;\n      } // Key does not already exist, but it existed before. Which means it was explicitly\n      // removed, so we do not add it.\n\n\n      if (oldAttrsMap.has(key)) {\n        return;\n      }\n\n      attrsMap.append(key, value);\n    });\n    var values = [];\n    attrsMap.forEach(function (value, key, i) {\n      values.push(value);\n    });\n    this.setValue(element, this.joinValues(values));\n  }\n});\n\nvar ClassHandler = Blaze._DiffingAttributeHandler.extend({\n  // @param rawValue {String}\n  getCurrentValue: function (element) {\n    return element.className;\n  },\n  setValue: function (element, className) {\n    element.className = className;\n  },\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    _.each(attrString.split(' '), function (token) {\n      if (token) {\n        // Ordered dict requires unique keys.\n        if (!tokens.has(token)) {\n          tokens.append(token, token);\n        }\n      }\n    });\n\n    return tokens;\n  },\n  joinValues: function (values) {\n    return values.join(' ');\n  }\n});\n\nvar SVGClassHandler = ClassHandler.extend({\n  getCurrentValue: function (element) {\n    return element.className.baseVal;\n  },\n  setValue: function (element, className) {\n    element.setAttribute('class', className);\n  }\n});\n\nvar StyleHandler = Blaze._DiffingAttributeHandler.extend({\n  getCurrentValue: function (element) {\n    return element.getAttribute('style');\n  },\n  setValue: function (element, style) {\n    if (style === '') {\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('style', style);\n    }\n  },\n  // Parse a string to produce a map from property to attribute string.\n  //\n  // Example:\n  // \"color:red; foo:12px\" produces a token {color: \"color:red\", foo:\"foo:12px\"}\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict(); // Regex for parsing a css attribute declaration, taken from css-parse:\n    // https://github.com/reworkcss/css-parse/blob/7cef3658d0bba872cde05a85339034b187cb3397/index.js#L219\n\n    var regex = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*/g;\n    var match = regex.exec(attrString);\n\n    while (match) {\n      // match[0] = entire matching string\n      // match[1] = css property\n      // Prefix the token to prevent conflicts with existing properties.\n      // We use the last value for the same key.\n      if (tokens.has(match[1])) {\n        tokens.remove(match[1]);\n      }\n\n      tokens.append(match[1], match[0].trim());\n      match = regex.exec(attrString);\n    }\n\n    return tokens;\n  },\n  joinValues: function (values) {\n    // TODO: Assure that there is always ; between values. But what is an example where it breaks?\n    return values.join(' ');\n  }\n});\n\nvar BooleanHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n\n    if (value == null) {\n      if (oldValue != null) element[name] = false;\n    } else {\n      element[name] = true;\n    }\n  }\n});\nvar DOMPropertyHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value !== element[name]) element[name] = value;\n  }\n}); // attributes of the type 'xlink:something' should be set using\n// the correct namespace in order to work\n\nvar XlinkHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var NS = 'http://www.w3.org/1999/xlink';\n\n    if (value === null) {\n      if (oldValue !== null) element.removeAttributeNS(NS, this.name);\n    } else {\n      element.setAttributeNS(NS, this.name, this.value);\n    }\n  }\n}); // cross-browser version of `instanceof SVGElement`\n\nvar isSVGElement = function (elem) {\n  return 'ownerSVGElement' in elem;\n};\n\nvar isUrlAttribute = function (tagName, attrName) {\n  // Compiled from http://www.w3.org/TR/REC-html40/index/attributes.html\n  // and\n  // http://www.w3.org/html/wg/drafts/html/master/index.html#attributes-1\n  var urlAttrs = {\n    FORM: ['action'],\n    BODY: ['background'],\n    BLOCKQUOTE: ['cite'],\n    Q: ['cite'],\n    DEL: ['cite'],\n    INS: ['cite'],\n    OBJECT: ['classid', 'codebase', 'data', 'usemap'],\n    APPLET: ['codebase'],\n    A: ['href'],\n    AREA: ['href'],\n    LINK: ['href'],\n    BASE: ['href'],\n    IMG: ['longdesc', 'src', 'usemap'],\n    FRAME: ['longdesc', 'src'],\n    IFRAME: ['longdesc', 'src'],\n    HEAD: ['profile'],\n    SCRIPT: ['src'],\n    INPUT: ['src', 'usemap', 'formaction'],\n    BUTTON: ['formaction'],\n    BASE: ['href'],\n    MENUITEM: ['icon'],\n    HTML: ['manifest'],\n    VIDEO: ['poster']\n  };\n\n  if (attrName === 'itemid') {\n    return true;\n  }\n\n  var urlAttrNames = urlAttrs[tagName] || [];\n  return _.contains(urlAttrNames, attrName);\n}; // To get the protocol for a URL, we let the browser normalize it for\n// us, by setting it as the href for an anchor tag and then reading out\n// the 'protocol' property.\n\n\nif (Meteor.isClient) {\n  var anchorForNormalization = document.createElement('A');\n}\n\nvar getUrlProtocol = function (url) {\n  if (Meteor.isClient) {\n    anchorForNormalization.href = url;\n    return (anchorForNormalization.protocol || \"\").toLowerCase();\n  } else {\n    throw new Error('getUrlProtocol not implemented on the server');\n  }\n}; // UrlHandler is an attribute handler for all HTML attributes that take\n// URL values. It disallows javascript: URLs, unless\n// Blaze._allowJavascriptUrls() has been called. To detect javascript:\n// urls, we set the attribute on a dummy anchor element and then read\n// out the 'protocol' property of the attribute.\n\n\nvar origUpdate = AttributeHandler.prototype.update;\nvar UrlHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var self = this;\n    var args = arguments;\n\n    if (Blaze._javascriptUrlsAllowed()) {\n      origUpdate.apply(self, args);\n    } else {\n      var isJavascriptProtocol = getUrlProtocol(value) === \"javascript:\";\n      var isVBScriptProtocol = getUrlProtocol(value) === \"vbscript:\";\n\n      if (isJavascriptProtocol || isVBScriptProtocol) {\n        Blaze._warn(\"URLs that use the 'javascript:' or 'vbscript:' protocol are not \" + \"allowed in URL attribute values. \" + \"Call Blaze._allowJavascriptUrls() \" + \"to enable them.\");\n\n        origUpdate.apply(self, [element, oldValue, null]);\n      } else {\n        origUpdate.apply(self, args);\n      }\n    }\n  }\n}); // XXX make it possible for users to register attribute handlers!\n\nBlaze._makeAttributeHandler = function (elem, name, value) {\n  // generally, use setAttribute but certain attributes need to be set\n  // by directly setting a JavaScript property on the DOM element.\n  if (name === 'class') {\n    if (isSVGElement(elem)) {\n      return new SVGClassHandler(name, value);\n    } else {\n      return new ClassHandler(name, value);\n    }\n  } else if (name === 'style') {\n    return new StyleHandler(name, value);\n  } else if (elem.tagName === 'OPTION' && name === 'selected' || elem.tagName === 'INPUT' && name === 'checked' || elem.tagName === 'VIDEO' && name === 'muted') {\n    return new BooleanHandler(name, value);\n  } else if ((elem.tagName === 'TEXTAREA' || elem.tagName === 'INPUT') && name === 'value') {\n    // internally, TEXTAREAs tracks their value in the 'value'\n    // attribute just like INPUTs.\n    return new DOMPropertyHandler(name, value);\n  } else if (name.substring(0, 6) === 'xlink:') {\n    return new XlinkHandler(name.substring(6), value);\n  } else if (isUrlAttribute(elem.tagName, name)) {\n    return new UrlHandler(name, value);\n  } else {\n    return new AttributeHandler(name, value);\n  } // XXX will need one for 'style' on IE, though modern browsers\n  // seem to handle setAttribute ok.\n\n};\n\nElementAttributesUpdater = function (elem) {\n  this.elem = elem;\n  this.handlers = {};\n}; // Update attributes on `elem` to the dictionary `attrs`, whose\n// values are strings.\n\n\nElementAttributesUpdater.prototype.update = function (newAttrs) {\n  var elem = this.elem;\n  var handlers = this.handlers;\n\n  for (var k in meteorBabelHelpers.sanitizeForInObject(handlers)) {\n    if (!_.has(newAttrs, k)) {\n      // remove attributes (and handlers) for attribute names\n      // that don't exist as keys of `newAttrs` and so won't\n      // be visited when traversing it.  (Attributes that\n      // exist in the `newAttrs` object but are `null`\n      // are handled later.)\n      var handler = handlers[k];\n      var oldValue = handler.value;\n      handler.value = null;\n      handler.update(elem, oldValue, null);\n      delete handlers[k];\n    }\n  }\n\n  for (var k in meteorBabelHelpers.sanitizeForInObject(newAttrs)) {\n    var handler = null;\n    var oldValue = null;\n    var value = newAttrs[k];\n\n    if (!_.has(handlers, k)) {\n      if (value !== null) {\n        // make new handler\n        handler = Blaze._makeAttributeHandler(elem, k, value);\n        handlers[k] = handler;\n      }\n    } else {\n      handler = handlers[k];\n      oldValue = handler.value;\n    }\n\n    if (oldValue !== value) {\n      handler.value = value;\n      handler.update(elem, oldValue, value);\n      if (value === null) delete handlers[k];\n    }\n  }\n};","map":{"version":3,"sources":["packages/blaze/attrs.js"],"names":["jsUrlsAllowed","Blaze","_allowJavascriptUrls","_javascriptUrlsAllowed","AttributeHandler","name","value","_AttributeHandler","prototype","update","element","oldValue","removeAttribute","setAttribute","extend","options","curType","subType","AttributeHandlerSubtype","apply","arguments","_","_DiffingAttributeHandler","getCurrentValue","setValue","parseValue","joinValues","Error","oldAttrsMap","OrderedDict","attrsMap","currentAttrString","currentAttrsMap","forEach","key","i","has","append","values","push","ClassHandler","className","attrString","tokens","each","split","token","join","SVGClassHandler","baseVal","StyleHandler","getAttribute","style","regex","match","exec","remove","trim","BooleanHandler","DOMPropertyHandler","XlinkHandler","NS","removeAttributeNS","setAttributeNS","isSVGElement","elem","isUrlAttribute","tagName","attrName","urlAttrs","FORM","BODY","BLOCKQUOTE","Q","DEL","INS","OBJECT","APPLET","A","AREA","LINK","BASE","IMG","FRAME","IFRAME","HEAD","SCRIPT","INPUT","BUTTON","MENUITEM","HTML","VIDEO","urlAttrNames","contains","Meteor","isClient","anchorForNormalization","document","createElement","getUrlProtocol","url","href","protocol","toLowerCase","origUpdate","UrlHandler","self","args","isJavascriptProtocol","isVBScriptProtocol","_warn","_makeAttributeHandler","substring","ElementAttributesUpdater","handlers","newAttrs","k","handler"],"mappings":"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","sourcesContent":["var jsUrlsAllowed = false;\nBlaze._allowJavascriptUrls = function () {\n  jsUrlsAllowed = true;\n};\nBlaze._javascriptUrlsAllowed = function () {\n  return jsUrlsAllowed;\n};\n\n// An AttributeHandler object is responsible for updating a particular attribute\n// of a particular element.  AttributeHandler subclasses implement\n// browser-specific logic for dealing with particular attributes across\n// different browsers.\n//\n// To define a new type of AttributeHandler, use\n// `var FooHandler = AttributeHandler.extend({ update: function ... })`\n// where the `update` function takes arguments `(element, oldValue, value)`.\n// The `element` argument is always the same between calls to `update` on\n// the same instance.  `oldValue` and `value` are each either `null` or\n// a Unicode string of the type that might be passed to the value argument\n// of `setAttribute` (i.e. not an HTML string with character references).\n// When an AttributeHandler is installed, an initial call to `update` is\n// always made with `oldValue = null`.  The `update` method can access\n// `this.name` if the AttributeHandler class is a generic one that applies\n// to multiple attribute names.\n//\n// AttributeHandlers can store custom properties on `this`, as long as they\n// don't use the names `element`, `name`, `value`, and `oldValue`.\n//\n// AttributeHandlers can't influence how attributes appear in rendered HTML,\n// only how they are updated after materialization as DOM.\n\nAttributeHandler = function (name, value) {\n  this.name = name;\n  this.value = value;\n};\nBlaze._AttributeHandler = AttributeHandler;\n\nAttributeHandler.prototype.update = function (element, oldValue, value) {\n  if (value === null) {\n    if (oldValue !== null)\n      element.removeAttribute(this.name);\n  } else {\n    element.setAttribute(this.name, value);\n  }\n};\n\nAttributeHandler.extend = function (options) {\n  var curType = this;\n  var subType = function AttributeHandlerSubtype(/*arguments*/) {\n    AttributeHandler.apply(this, arguments);\n  };\n  subType.prototype = new curType;\n  subType.extend = curType.extend;\n  if (options)\n    _.extend(subType.prototype, options);\n  return subType;\n};\n\n/// Apply the diff between the attributes of \"oldValue\" and \"value\" to \"element.\"\n//\n// Each subclass must implement a parseValue method which takes a string\n// as an input and returns an ordered dict of attributes. The keys of the dict\n// are unique identifiers (ie. css properties in the case of styles), and the\n// values are the entire attribute which will be injected into the element.\n//\n// Extended below to support classes, SVG elements and styles.\n\nBlaze._DiffingAttributeHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    if (!this.getCurrentValue || !this.setValue || !this.parseValue || !this.joinValues)\n      throw new Error(\"Missing methods in subclass of 'DiffingAttributeHandler'\");\n\n    var oldAttrsMap = oldValue ? this.parseValue(oldValue) : new OrderedDict();\n    var attrsMap = value ? this.parseValue(value) : new OrderedDict();\n\n    // the current attributes on the element, which we will mutate.\n\n    var currentAttrString = this.getCurrentValue(element);\n    var currentAttrsMap = currentAttrString ? this.parseValue(currentAttrString) : new OrderedDict();\n\n    // Any outside changes to attributes we add at the end.\n    currentAttrsMap.forEach(function (value, key, i) {\n      // If the key already exists, we do not use the current value, but the new value.\n      if (attrsMap.has(key)) {\n        return;\n      }\n\n      // Key does not already exist, but it existed before. Which means it was explicitly\n      // removed, so we do not add it.\n      if (oldAttrsMap.has(key)) {\n        return;\n      }\n\n      attrsMap.append(key, value);\n    });\n\n    var values = [];\n    attrsMap.forEach(function (value, key, i) {\n      values.push(value);\n    });\n\n    this.setValue(element, this.joinValues(values));\n  }\n});\n\nvar ClassHandler = Blaze._DiffingAttributeHandler.extend({\n  // @param rawValue {String}\n  getCurrentValue: function (element) {\n    return element.className;\n  },\n  setValue: function (element, className) {\n    element.className = className;\n  },\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    _.each(attrString.split(' '), function(token) {\n      if (token) {\n        // Ordered dict requires unique keys.\n        if (! tokens.has(token)) {\n          tokens.append(token, token);\n        }\n      }\n    });\n    return tokens;\n  },\n  joinValues: function (values) {\n    return values.join(' ');\n  }\n});\n\nvar SVGClassHandler = ClassHandler.extend({\n  getCurrentValue: function (element) {\n    return element.className.baseVal;\n  },\n  setValue: function (element, className) {\n    element.setAttribute('class', className);\n  }\n});\n\nvar StyleHandler = Blaze._DiffingAttributeHandler.extend({\n  getCurrentValue: function (element) {\n    return element.getAttribute('style');\n  },\n  setValue: function (element, style) {\n    if (style === '') {\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('style', style);\n    }\n  },\n\n  // Parse a string to produce a map from property to attribute string.\n  //\n  // Example:\n  // \"color:red; foo:12px\" produces a token {color: \"color:red\", foo:\"foo:12px\"}\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    // Regex for parsing a css attribute declaration, taken from css-parse:\n    // https://github.com/reworkcss/css-parse/blob/7cef3658d0bba872cde05a85339034b187cb3397/index.js#L219\n    var regex = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*/g;\n    var match = regex.exec(attrString);\n    while (match) {\n      // match[0] = entire matching string\n      // match[1] = css property\n      // Prefix the token to prevent conflicts with existing properties.\n\n      // We use the last value for the same key.\n      if (tokens.has(match[1])) {\n        tokens.remove(match[1]);\n      }\n\n      tokens.append(match[1], match[0].trim());\n\n      match = regex.exec(attrString);\n    }\n\n    return tokens;\n  },\n\n  joinValues: function (values) {\n    // TODO: Assure that there is always ; between values. But what is an example where it breaks?\n    return values.join(' ');\n  }\n});\n\nvar BooleanHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value == null) {\n      if (oldValue != null)\n        element[name] = false;\n    } else {\n      element[name] = true;\n    }\n  }\n});\n\nvar DOMPropertyHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value !== element[name])\n      element[name] = value;\n  }\n});\n\n// attributes of the type 'xlink:something' should be set using\n// the correct namespace in order to work\nvar XlinkHandler = AttributeHandler.extend({\n  update: function(element, oldValue, value) {\n    var NS = 'http://www.w3.org/1999/xlink';\n    if (value === null) {\n      if (oldValue !== null)\n        element.removeAttributeNS(NS, this.name);\n    } else {\n      element.setAttributeNS(NS, this.name, this.value);\n    }\n  }\n});\n\n// cross-browser version of `instanceof SVGElement`\nvar isSVGElement = function (elem) {\n  return 'ownerSVGElement' in elem;\n};\n\nvar isUrlAttribute = function (tagName, attrName) {\n  // Compiled from http://www.w3.org/TR/REC-html40/index/attributes.html\n  // and\n  // http://www.w3.org/html/wg/drafts/html/master/index.html#attributes-1\n  var urlAttrs = {\n    FORM: ['action'],\n    BODY: ['background'],\n    BLOCKQUOTE: ['cite'],\n    Q: ['cite'],\n    DEL: ['cite'],\n    INS: ['cite'],\n    OBJECT: ['classid', 'codebase', 'data', 'usemap'],\n    APPLET: ['codebase'],\n    A: ['href'],\n    AREA: ['href'],\n    LINK: ['href'],\n    BASE: ['href'],\n    IMG: ['longdesc', 'src', 'usemap'],\n    FRAME: ['longdesc', 'src'],\n    IFRAME: ['longdesc', 'src'],\n    HEAD: ['profile'],\n    SCRIPT: ['src'],\n    INPUT: ['src', 'usemap', 'formaction'],\n    BUTTON: ['formaction'],\n    BASE: ['href'],\n    MENUITEM: ['icon'],\n    HTML: ['manifest'],\n    VIDEO: ['poster']\n  };\n\n  if (attrName === 'itemid') {\n    return true;\n  }\n\n  var urlAttrNames = urlAttrs[tagName] || [];\n  return _.contains(urlAttrNames, attrName);\n};\n\n// To get the protocol for a URL, we let the browser normalize it for\n// us, by setting it as the href for an anchor tag and then reading out\n// the 'protocol' property.\nif (Meteor.isClient) {\n  var anchorForNormalization = document.createElement('A');\n}\n\nvar getUrlProtocol = function (url) {\n  if (Meteor.isClient) {\n    anchorForNormalization.href = url;\n    return (anchorForNormalization.protocol || \"\").toLowerCase();\n  } else {\n    throw new Error('getUrlProtocol not implemented on the server');\n  }\n};\n\n// UrlHandler is an attribute handler for all HTML attributes that take\n// URL values. It disallows javascript: URLs, unless\n// Blaze._allowJavascriptUrls() has been called. To detect javascript:\n// urls, we set the attribute on a dummy anchor element and then read\n// out the 'protocol' property of the attribute.\nvar origUpdate = AttributeHandler.prototype.update;\nvar UrlHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var self = this;\n    var args = arguments;\n\n    if (Blaze._javascriptUrlsAllowed()) {\n      origUpdate.apply(self, args);\n    } else {\n      var isJavascriptProtocol = (getUrlProtocol(value) === \"javascript:\");\n      var isVBScriptProtocol   = (getUrlProtocol(value) === \"vbscript:\");\n      if (isJavascriptProtocol || isVBScriptProtocol) {\n        Blaze._warn(\"URLs that use the 'javascript:' or 'vbscript:' protocol are not \" +\n                    \"allowed in URL attribute values. \" +\n                    \"Call Blaze._allowJavascriptUrls() \" +\n                    \"to enable them.\");\n        origUpdate.apply(self, [element, oldValue, null]);\n      } else {\n        origUpdate.apply(self, args);\n      }\n    }\n  }\n});\n\n// XXX make it possible for users to register attribute handlers!\nBlaze._makeAttributeHandler = function (elem, name, value) {\n  // generally, use setAttribute but certain attributes need to be set\n  // by directly setting a JavaScript property on the DOM element.\n  if (name === 'class') {\n    if (isSVGElement(elem)) {\n      return new SVGClassHandler(name, value);\n    } else {\n      return new ClassHandler(name, value);\n    }\n  } else if (name === 'style') {\n    return new StyleHandler(name, value);\n  } else if ((elem.tagName === 'OPTION' && name === 'selected') ||\n             (elem.tagName === 'INPUT' && name === 'checked') ||\n             (elem.tagName === 'VIDEO' && name === 'muted')) {\n    return new BooleanHandler(name, value);\n  } else if ((elem.tagName === 'TEXTAREA' || elem.tagName === 'INPUT')\n             && name === 'value') {\n    // internally, TEXTAREAs tracks their value in the 'value'\n    // attribute just like INPUTs.\n    return new DOMPropertyHandler(name, value);\n  } else if (name.substring(0,6) === 'xlink:') {\n    return new XlinkHandler(name.substring(6), value);\n  } else if (isUrlAttribute(elem.tagName, name)) {\n    return new UrlHandler(name, value);\n  } else {\n    return new AttributeHandler(name, value);\n  }\n\n  // XXX will need one for 'style' on IE, though modern browsers\n  // seem to handle setAttribute ok.\n};\n\n\nElementAttributesUpdater = function (elem) {\n  this.elem = elem;\n  this.handlers = {};\n};\n\n// Update attributes on `elem` to the dictionary `attrs`, whose\n// values are strings.\nElementAttributesUpdater.prototype.update = function(newAttrs) {\n  var elem = this.elem;\n  var handlers = this.handlers;\n\n  for (var k in handlers) {\n    if (! _.has(newAttrs, k)) {\n      // remove attributes (and handlers) for attribute names\n      // that don't exist as keys of `newAttrs` and so won't\n      // be visited when traversing it.  (Attributes that\n      // exist in the `newAttrs` object but are `null`\n      // are handled later.)\n      var handler = handlers[k];\n      var oldValue = handler.value;\n      handler.value = null;\n      handler.update(elem, oldValue, null);\n      delete handlers[k];\n    }\n  }\n\n  for (var k in newAttrs) {\n    var handler = null;\n    var oldValue = null;\n    var value = newAttrs[k];\n    if (! _.has(handlers, k)) {\n      if (value !== null) {\n        // make new handler\n        handler = Blaze._makeAttributeHandler(elem, k, value);\n        handlers[k] = handler;\n      }\n    } else {\n      handler = handlers[k];\n      oldValue = handler.value;\n    }\n    if (oldValue !== value) {\n      handler.value = value;\n      handler.update(elem, oldValue, value);\n      if (value === null)\n        delete handlers[k];\n    }\n  }\n};\n"]},"sourceType":"module","hash":"983d96d9c4f53d1f5cfd0cb9e21275d275f3f442"}
