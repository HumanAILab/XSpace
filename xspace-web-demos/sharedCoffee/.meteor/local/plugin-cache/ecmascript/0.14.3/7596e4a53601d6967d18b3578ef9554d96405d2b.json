{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/GLTFLoader.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/three/GLTFLoader.js","filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/GLTFLoader.js","passPerPreset":false,"envName":"development","cwd":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","root":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/GLTFLoader.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/three/GLTFLoader.js"}},"code":"!function (module1) {\n  module1.export({\n    GLTFLoader: () => GLTFLoader\n  });\n  let AnimationClip, Bone, Box3, BufferAttribute, BufferGeometry, CanvasTexture, ClampToEdgeWrapping, Color, DirectionalLight, DoubleSide, FileLoader, FrontSide, Group, ImageBitmapLoader, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, Line, LineBasicMaterial, LineLoop, LineSegments, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, Loader, LoaderUtils, Material, MathUtils, Matrix4, Mesh, MeshBasicMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NumberKeyframeTrack, Object3D, OrthographicCamera, PerspectiveCamera, PointLight, Points, PointsMaterial, PropertyBinding, QuaternionKeyframeTrack, RGBAFormat, RGBFormat, RepeatWrapping, Skeleton, SkinnedMesh, Sphere, SpotLight, TangentSpaceNormalMap, TextureLoader, TriangleFanDrawMode, TriangleStripDrawMode, Vector2, Vector3, VectorKeyframeTrack, sRGBEncoding;\n  module1.link(\"./three.module.js\", {\n    AnimationClip(v) {\n      AnimationClip = v;\n    },\n\n    Bone(v) {\n      Bone = v;\n    },\n\n    Box3(v) {\n      Box3 = v;\n    },\n\n    BufferAttribute(v) {\n      BufferAttribute = v;\n    },\n\n    BufferGeometry(v) {\n      BufferGeometry = v;\n    },\n\n    CanvasTexture(v) {\n      CanvasTexture = v;\n    },\n\n    ClampToEdgeWrapping(v) {\n      ClampToEdgeWrapping = v;\n    },\n\n    Color(v) {\n      Color = v;\n    },\n\n    DirectionalLight(v) {\n      DirectionalLight = v;\n    },\n\n    DoubleSide(v) {\n      DoubleSide = v;\n    },\n\n    FileLoader(v) {\n      FileLoader = v;\n    },\n\n    FrontSide(v) {\n      FrontSide = v;\n    },\n\n    Group(v) {\n      Group = v;\n    },\n\n    ImageBitmapLoader(v) {\n      ImageBitmapLoader = v;\n    },\n\n    InterleavedBuffer(v) {\n      InterleavedBuffer = v;\n    },\n\n    InterleavedBufferAttribute(v) {\n      InterleavedBufferAttribute = v;\n    },\n\n    Interpolant(v) {\n      Interpolant = v;\n    },\n\n    InterpolateDiscrete(v) {\n      InterpolateDiscrete = v;\n    },\n\n    InterpolateLinear(v) {\n      InterpolateLinear = v;\n    },\n\n    Line(v) {\n      Line = v;\n    },\n\n    LineBasicMaterial(v) {\n      LineBasicMaterial = v;\n    },\n\n    LineLoop(v) {\n      LineLoop = v;\n    },\n\n    LineSegments(v) {\n      LineSegments = v;\n    },\n\n    LinearFilter(v) {\n      LinearFilter = v;\n    },\n\n    LinearMipmapLinearFilter(v) {\n      LinearMipmapLinearFilter = v;\n    },\n\n    LinearMipmapNearestFilter(v) {\n      LinearMipmapNearestFilter = v;\n    },\n\n    Loader(v) {\n      Loader = v;\n    },\n\n    LoaderUtils(v) {\n      LoaderUtils = v;\n    },\n\n    Material(v) {\n      Material = v;\n    },\n\n    MathUtils(v) {\n      MathUtils = v;\n    },\n\n    Matrix4(v) {\n      Matrix4 = v;\n    },\n\n    Mesh(v) {\n      Mesh = v;\n    },\n\n    MeshBasicMaterial(v) {\n      MeshBasicMaterial = v;\n    },\n\n    MeshPhysicalMaterial(v) {\n      MeshPhysicalMaterial = v;\n    },\n\n    MeshStandardMaterial(v) {\n      MeshStandardMaterial = v;\n    },\n\n    MirroredRepeatWrapping(v) {\n      MirroredRepeatWrapping = v;\n    },\n\n    NearestFilter(v) {\n      NearestFilter = v;\n    },\n\n    NearestMipmapLinearFilter(v) {\n      NearestMipmapLinearFilter = v;\n    },\n\n    NearestMipmapNearestFilter(v) {\n      NearestMipmapNearestFilter = v;\n    },\n\n    NumberKeyframeTrack(v) {\n      NumberKeyframeTrack = v;\n    },\n\n    Object3D(v) {\n      Object3D = v;\n    },\n\n    OrthographicCamera(v) {\n      OrthographicCamera = v;\n    },\n\n    PerspectiveCamera(v) {\n      PerspectiveCamera = v;\n    },\n\n    PointLight(v) {\n      PointLight = v;\n    },\n\n    Points(v) {\n      Points = v;\n    },\n\n    PointsMaterial(v) {\n      PointsMaterial = v;\n    },\n\n    PropertyBinding(v) {\n      PropertyBinding = v;\n    },\n\n    QuaternionKeyframeTrack(v) {\n      QuaternionKeyframeTrack = v;\n    },\n\n    RGBAFormat(v) {\n      RGBAFormat = v;\n    },\n\n    RGBFormat(v) {\n      RGBFormat = v;\n    },\n\n    RepeatWrapping(v) {\n      RepeatWrapping = v;\n    },\n\n    Skeleton(v) {\n      Skeleton = v;\n    },\n\n    SkinnedMesh(v) {\n      SkinnedMesh = v;\n    },\n\n    Sphere(v) {\n      Sphere = v;\n    },\n\n    SpotLight(v) {\n      SpotLight = v;\n    },\n\n    TangentSpaceNormalMap(v) {\n      TangentSpaceNormalMap = v;\n    },\n\n    TextureLoader(v) {\n      TextureLoader = v;\n    },\n\n    TriangleFanDrawMode(v) {\n      TriangleFanDrawMode = v;\n    },\n\n    TriangleStripDrawMode(v) {\n      TriangleStripDrawMode = v;\n    },\n\n    Vector2(v) {\n      Vector2 = v;\n    },\n\n    Vector3(v) {\n      Vector3 = v;\n    },\n\n    VectorKeyframeTrack(v) {\n      VectorKeyframeTrack = v;\n    },\n\n    sRGBEncoding(v) {\n      sRGBEncoding = v;\n    }\n\n  }, 0);\n\n  var GLTFLoader = function () {\n    function GLTFLoader(manager) {\n      Loader.call(this, manager);\n      this.dracoLoader = null;\n      this.ddsLoader = null;\n      this.pluginCallbacks = [];\n      this.register(function (parser) {\n        return new GLTFMaterialsClearcoatExtension(parser);\n      });\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n      constructor: GLTFLoader,\n      load: function (url, onLoad, onProgress, onError) {\n        var scope = this;\n        var resourcePath;\n\n        if (this.resourcePath !== '') {\n          resourcePath = this.resourcePath;\n        } else if (this.path !== '') {\n          resourcePath = this.path;\n        } else {\n          resourcePath = LoaderUtils.extractUrlBase(url);\n        } // Tells the LoadingManager to track an extra item, which resolves after\n        // the model is fully loaded. This means the count of items loaded will\n        // be incorrect, but ensures manager.onLoad() does not fire early.\n\n\n        scope.manager.itemStart(url);\n\n        var _onError = function (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        };\n\n        var loader = new FileLoader(scope.manager);\n        loader.setPath(this.path);\n        loader.setResponseType('arraybuffer');\n        loader.setRequestHeader(this.requestHeader);\n\n        if (scope.crossOrigin === 'use-credentials') {\n          loader.setWithCredentials(true);\n        }\n\n        loader.load(url, function (data) {\n          try {\n            scope.parse(data, resourcePath, function (gltf) {\n              onLoad(gltf);\n              scope.manager.itemEnd(url);\n            }, _onError);\n          } catch (e) {\n            _onError(e);\n          }\n        }, onProgress, _onError);\n      },\n      setDRACOLoader: function (dracoLoader) {\n        this.dracoLoader = dracoLoader;\n        return this;\n      },\n      setDDSLoader: function (ddsLoader) {\n        this.ddsLoader = ddsLoader;\n        return this;\n      },\n      register: function (callback) {\n        if (this.pluginCallbacks.indexOf(callback) === -1) {\n          this.pluginCallbacks.push(callback);\n        }\n\n        return this;\n      },\n      unregister: function (callback) {\n        if (this.pluginCallbacks.indexOf(callback) !== -1) {\n          this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(callback), 1);\n        }\n\n        return this;\n      },\n      parse: function (data, path, onLoad, onError) {\n        var content;\n        var extensions = {};\n        var plugins = {};\n\n        if (typeof data === 'string') {\n          content = data;\n        } else {\n          var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n          if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n            try {\n              extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n            } catch (error) {\n              if (onError) onError(error);\n              return;\n            }\n\n            content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n          } else {\n            content = LoaderUtils.decodeText(new Uint8Array(data));\n          }\n        }\n\n        var json = JSON.parse(content);\n\n        if (json.asset === undefined || json.asset.version[0] < 2) {\n          if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n          return;\n        }\n\n        var parser = new GLTFParser(json, {\n          path: path || this.resourcePath || '',\n          crossOrigin: this.crossOrigin,\n          manager: this.manager\n        });\n        parser.fileLoader.setRequestHeader(this.requestHeader);\n\n        for (var i = 0; i < this.pluginCallbacks.length; i++) {\n          var plugin = this.pluginCallbacks[i](parser);\n          plugins[plugin.name] = plugin; // Workaround to avoid determining as unknown extension\n          // in addUnknownExtensionsToUserData().\n          // Remove this workaround if we move all the existing\n          // extension handlers to plugin system\n\n          extensions[plugin.name] = true;\n        }\n\n        if (json.extensionsUsed) {\n          for (var i = 0; i < json.extensionsUsed.length; ++i) {\n            var extensionName = json.extensionsUsed[i];\n            var extensionsRequired = json.extensionsRequired || [];\n\n            switch (extensionName) {\n              case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                extensions[extensionName] = new GLTFLightsExtension(json);\n                break;\n\n              case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                break;\n\n              case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                break;\n\n              case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                break;\n\n              case EXTENSIONS.MSFT_TEXTURE_DDS:\n                extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                break;\n\n              case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                extensions[extensionName] = new GLTFTextureTransformExtension();\n                break;\n\n              case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                break;\n\n              default:\n                if (extensionsRequired.indexOf(extensionName) >= 0 && plugins[extensionName] === undefined) {\n                  console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                }\n\n            }\n          }\n        }\n\n        parser.setExtensions(extensions);\n        parser.setPlugins(plugins);\n        parser.parse(onLoad, onError);\n      }\n    });\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n      var objects = {};\n      return {\n        get: function (key) {\n          return objects[key];\n        },\n        add: function (key, object) {\n          objects[key] = object;\n        },\n        remove: function (key) {\n          delete objects[key];\n        },\n        removeAll: function () {\n          objects = {};\n        }\n      };\n    }\n    /*********************************/\n\n    /********** EXTENSIONS ***********/\n\n    /*********************************/\n\n\n    var EXTENSIONS = {\n      KHR_BINARY_GLTF: 'KHR_binary_glTF',\n      KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n      KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n      KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n      KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n      KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n      KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n      KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n      MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n\n    function GLTFTextureDDSExtension(ddsLoader) {\n      if (!ddsLoader) {\n        throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n      }\n\n      this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n      this.ddsLoader = ddsLoader;\n    }\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n\n\n    function GLTFLightsExtension(json) {\n      this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n      var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] || {};\n      this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n      var lightDef = this.lightDefs[lightIndex];\n      var lightNode;\n      var color = new Color(0xffffff);\n      if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n      var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n      switch (lightDef.type) {\n        case 'directional':\n          lightNode = new DirectionalLight(color);\n          lightNode.target.position.set(0, 0, -1);\n          lightNode.add(lightNode.target);\n          break;\n\n        case 'point':\n          lightNode = new PointLight(color);\n          lightNode.distance = range;\n          break;\n\n        case 'spot':\n          lightNode = new SpotLight(color);\n          lightNode.distance = range; // Handle spotlight properties.\n\n          lightDef.spot = lightDef.spot || {};\n          lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n          lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n          lightNode.angle = lightDef.spot.outerConeAngle;\n          lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n          lightNode.target.position.set(0, 0, -1);\n          lightNode.add(lightNode.target);\n          break;\n\n        default:\n          throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n      } // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n      // here, because node-level parsing will only override position if explicitly specified.\n\n\n      lightNode.position.set(0, 0, 0);\n      lightNode.decay = 2;\n      if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n      lightNode.name = lightDef.name || 'light_' + lightIndex;\n      return Promise.resolve(lightNode);\n    };\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n\n\n    function GLTFMaterialsUnlitExtension() {\n      this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n      return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n      var pending = [];\n      materialParams.color = new Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n      var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n      if (metallicRoughness) {\n        if (Array.isArray(metallicRoughness.baseColorFactor)) {\n          var array = metallicRoughness.baseColorFactor;\n          materialParams.color.fromArray(array);\n          materialParams.opacity = array[3];\n        }\n\n        if (metallicRoughness.baseColorTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n        }\n      }\n\n      return Promise.all(pending);\n    };\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n\n\n    function GLTFMaterialsClearcoatExtension(parser) {\n      this.parser = parser;\n      this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ()\n    /* materialIndex */\n    {\n      return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function (materialIndex, materialParams) {\n      var parser = this.parser;\n      var materialDef = parser.json.materials[materialIndex];\n\n      if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n        return Promise.resolve();\n      }\n\n      var pending = [];\n      var extension = materialDef.extensions[this.name];\n\n      if (extension.clearcoatFactor !== undefined) {\n        materialParams.clearcoat = extension.clearcoatFactor;\n      }\n\n      if (extension.clearcoatTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n      }\n\n      if (extension.clearcoatRoughnessFactor !== undefined) {\n        materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n      }\n\n      if (extension.clearcoatRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture));\n      }\n\n      if (extension.clearcoatNormalTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n        if (extension.clearcoatNormalTexture.scale !== undefined) {\n          var scale = extension.clearcoatNormalTexture.scale;\n          materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n        }\n      }\n\n      return Promise.all(pending);\n    };\n    /* BINARY EXTENSION */\n\n\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = {\n      JSON: 0x4E4F534A,\n      BIN: 0x004E4942\n    };\n\n    function GLTFBinaryExtension(data) {\n      this.name = EXTENSIONS.KHR_BINARY_GLTF;\n      this.content = null;\n      this.body = null;\n      var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n      this.header = {\n        magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n        version: headerView.getUint32(4, true),\n        length: headerView.getUint32(8, true)\n      };\n\n      if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n        throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n      } else if (this.header.version < 2.0) {\n        throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n      }\n\n      var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n      var chunkIndex = 0;\n\n      while (chunkIndex < chunkView.byteLength) {\n        var chunkLength = chunkView.getUint32(chunkIndex, true);\n        chunkIndex += 4;\n        var chunkType = chunkView.getUint32(chunkIndex, true);\n        chunkIndex += 4;\n\n        if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n          var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n          this.content = LoaderUtils.decodeText(contentArray);\n        } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n          var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n          this.body = data.slice(byteOffset, byteOffset + chunkLength);\n        } // Clients must ignore chunks with unknown types.\n\n\n        chunkIndex += chunkLength;\n      }\n\n      if (this.content === null) {\n        throw new Error('THREE.GLTFLoader: JSON content not found.');\n      }\n    }\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n\n\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n      if (!dracoLoader) {\n        throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n      }\n\n      this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n      this.json = json;\n      this.dracoLoader = dracoLoader;\n      this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n      var json = this.json;\n      var dracoLoader = this.dracoLoader;\n      var bufferViewIndex = primitive.extensions[this.name].bufferView;\n      var gltfAttributeMap = primitive.extensions[this.name].attributes;\n      var threeAttributeMap = {};\n      var attributeNormalizedMap = {};\n      var attributeTypeMap = {};\n\n      for (var attributeName in gltfAttributeMap) {\n        var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n        threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n      }\n\n      for (attributeName in primitive.attributes) {\n        var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n        if (gltfAttributeMap[attributeName] !== undefined) {\n          var accessorDef = json.accessors[primitive.attributes[attributeName]];\n          var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n          attributeTypeMap[threeAttributeName] = componentType;\n          attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n        }\n      }\n\n      return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n        return new Promise(function (resolve) {\n          dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n            for (var attributeName in geometry.attributes) {\n              var attribute = geometry.attributes[attributeName];\n              var normalized = attributeNormalizedMap[attributeName];\n              if (normalized !== undefined) attribute.normalized = normalized;\n            }\n\n            resolve(geometry);\n          }, threeAttributeMap, attributeTypeMap);\n        });\n      });\n    };\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n\n\n    function GLTFTextureTransformExtension() {\n      this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n      texture = texture.clone();\n\n      if (transform.offset !== undefined) {\n        texture.offset.fromArray(transform.offset);\n      }\n\n      if (transform.rotation !== undefined) {\n        texture.rotation = transform.rotation;\n      }\n\n      if (transform.scale !== undefined) {\n        texture.repeat.fromArray(transform.scale);\n      }\n\n      if (transform.texCoord !== undefined) {\n        console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n      }\n\n      texture.needsUpdate = true;\n      return texture;\n    };\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n\n    function GLTFMeshStandardSGMaterial(params) {\n      MeshStandardMaterial.call(this);\n      this.isGLTFSpecularGlossinessMaterial = true; //various chunks that need replacing\n\n      var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join('\\n');\n      var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '\tuniform sampler2D glossinessMap;', '#endif'].join('\\n');\n      var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '\tvec4 texelSpecular = texture2D( specularMap, vUv );', '\ttexelSpecular = sRGBToLinear( texelSpecular );', '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tspecularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n      var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );', '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tglossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n      var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );', 'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );', 'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.', 'material.specularRoughness += geometryRoughness;', 'material.specularRoughness = min( material.specularRoughness, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n      var uniforms = {\n        specular: {\n          value: new Color().setHex(0xffffff)\n        },\n        glossiness: {\n          value: 1\n        },\n        specularMap: {\n          value: null\n        },\n        glossinessMap: {\n          value: null\n        }\n      };\n      this._extraUniforms = uniforms; // please see #14031 or #13198 for an alternate approach\n\n      this.onBeforeCompile = function (shader) {\n        for (var uniformName in uniforms) {\n          shader.uniforms[uniformName] = uniforms[uniformName];\n        }\n\n        shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n        shader.fragmentShader = shader.fragmentShader.replace('uniform float metalness;', 'uniform float glossiness;');\n        shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk);\n        shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk);\n        shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_fragment>', specularMapFragmentChunk);\n        shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk);\n        shader.fragmentShader = shader.fragmentShader.replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n      };\n      /*eslint-disable*/\n\n\n      Object.defineProperties(this, {\n        specular: {\n          get: function () {\n            return uniforms.specular.value;\n          },\n          set: function (v) {\n            uniforms.specular.value = v;\n          }\n        },\n        specularMap: {\n          get: function () {\n            return uniforms.specularMap.value;\n          },\n          set: function (v) {\n            uniforms.specularMap.value = v;\n          }\n        },\n        glossiness: {\n          get: function () {\n            return uniforms.glossiness.value;\n          },\n          set: function (v) {\n            uniforms.glossiness.value = v;\n          }\n        },\n        glossinessMap: {\n          get: function () {\n            return uniforms.glossinessMap.value;\n          },\n          set: function (v) {\n            uniforms.glossinessMap.value = v; //how about something like this - @pailhead\n\n            if (v) {\n              this.defines.USE_GLOSSINESSMAP = ''; // set USE_ROUGHNESSMAP to enable vUv\n\n              this.defines.USE_ROUGHNESSMAP = '';\n            } else {\n              delete this.defines.USE_ROUGHNESSMAP;\n              delete this.defines.USE_GLOSSINESSMAP;\n            }\n          }\n        }\n      });\n      /*eslint-enable*/\n\n      delete this.metalness;\n      delete this.roughness;\n      delete this.metalnessMap;\n      delete this.roughnessMap;\n      this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n      MeshStandardMaterial.prototype.copy.call(this, source);\n      this.specularMap = source.specularMap;\n      this.specular.copy(source.specular);\n      this.glossinessMap = source.glossinessMap;\n      this.glossiness = source.glossiness;\n      delete this.metalness;\n      delete this.roughness;\n      delete this.metalnessMap;\n      delete this.roughnessMap;\n      return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n      return {\n        name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n        specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'normalMapType', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n        getMaterialType: function () {\n          return GLTFMeshStandardSGMaterial;\n        },\n        extendParams: function (materialParams, materialDef, parser) {\n          var pbrSpecularGlossiness = materialDef.extensions[this.name];\n          materialParams.color = new Color(1.0, 1.0, 1.0);\n          materialParams.opacity = 1.0;\n          var pending = [];\n\n          if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n            var array = pbrSpecularGlossiness.diffuseFactor;\n            materialParams.color.fromArray(array);\n            materialParams.opacity = array[3];\n          }\n\n          if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n          }\n\n          materialParams.emissive = new Color(0.0, 0.0, 0.0);\n          materialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n          materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n          if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n            materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n          }\n\n          if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n            var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n            pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n            pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n          }\n\n          return Promise.all(pending);\n        },\n        createMaterial: function (materialParams) {\n          var material = new GLTFMeshStandardSGMaterial(materialParams);\n          material.fog = true;\n          material.color = materialParams.color;\n          material.map = materialParams.map === undefined ? null : materialParams.map;\n          material.lightMap = null;\n          material.lightMapIntensity = 1.0;\n          material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n          material.aoMapIntensity = 1.0;\n          material.emissive = materialParams.emissive;\n          material.emissiveIntensity = 1.0;\n          material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n          material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n          material.bumpScale = 1;\n          material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n          material.normalMapType = TangentSpaceNormalMap;\n          if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n          material.displacementMap = null;\n          material.displacementScale = 1;\n          material.displacementBias = 0;\n          material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n          material.specular = materialParams.specular;\n          material.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n          material.glossiness = materialParams.glossiness;\n          material.alphaMap = null;\n          material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n          material.envMapIntensity = 1.0;\n          material.refractionRatio = 0.98;\n          return material;\n        }\n      };\n    }\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n\n\n    function GLTFMeshQuantizationExtension() {\n      this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n    /*********************************/\n\n    /********** INTERPOLATION ********/\n\n    /*********************************/\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\n\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n      // Copies a sample value to the result buffer. See description of glTF\n      // CUBICSPLINE values layout in interpolate_() function below.\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          valueSize = this.valueSize,\n          offset = index * valueSize * 3 + valueSize;\n\n      for (var i = 0; i !== valueSize; i++) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n      var result = this.resultBuffer;\n      var values = this.sampleValues;\n      var stride = this.valueSize;\n      var stride2 = stride * 2;\n      var stride3 = stride * 3;\n      var td = t1 - t0;\n      var p = (t - t0) / td;\n      var pp = p * p;\n      var ppp = pp * p;\n      var offset1 = i1 * stride3;\n      var offset0 = offset1 - stride3;\n      var s2 = -2 * ppp + 3 * pp;\n      var s3 = ppp - pp;\n      var s0 = 1 - s2;\n      var s1 = s3 - pp + p; // Layout of keyframe output values for CUBICSPLINE animations:\n      //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\n      for (var i = 0; i !== stride; i++) {\n        var p0 = values[offset0 + i + stride]; // splineVertex_k\n\n        var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n\n        var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n\n        var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n        result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n      }\n\n      return result;\n    };\n    /*********************************/\n\n    /********** INTERNALS ************/\n\n    /*********************************/\n\n    /* CONSTANTS */\n\n\n    var WEBGL_CONSTANTS = {\n      FLOAT: 5126,\n      //FLOAT_MAT2: 35674,\n      FLOAT_MAT3: 35675,\n      FLOAT_MAT4: 35676,\n      FLOAT_VEC2: 35664,\n      FLOAT_VEC3: 35665,\n      FLOAT_VEC4: 35666,\n      LINEAR: 9729,\n      REPEAT: 10497,\n      SAMPLER_2D: 35678,\n      POINTS: 0,\n      LINES: 1,\n      LINE_LOOP: 2,\n      LINE_STRIP: 3,\n      TRIANGLES: 4,\n      TRIANGLE_STRIP: 5,\n      TRIANGLE_FAN: 6,\n      UNSIGNED_BYTE: 5121,\n      UNSIGNED_SHORT: 5123\n    };\n    var WEBGL_COMPONENT_TYPES = {\n      5120: Int8Array,\n      5121: Uint8Array,\n      5122: Int16Array,\n      5123: Uint16Array,\n      5125: Uint32Array,\n      5126: Float32Array\n    };\n    var WEBGL_FILTERS = {\n      9728: NearestFilter,\n      9729: LinearFilter,\n      9984: NearestMipmapNearestFilter,\n      9985: LinearMipmapNearestFilter,\n      9986: NearestMipmapLinearFilter,\n      9987: LinearMipmapLinearFilter\n    };\n    var WEBGL_WRAPPINGS = {\n      33071: ClampToEdgeWrapping,\n      33648: MirroredRepeatWrapping,\n      10497: RepeatWrapping\n    };\n    var WEBGL_TYPE_SIZES = {\n      'SCALAR': 1,\n      'VEC2': 2,\n      'VEC3': 3,\n      'VEC4': 4,\n      'MAT2': 4,\n      'MAT3': 9,\n      'MAT4': 16\n    };\n    var ATTRIBUTES = {\n      POSITION: 'position',\n      NORMAL: 'normal',\n      TANGENT: 'tangent',\n      TEXCOORD_0: 'uv',\n      TEXCOORD_1: 'uv2',\n      COLOR_0: 'color',\n      WEIGHTS_0: 'skinWeight',\n      JOINTS_0: 'skinIndex'\n    };\n    var PATH_PROPERTIES = {\n      scale: 'scale',\n      translation: 'position',\n      rotation: 'quaternion',\n      weights: 'morphTargetInfluences'\n    };\n    var INTERPOLATION = {\n      CUBICSPLINE: undefined,\n      // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n      // keyframe track will be initialized with a default interpolation type, then modified.\n      LINEAR: InterpolateLinear,\n      STEP: InterpolateDiscrete\n    };\n    var ALPHA_MODES = {\n      OPAQUE: 'OPAQUE',\n      MASK: 'MASK',\n      BLEND: 'BLEND'\n    };\n    var MIME_TYPE_FORMATS = {\n      'image/png': RGBAFormat,\n      'image/jpeg': RGBFormat\n    };\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n      // Invalid URL\n      if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n      if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n        path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n      } // Absolute URL http://,https://,//\n\n\n      if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n      if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n      if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n      return path + url;\n    }\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n\n\n    function createDefaultMaterial(cache) {\n      if (cache['DefaultMaterial'] === undefined) {\n        cache['DefaultMaterial'] = new MeshStandardMaterial({\n          color: 0xFFFFFF,\n          emissive: 0x000000,\n          metalness: 1,\n          roughness: 1,\n          transparent: false,\n          depthTest: true,\n          side: FrontSide\n        });\n      }\n\n      return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n      // Add unknown glTF extensions to an object's userData.\n      for (var name in objectDef.extensions) {\n        if (knownExtensions[name] === undefined) {\n          object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n          object.userData.gltfExtensions[name] = objectDef.extensions[name];\n        }\n      }\n    }\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n\n\n    function assignExtrasToUserData(object, gltfDef) {\n      if (gltfDef.extras !== undefined) {\n        if (typeof gltfDef.extras === 'object') {\n          Object.assign(object.userData, gltfDef.extras);\n        } else {\n          console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n        }\n      }\n    }\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n\n\n    function addMorphTargets(geometry, targets, parser) {\n      var hasMorphPosition = false;\n      var hasMorphNormal = false;\n\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n        if (target.POSITION !== undefined) hasMorphPosition = true;\n        if (target.NORMAL !== undefined) hasMorphNormal = true;\n        if (hasMorphPosition && hasMorphNormal) break;\n      }\n\n      if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n      var pendingPositionAccessors = [];\n      var pendingNormalAccessors = [];\n\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n\n        if (hasMorphPosition) {\n          var pendingAccessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION) : geometry.attributes.position;\n          pendingPositionAccessors.push(pendingAccessor);\n        }\n\n        if (hasMorphNormal) {\n          var pendingAccessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL) : geometry.attributes.normal;\n          pendingNormalAccessors.push(pendingAccessor);\n        }\n      }\n\n      return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (accessors) {\n        var morphPositions = accessors[0];\n        var morphNormals = accessors[1];\n        if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n        if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n        geometry.morphTargetsRelative = true;\n        return geometry;\n      });\n    }\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n\n\n    function updateMorphTargets(mesh, meshDef) {\n      mesh.updateMorphTargets();\n\n      if (meshDef.weights !== undefined) {\n        for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n          mesh.morphTargetInfluences[i] = meshDef.weights[i];\n        }\n      } // .extras has user-defined data, so check that .extras.targetNames is an array.\n\n\n      if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n        var targetNames = meshDef.extras.targetNames;\n\n        if (mesh.morphTargetInfluences.length === targetNames.length) {\n          mesh.morphTargetDictionary = {};\n\n          for (var i = 0, il = targetNames.length; i < il; i++) {\n            mesh.morphTargetDictionary[targetNames[i]] = i;\n          }\n        } else {\n          console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n        }\n      }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n      var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n      var geometryKey;\n\n      if (dracoExtension) {\n        geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey(dracoExtension.attributes);\n      } else {\n        geometryKey = primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n      }\n\n      return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n      var attributesKey = '';\n      var keys = Object.keys(attributes).sort();\n\n      for (var i = 0, il = keys.length; i < il; i++) {\n        attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n      }\n\n      return attributesKey;\n    }\n    /* GLTF PARSER */\n\n\n    function GLTFParser(json, options) {\n      this.json = json || {};\n      this.extensions = {};\n      this.plugins = {};\n      this.options = options || {}; // loader object cache\n\n      this.cache = new GLTFRegistry(); // associations between Three.js objects and glTF elements\n\n      this.associations = new Map(); // BufferGeometry caching\n\n      this.primitiveCache = {}; // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n      // expensive work of uploading a texture to the GPU off the main thread.\n\n      if (typeof createImageBitmap !== 'undefined' && /Firefox/.test(navigator.userAgent) === false) {\n        this.textureLoader = new ImageBitmapLoader(this.options.manager);\n      } else {\n        this.textureLoader = new TextureLoader(this.options.manager);\n      }\n\n      this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n      this.fileLoader = new FileLoader(this.options.manager);\n      this.fileLoader.setResponseType('arraybuffer');\n\n      if (this.options.crossOrigin === 'use-credentials') {\n        this.fileLoader.setWithCredentials(true);\n      }\n    }\n\n    GLTFParser.prototype.setExtensions = function (extensions) {\n      this.extensions = extensions;\n    };\n\n    GLTFParser.prototype.setPlugins = function (plugins) {\n      this.plugins = plugins;\n    };\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n      var parser = this;\n      var json = this.json;\n      var extensions = this.extensions; // Clear the loader cache\n\n      this.cache.removeAll(); // Mark the special nodes/meshes in json for efficient parse\n\n      this.markDefs();\n      Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')]).then(function (dependencies) {\n        var result = {\n          scene: dependencies[0][json.scene || 0],\n          scenes: dependencies[0],\n          animations: dependencies[1],\n          cameras: dependencies[2],\n          asset: json.asset,\n          parser: parser,\n          userData: {}\n        };\n        addUnknownExtensionsToUserData(extensions, result, json);\n        assignExtrasToUserData(result, json);\n        onLoad(result);\n      }).catch(onError);\n    };\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n\n\n    GLTFParser.prototype.markDefs = function () {\n      var nodeDefs = this.json.nodes || [];\n      var skinDefs = this.json.skins || [];\n      var meshDefs = this.json.meshes || [];\n      var meshReferences = {};\n      var meshUses = {}; // Nothing in the node definition indicates whether it is a Bone or an\n      // Object3D. Use the skins' joint references to mark bones.\n\n      for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n        var joints = skinDefs[skinIndex].joints;\n\n        for (var i = 0, il = joints.length; i < il; i++) {\n          nodeDefs[joints[i]].isBone = true;\n        }\n      } // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n      // avoid having more than one Mesh with the same name, count\n      // references and rename instances below.\n      //\n      // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\n\n      for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n        var nodeDef = nodeDefs[nodeIndex];\n\n        if (nodeDef.mesh !== undefined) {\n          if (meshReferences[nodeDef.mesh] === undefined) {\n            meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n          }\n\n          meshReferences[nodeDef.mesh]++; // Nothing in the mesh definition indicates whether it is\n          // a SkinnedMesh or Mesh. Use the node's mesh reference\n          // to mark SkinnedMesh if node has skin.\n\n          if (nodeDef.skin !== undefined) {\n            meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n          }\n        }\n      }\n\n      this.json.meshReferences = meshReferences;\n      this.json.meshUses = meshUses;\n    };\n\n    GLTFParser.prototype._invokeOne = function (func) {\n      var extensions = Object.values(this.plugins);\n      extensions.push(this);\n\n      for (var i = 0; i < extensions.length; i++) {\n        var result = func(extensions[i]);\n        if (result) return result;\n      }\n    };\n\n    GLTFParser.prototype._invokeAll = function (func) {\n      var extensions = Object.values(this.plugins);\n      extensions.unshift(this);\n      var pending = [];\n\n      for (var i = 0; i < extensions.length; i++) {\n        pending.push(func(extensions[i]));\n      }\n\n      return Promise.all(pending);\n    };\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n\n\n    GLTFParser.prototype.getDependency = function (type, index) {\n      var cacheKey = type + ':' + index;\n      var dependency = this.cache.get(cacheKey);\n\n      if (!dependency) {\n        switch (type) {\n          case 'scene':\n            dependency = this.loadScene(index);\n            break;\n\n          case 'node':\n            dependency = this.loadNode(index);\n            break;\n\n          case 'mesh':\n            dependency = this._invokeOne(function (ext) {\n              return ext.loadMesh && ext.loadMesh(index);\n            });\n            break;\n\n          case 'accessor':\n            dependency = this.loadAccessor(index);\n            break;\n\n          case 'bufferView':\n            dependency = this._invokeOne(function (ext) {\n              return ext.loadBufferView && ext.loadBufferView(index);\n            });\n            break;\n\n          case 'buffer':\n            dependency = this.loadBuffer(index);\n            break;\n\n          case 'material':\n            dependency = this._invokeOne(function (ext) {\n              return ext.loadMaterial && ext.loadMaterial(index);\n            });\n            break;\n\n          case 'texture':\n            dependency = this.loadTexture(index);\n            break;\n\n          case 'skin':\n            dependency = this.loadSkin(index);\n            break;\n\n          case 'animation':\n            dependency = this.loadAnimation(index);\n            break;\n\n          case 'camera':\n            dependency = this.loadCamera(index);\n            break;\n\n          case 'light':\n            dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n            break;\n\n          default:\n            throw new Error('Unknown type: ' + type);\n        }\n\n        this.cache.add(cacheKey, dependency);\n      }\n\n      return dependency;\n    };\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n\n\n    GLTFParser.prototype.getDependencies = function (type) {\n      var dependencies = this.cache.get(type);\n\n      if (!dependencies) {\n        var parser = this;\n        var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n        dependencies = Promise.all(defs.map(function (def, index) {\n          return parser.getDependency(type, index);\n        }));\n        this.cache.add(type, dependencies);\n      }\n\n      return dependencies;\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n\n\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n      var bufferDef = this.json.buffers[bufferIndex];\n      var loader = this.fileLoader;\n\n      if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n        throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n      } // If present, GLB container is required to be the first buffer.\n\n\n      if (bufferDef.uri === undefined && bufferIndex === 0) {\n        return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n      }\n\n      var options = this.options;\n      return new Promise(function (resolve, reject) {\n        loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n          reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n        });\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n\n\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n      var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n      return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n        var byteLength = bufferViewDef.byteLength || 0;\n        var byteOffset = bufferViewDef.byteOffset || 0;\n        return buffer.slice(byteOffset, byteOffset + byteLength);\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n\n\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n      var parser = this;\n      var json = this.json;\n      var accessorDef = this.json.accessors[accessorIndex];\n\n      if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n        // Ignore empty accessors, which may be used to declare runtime\n        // information about attributes coming from another source (e.g. Draco\n        // compression extension).\n        return Promise.resolve(null);\n      }\n\n      var pendingBufferViews = [];\n\n      if (accessorDef.bufferView !== undefined) {\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n      } else {\n        pendingBufferViews.push(null);\n      }\n\n      if (accessorDef.sparse !== undefined) {\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n      }\n\n      return Promise.all(pendingBufferViews).then(function (bufferViews) {\n        var bufferView = bufferViews[0];\n        var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n        var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType]; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\n        var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n        var itemBytes = elementBytes * itemSize;\n        var byteOffset = accessorDef.byteOffset || 0;\n        var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n        var normalized = accessorDef.normalized === true;\n        var array, bufferAttribute; // The buffer is not interleaved if the stride is the item size in bytes.\n\n        if (byteStride && byteStride !== itemBytes) {\n          // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n          // This makes sure that IBA.count reflects accessor.count properly\n          var ibSlice = Math.floor(byteOffset / byteStride);\n          var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n          var ib = parser.cache.get(ibCacheKey);\n\n          if (!ib) {\n            array = new TypedArray(bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes); // Integer parameters to IB/IBA are in array elements, not bytes.\n\n            ib = new InterleavedBuffer(array, byteStride / elementBytes);\n            parser.cache.add(ibCacheKey, ib);\n          }\n\n          bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset % byteStride / elementBytes, normalized);\n        } else {\n          if (bufferView === null) {\n            array = new TypedArray(accessorDef.count * itemSize);\n          } else {\n            array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n          }\n\n          bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n        } // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\n\n        if (accessorDef.sparse !== undefined) {\n          var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n          var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n          var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n          var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n          var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n          var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n\n          if (bufferView !== null) {\n            // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n            bufferAttribute = new BufferAttribute(bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized);\n          }\n\n          for (var i = 0, il = sparseIndices.length; i < il; i++) {\n            var index = sparseIndices[i];\n            bufferAttribute.setX(index, sparseValues[i * itemSize]);\n            if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n            if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n            if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n            if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n          }\n        }\n\n        return bufferAttribute;\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n\n\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n      var parser = this;\n      var json = this.json;\n      var options = this.options;\n      var textureLoader = this.textureLoader;\n      var URL = self.URL || self.webkitURL;\n      var textureDef = json.textures[textureIndex];\n      var textureExtensions = textureDef.extensions || {};\n      var source;\n\n      if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n        source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n      } else {\n        source = json.images[textureDef.source];\n      }\n\n      var sourceURI = source.uri;\n      var isObjectURL = false;\n\n      if (source.bufferView !== undefined) {\n        // Load binary image data from bufferView, if provided.\n        sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n          isObjectURL = true;\n          var blob = new Blob([bufferView], {\n            type: source.mimeType\n          });\n          sourceURI = URL.createObjectURL(blob);\n          return sourceURI;\n        });\n      }\n\n      return Promise.resolve(sourceURI).then(function (sourceURI) {\n        // Load Texture resource.\n        var loader = options.manager.getHandler(sourceURI);\n\n        if (!loader) {\n          loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS] ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader : textureLoader;\n        }\n\n        return new Promise(function (resolve, reject) {\n          var onLoad = resolve;\n\n          if (loader.isImageBitmapLoader === true) {\n            onLoad = function (imageBitmap) {\n              resolve(new CanvasTexture(imageBitmap));\n            };\n          }\n\n          loader.load(resolveURL(sourceURI, options.path), onLoad, undefined, reject);\n        });\n      }).then(function (texture) {\n        // Clean up resources and configure Texture.\n        if (isObjectURL === true) {\n          URL.revokeObjectURL(sourceURI);\n        }\n\n        texture.flipY = false;\n        if (textureDef.name) texture.name = textureDef.name; // Ignore unknown mime types, like DDS files.\n\n        if (source.mimeType in MIME_TYPE_FORMATS) {\n          texture.format = MIME_TYPE_FORMATS[source.mimeType];\n        }\n\n        var samplers = json.samplers || {};\n        var sampler = samplers[textureDef.sampler] || {};\n        texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n        texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n        texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n        texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n        parser.associations.set(texture, {\n          type: 'textures',\n          index: textureIndex\n        });\n        return texture;\n      });\n    };\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n\n\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n      var parser = this;\n      return this.getDependency('texture', mapDef.index).then(function (texture) {\n        if (!texture.isCompressedTexture) {\n          switch (mapName) {\n            case 'aoMap':\n            case 'emissiveMap':\n            case 'metalnessMap':\n            case 'normalMap':\n            case 'roughnessMap':\n              texture.format = RGBFormat;\n              break;\n          }\n        } // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n        // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\n\n        if (mapDef.texCoord !== undefined && mapDef.texCoord != 0 && !(mapName === 'aoMap' && mapDef.texCoord == 1)) {\n          console.warn('THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.');\n        }\n\n        if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n          var transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n          if (transform) {\n            var gltfReference = parser.associations.get(texture);\n            texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n            parser.associations.set(texture, gltfReference);\n          }\n        }\n\n        materialParams[mapName] = texture;\n      });\n    };\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n\n\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n      var geometry = mesh.geometry;\n      var material = mesh.material;\n      var useVertexTangents = geometry.attributes.tangent !== undefined;\n      var useVertexColors = geometry.attributes.color !== undefined;\n      var useFlatShading = geometry.attributes.normal === undefined;\n      var useSkinning = mesh.isSkinnedMesh === true;\n      var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n      var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n      if (mesh.isPoints) {\n        var cacheKey = 'PointsMaterial:' + material.uuid;\n        var pointsMaterial = this.cache.get(cacheKey);\n\n        if (!pointsMaterial) {\n          pointsMaterial = new PointsMaterial();\n          Material.prototype.copy.call(pointsMaterial, material);\n          pointsMaterial.color.copy(material.color);\n          pointsMaterial.map = material.map;\n          pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n          this.cache.add(cacheKey, pointsMaterial);\n        }\n\n        material = pointsMaterial;\n      } else if (mesh.isLine) {\n        var cacheKey = 'LineBasicMaterial:' + material.uuid;\n        var lineMaterial = this.cache.get(cacheKey);\n\n        if (!lineMaterial) {\n          lineMaterial = new LineBasicMaterial();\n          Material.prototype.copy.call(lineMaterial, material);\n          lineMaterial.color.copy(material.color);\n          this.cache.add(cacheKey, lineMaterial);\n        }\n\n        material = lineMaterial;\n      } // Clone the material if it will be modified\n\n\n      if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n        var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n        if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n        if (useSkinning) cacheKey += 'skinning:';\n        if (useVertexTangents) cacheKey += 'vertex-tangents:';\n        if (useVertexColors) cacheKey += 'vertex-colors:';\n        if (useFlatShading) cacheKey += 'flat-shading:';\n        if (useMorphTargets) cacheKey += 'morph-targets:';\n        if (useMorphNormals) cacheKey += 'morph-normals:';\n        var cachedMaterial = this.cache.get(cacheKey);\n\n        if (!cachedMaterial) {\n          cachedMaterial = material.clone();\n          if (useSkinning) cachedMaterial.skinning = true;\n          if (useVertexTangents) cachedMaterial.vertexTangents = true;\n          if (useVertexColors) cachedMaterial.vertexColors = true;\n          if (useFlatShading) cachedMaterial.flatShading = true;\n          if (useMorphTargets) cachedMaterial.morphTargets = true;\n          if (useMorphNormals) cachedMaterial.morphNormals = true;\n          this.cache.add(cacheKey, cachedMaterial);\n          this.associations.set(cachedMaterial, this.associations.get(material));\n        }\n\n        material = cachedMaterial;\n      } // workarounds for mesh and geometry\n\n\n      if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n        geometry.setAttribute('uv2', geometry.attributes.uv);\n      } // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\n\n      if (material.normalScale && !useVertexTangents) {\n        material.normalScale.y = -material.normalScale.y;\n      }\n\n      if (material.clearcoatNormalScale && !useVertexTangents) {\n        material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n      }\n\n      mesh.material = material;\n    };\n\n    GLTFParser.prototype.getMaterialType = function ()\n    /* materialIndex */\n    {\n      return MeshStandardMaterial;\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n\n\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n      var parser = this;\n      var json = this.json;\n      var extensions = this.extensions;\n      var materialDef = json.materials[materialIndex];\n      var materialType;\n      var materialParams = {};\n      var materialExtensions = materialDef.extensions || {};\n      var pending = [];\n\n      if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n        var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n        materialType = sgExtension.getMaterialType();\n        pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n      } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n        var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n        materialType = kmuExtension.getMaterialType();\n        pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n      } else {\n        // Specification:\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n        var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        if (Array.isArray(metallicRoughness.baseColorFactor)) {\n          var array = metallicRoughness.baseColorFactor;\n          materialParams.color.fromArray(array);\n          materialParams.opacity = array[3];\n        }\n\n        if (metallicRoughness.baseColorTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n        }\n\n        materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n        materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n        if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n          pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n        }\n\n        materialType = this._invokeOne(function (ext) {\n          return ext.getMaterialType && ext.getMaterialType(materialIndex);\n        });\n        pending.push(this._invokeAll(function (ext) {\n          return ext.extendMaterialParams && ext.extendMaterialParams(materialIndex, materialParams);\n        }));\n      }\n\n      if (materialDef.doubleSided === true) {\n        materialParams.side = DoubleSide;\n      }\n\n      var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n      if (alphaMode === ALPHA_MODES.BLEND) {\n        materialParams.transparent = true; // See: https://github.com/mrdoob/three.js/issues/17706\n\n        materialParams.depthWrite = false;\n      } else {\n        materialParams.transparent = false;\n\n        if (alphaMode === ALPHA_MODES.MASK) {\n          materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n        }\n      }\n\n      if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n        pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n        materialParams.normalScale = new Vector2(1, 1);\n\n        if (materialDef.normalTexture.scale !== undefined) {\n          materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n        }\n      }\n\n      if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n        pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n        if (materialDef.occlusionTexture.strength !== undefined) {\n          materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n        }\n      }\n\n      if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n        materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n      }\n\n      if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n        pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n      }\n\n      return Promise.all(pending).then(function () {\n        var material;\n\n        if (materialType === GLTFMeshStandardSGMaterial) {\n          material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n        } else {\n          material = new materialType(materialParams);\n        }\n\n        if (materialDef.name) material.name = materialDef.name; // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\n        if (material.map) material.map.encoding = sRGBEncoding;\n        if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n        assignExtrasToUserData(material, materialDef);\n        parser.associations.set(material, {\n          type: 'materials',\n          index: materialIndex\n        });\n        if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n        return material;\n      });\n    };\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n\n\n    function computeBounds(geometry, primitiveDef, parser) {\n      var attributes = primitiveDef.attributes;\n      var box = new Box3();\n\n      if (attributes.POSITION !== undefined) {\n        var accessor = parser.json.accessors[attributes.POSITION];\n        var min = accessor.min;\n        var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n        if (min !== undefined && max !== undefined) {\n          box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n        } else {\n          console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n          return;\n        }\n      } else {\n        return;\n      }\n\n      var targets = primitiveDef.targets;\n\n      if (targets !== undefined) {\n        var maxDisplacement = new Vector3();\n        var vector = new Vector3();\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n          var target = targets[i];\n\n          if (target.POSITION !== undefined) {\n            var accessor = parser.json.accessors[target.POSITION];\n            var min = accessor.min;\n            var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n              // we need to get max of absolute components because target weight is [-1,1]\n              vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n              vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n              vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2]))); // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n              // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n              // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n              // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\n              maxDisplacement.max(vector);\n            } else {\n              console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n            }\n          }\n        } // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\n\n        box.expandByVector(maxDisplacement);\n      }\n\n      geometry.boundingBox = box;\n      var sphere = new Sphere();\n      box.getCenter(sphere.center);\n      sphere.radius = box.min.distanceTo(box.max) / 2;\n      geometry.boundingSphere = sphere;\n    }\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n\n\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n      var attributes = primitiveDef.attributes;\n      var pending = [];\n\n      function assignAttributeAccessor(accessorIndex, attributeName) {\n        return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n          geometry.setAttribute(attributeName, accessor);\n        });\n      }\n\n      for (var gltfAttributeName in attributes) {\n        var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase(); // Skip attributes already provided by e.g. Draco extension.\n\n        if (threeAttributeName in geometry.attributes) continue;\n        pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n      }\n\n      if (primitiveDef.indices !== undefined && !geometry.index) {\n        var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n          geometry.setIndex(accessor);\n        });\n        pending.push(accessor);\n      }\n\n      assignExtrasToUserData(geometry, primitiveDef);\n      computeBounds(geometry, primitiveDef, parser);\n      return Promise.all(pending).then(function () {\n        return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n      });\n    }\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n\n\n    function toTrianglesDrawMode(geometry, drawMode) {\n      var index = geometry.getIndex(); // generate index if not present\n\n      if (index === null) {\n        var indices = [];\n        var position = geometry.getAttribute('position');\n\n        if (position !== undefined) {\n          for (var i = 0; i < position.count; i++) {\n            indices.push(i);\n          }\n\n          geometry.setIndex(indices);\n          index = geometry.getIndex();\n        } else {\n          console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');\n          return geometry;\n        }\n      } //\n\n\n      var numberOfTriangles = index.count - 2;\n      var newIndices = [];\n\n      if (drawMode === TriangleFanDrawMode) {\n        // gl.TRIANGLE_FAN\n        for (var i = 1; i <= numberOfTriangles; i++) {\n          newIndices.push(index.getX(0));\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n        }\n      } else {\n        // gl.TRIANGLE_STRIP\n        for (var i = 0; i < numberOfTriangles; i++) {\n          if (i % 2 === 0) {\n            newIndices.push(index.getX(i));\n            newIndices.push(index.getX(i + 1));\n            newIndices.push(index.getX(i + 2));\n          } else {\n            newIndices.push(index.getX(i + 2));\n            newIndices.push(index.getX(i + 1));\n            newIndices.push(index.getX(i));\n          }\n        }\n      }\n\n      if (newIndices.length / 3 !== numberOfTriangles) {\n        console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n      } // build final geometry\n\n\n      var newGeometry = geometry.clone();\n      newGeometry.setIndex(newIndices);\n      return newGeometry;\n    }\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n\n\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n      var parser = this;\n      var extensions = this.extensions;\n      var cache = this.primitiveCache;\n\n      function createDracoPrimitive(primitive) {\n        return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n          return addPrimitiveAttributes(geometry, primitive, parser);\n        });\n      }\n\n      var pending = [];\n\n      for (var i = 0, il = primitives.length; i < il; i++) {\n        var primitive = primitives[i];\n        var cacheKey = createPrimitiveKey(primitive); // See if we've already created this geometry\n\n        var cached = cache[cacheKey];\n\n        if (cached) {\n          // Use the cached geometry if it exists\n          pending.push(cached.promise);\n        } else {\n          var geometryPromise;\n\n          if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n            // Use DRACO geometry if available\n            geometryPromise = createDracoPrimitive(primitive);\n          } else {\n            // Otherwise create a new geometry\n            geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n          } // Cache this geometry\n\n\n          cache[cacheKey] = {\n            primitive: primitive,\n            promise: geometryPromise\n          };\n          pending.push(geometryPromise);\n        }\n      }\n\n      return Promise.all(pending);\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n\n\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n      var parser = this;\n      var json = this.json;\n      var meshDef = json.meshes[meshIndex];\n      var primitives = meshDef.primitives;\n      var pending = [];\n\n      for (var i = 0, il = primitives.length; i < il; i++) {\n        var material = primitives[i].material === undefined ? createDefaultMaterial(this.cache) : this.getDependency('material', primitives[i].material);\n        pending.push(material);\n      }\n\n      pending.push(parser.loadGeometries(primitives));\n      return Promise.all(pending).then(function (results) {\n        var materials = results.slice(0, results.length - 1);\n        var geometries = results[results.length - 1];\n        var meshes = [];\n\n        for (var i = 0, il = geometries.length; i < il; i++) {\n          var geometry = geometries[i];\n          var primitive = primitives[i]; // 1. create Mesh\n\n          var mesh;\n          var material = materials[i];\n\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n            // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n            mesh = meshDef.isSkinnedMesh === true ? new SkinnedMesh(geometry, material) : new Mesh(geometry, material);\n\n            if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n              // we normalize floating point skin weight array to fix malformed assets (see #15319)\n              // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n              mesh.normalizeSkinWeights();\n            }\n\n            if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n              mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n            } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n              mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n            }\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n            mesh = new LineSegments(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n            mesh = new Line(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n            mesh = new LineLoop(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n            mesh = new Points(geometry, material);\n          } else {\n            throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n          }\n\n          if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n            updateMorphTargets(mesh, meshDef);\n          }\n\n          mesh.name = meshDef.name || 'mesh_' + meshIndex;\n          if (geometries.length > 1) mesh.name += '_' + i;\n          assignExtrasToUserData(mesh, meshDef);\n          parser.assignFinalMaterial(mesh);\n          meshes.push(mesh);\n        }\n\n        if (meshes.length === 1) {\n          return meshes[0];\n        }\n\n        var group = new Group();\n\n        for (var i = 0, il = meshes.length; i < il; i++) {\n          group.add(meshes[i]);\n        }\n\n        return group;\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n\n\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n      var camera;\n      var cameraDef = this.json.cameras[cameraIndex];\n      var params = cameraDef[cameraDef.type];\n\n      if (!params) {\n        console.warn('THREE.GLTFLoader: Missing camera parameters.');\n        return;\n      }\n\n      if (cameraDef.type === 'perspective') {\n        camera = new PerspectiveCamera(MathUtils.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n      } else if (cameraDef.type === 'orthographic') {\n        camera = new OrthographicCamera(-params.xmag, params.xmag, params.ymag, -params.ymag, params.znear, params.zfar);\n      }\n\n      if (cameraDef.name) camera.name = cameraDef.name;\n      assignExtrasToUserData(camera, cameraDef);\n      return Promise.resolve(camera);\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n\n\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n      var skinDef = this.json.skins[skinIndex];\n      var skinEntry = {\n        joints: skinDef.joints\n      };\n\n      if (skinDef.inverseBindMatrices === undefined) {\n        return Promise.resolve(skinEntry);\n      }\n\n      return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n        skinEntry.inverseBindMatrices = accessor;\n        return skinEntry;\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n\n\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n      var json = this.json;\n      var animationDef = json.animations[animationIndex];\n      var pendingNodes = [];\n      var pendingInputAccessors = [];\n      var pendingOutputAccessors = [];\n      var pendingSamplers = [];\n      var pendingTargets = [];\n\n      for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n        var channel = animationDef.channels[i];\n        var sampler = animationDef.samplers[channel.sampler];\n        var target = channel.target;\n        var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\n        var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n        var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n        pendingNodes.push(this.getDependency('node', name));\n        pendingInputAccessors.push(this.getDependency('accessor', input));\n        pendingOutputAccessors.push(this.getDependency('accessor', output));\n        pendingSamplers.push(sampler);\n        pendingTargets.push(target);\n      }\n\n      return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n        var nodes = dependencies[0];\n        var inputAccessors = dependencies[1];\n        var outputAccessors = dependencies[2];\n        var samplers = dependencies[3];\n        var targets = dependencies[4];\n        var tracks = [];\n\n        for (var i = 0, il = nodes.length; i < il; i++) {\n          var node = nodes[i];\n          var inputAccessor = inputAccessors[i];\n          var outputAccessor = outputAccessors[i];\n          var sampler = samplers[i];\n          var target = targets[i];\n          if (node === undefined) continue;\n          node.updateMatrix();\n          node.matrixAutoUpdate = true;\n          var TypedKeyframeTrack;\n\n          switch (PATH_PROPERTIES[target.path]) {\n            case PATH_PROPERTIES.weights:\n              TypedKeyframeTrack = NumberKeyframeTrack;\n              break;\n\n            case PATH_PROPERTIES.rotation:\n              TypedKeyframeTrack = QuaternionKeyframeTrack;\n              break;\n\n            case PATH_PROPERTIES.position:\n            case PATH_PROPERTIES.scale:\n            default:\n              TypedKeyframeTrack = VectorKeyframeTrack;\n              break;\n          }\n\n          var targetName = node.name ? node.name : node.uuid;\n          var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n          var targetNames = [];\n\n          if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n            // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n            node.traverse(function (object) {\n              if (object.isMesh === true && object.morphTargetInfluences) {\n                targetNames.push(object.name ? object.name : object.uuid);\n              }\n            });\n          } else {\n            targetNames.push(targetName);\n          }\n\n          var outputArray = outputAccessor.array;\n\n          if (outputAccessor.normalized) {\n            var scale;\n\n            if (outputArray.constructor === Int8Array) {\n              scale = 1 / 127;\n            } else if (outputArray.constructor === Uint8Array) {\n              scale = 1 / 255;\n            } else if (outputArray.constructor == Int16Array) {\n              scale = 1 / 32767;\n            } else if (outputArray.constructor === Uint16Array) {\n              scale = 1 / 65535;\n            } else {\n              throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n            }\n\n            var scaled = new Float32Array(outputArray.length);\n\n            for (var j = 0, jl = outputArray.length; j < jl; j++) {\n              scaled[j] = outputArray[j] * scale;\n            }\n\n            outputArray = scaled;\n          }\n\n          for (var j = 0, jl = targetNames.length; j < jl; j++) {\n            var track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], inputAccessor.array, outputArray, interpolation); // Override interpolation with custom factory method.\n\n            if (sampler.interpolation === 'CUBICSPLINE') {\n              track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                // must be divided by three to get the interpolant's sampleSize argument.\n                return new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\n              }; // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\n\n              track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n            }\n\n            tracks.push(track);\n          }\n        }\n\n        var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n        return new AnimationClip(name, undefined, tracks);\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n\n\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n      var json = this.json;\n      var extensions = this.extensions;\n      var parser = this;\n      var meshReferences = json.meshReferences;\n      var meshUses = json.meshUses;\n      var nodeDef = json.nodes[nodeIndex];\n      return function () {\n        var pending = [];\n\n        if (nodeDef.mesh !== undefined) {\n          pending.push(parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n            var node;\n\n            if (meshReferences[nodeDef.mesh] > 1) {\n              var instanceNum = meshUses[nodeDef.mesh]++;\n              node = mesh.clone();\n              node.name += '_instance_' + instanceNum;\n            } else {\n              node = mesh;\n            } // if weights are provided on the node, override weights on the mesh.\n\n\n            if (nodeDef.weights !== undefined) {\n              node.traverse(function (o) {\n                if (!o.isMesh) return;\n\n                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                  o.morphTargetInfluences[i] = nodeDef.weights[i];\n                }\n              });\n            }\n\n            return node;\n          }));\n        }\n\n        if (nodeDef.camera !== undefined) {\n          pending.push(parser.getDependency('camera', nodeDef.camera));\n        }\n\n        if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\n          pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n        }\n\n        return Promise.all(pending);\n      }().then(function (objects) {\n        var node; // .isBone isn't in glTF spec. See .markDefs\n\n        if (nodeDef.isBone === true) {\n          node = new Bone();\n        } else if (objects.length > 1) {\n          node = new Group();\n        } else if (objects.length === 1) {\n          node = objects[0];\n        } else {\n          node = new Object3D();\n        }\n\n        if (node !== objects[0]) {\n          for (var i = 0, il = objects.length; i < il; i++) {\n            node.add(objects[i]);\n          }\n        }\n\n        if (nodeDef.name) {\n          node.userData.name = nodeDef.name;\n          node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n        }\n\n        assignExtrasToUserData(node, nodeDef);\n        if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n        if (nodeDef.matrix !== undefined) {\n          var matrix = new Matrix4();\n          matrix.fromArray(nodeDef.matrix);\n          node.applyMatrix4(matrix);\n        } else {\n          if (nodeDef.translation !== undefined) {\n            node.position.fromArray(nodeDef.translation);\n          }\n\n          if (nodeDef.rotation !== undefined) {\n            node.quaternion.fromArray(nodeDef.rotation);\n          }\n\n          if (nodeDef.scale !== undefined) {\n            node.scale.fromArray(nodeDef.scale);\n          }\n        }\n\n        parser.associations.set(node, {\n          type: 'nodes',\n          index: nodeIndex\n        });\n        return node;\n      });\n    };\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n\n\n    GLTFParser.prototype.loadScene = function () {\n      // scene node hierachy builder\n      function buildNodeHierachy(nodeId, parentObject, json, parser) {\n        var nodeDef = json.nodes[nodeId];\n        return parser.getDependency('node', nodeId).then(function (node) {\n          if (nodeDef.skin === undefined) return node; // build skeleton here as well\n\n          var skinEntry;\n          return parser.getDependency('skin', nodeDef.skin).then(function (skin) {\n            skinEntry = skin;\n            var pendingJoints = [];\n\n            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n              pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n            }\n\n            return Promise.all(pendingJoints);\n          }).then(function (jointNodes) {\n            node.traverse(function (mesh) {\n              if (!mesh.isMesh) return;\n              var bones = [];\n              var boneInverses = [];\n\n              for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                var jointNode = jointNodes[j];\n\n                if (jointNode) {\n                  bones.push(jointNode);\n                  var mat = new Matrix4();\n\n                  if (skinEntry.inverseBindMatrices !== undefined) {\n                    mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                  }\n\n                  boneInverses.push(mat);\n                } else {\n                  console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[j]);\n                }\n              }\n\n              mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n            });\n            return node;\n          });\n        }).then(function (node) {\n          // build node hierachy\n          parentObject.add(node);\n          var pending = [];\n\n          if (nodeDef.children) {\n            var children = nodeDef.children;\n\n            for (var i = 0, il = children.length; i < il; i++) {\n              var child = children[i];\n              pending.push(buildNodeHierachy(child, node, json, parser));\n            }\n          }\n\n          return Promise.all(pending);\n        });\n      }\n\n      return function loadScene(sceneIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var sceneDef = this.json.scenes[sceneIndex];\n        var parser = this; // Loader returns Group, not Scene.\n        // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\n        var scene = new Group();\n        if (sceneDef.name) scene.name = sceneDef.name;\n        assignExtrasToUserData(scene, sceneDef);\n        if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n        var nodeIds = sceneDef.nodes || [];\n        var pending = [];\n\n        for (var i = 0, il = nodeIds.length; i < il; i++) {\n          pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n          return scene;\n        });\n      };\n    }();\n\n    return GLTFLoader;\n  }();\n}.call(this, module);","map":{"version":3,"sources":["client/three/GLTFLoader.js"],"names":["module1","export","GLTFLoader","AnimationClip","Bone","Box3","BufferAttribute","BufferGeometry","CanvasTexture","ClampToEdgeWrapping","Color","DirectionalLight","DoubleSide","FileLoader","FrontSide","Group","ImageBitmapLoader","InterleavedBuffer","InterleavedBufferAttribute","Interpolant","InterpolateDiscrete","InterpolateLinear","Line","LineBasicMaterial","LineLoop","LineSegments","LinearFilter","LinearMipmapLinearFilter","LinearMipmapNearestFilter","Loader","LoaderUtils","Material","MathUtils","Matrix4","Mesh","MeshBasicMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MirroredRepeatWrapping","NearestFilter","NearestMipmapLinearFilter","NearestMipmapNearestFilter","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","Points","PointsMaterial","PropertyBinding","QuaternionKeyframeTrack","RGBAFormat","RGBFormat","RepeatWrapping","Skeleton","SkinnedMesh","Sphere","SpotLight","TangentSpaceNormalMap","TextureLoader","TriangleFanDrawMode","TriangleStripDrawMode","Vector2","Vector3","VectorKeyframeTrack","sRGBEncoding","link","v","manager","call","dracoLoader","ddsLoader","pluginCallbacks","register","parser","GLTFMaterialsClearcoatExtension","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","resourcePath","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","setRequestHeader","requestHeader","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","callback","indexOf","push","unregister","splice","content","extensions","plugins","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","undefined","version","Error","GLTFParser","fileLoader","i","length","plugin","name","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","warn","setExtensions","setPlugins","GLTFRegistry","objects","get","key","add","object","remove","removeAll","KHR_MATERIALS_CLEARCOAT","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","extendMaterialParams","materialIndex","materials","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","copy","source","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","WEBGL_WRAPPINGS","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","resolveURL","test","createDefaultMaterial","cache","transparent","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","il","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","geometryKey","indices","createAttributesKey","mode","attributesKey","keys","sort","options","associations","Map","primitiveCache","createImageBitmap","navigator","userAgent","textureLoader","setCrossOrigin","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","_invokeOne","func","_invokeAll","unshift","cacheKey","dependency","loadScene","loadNode","ext","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibSlice","floor","ibCacheKey","count","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","isImageBitmapLoader","imageBitmap","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","setAttribute","y","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","computeBounds","box","accessor","min","max","maxDisplacement","vector","abs","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","gltfAttributeName","setIndex","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","getX","newGeometry","loadGeometries","primitives","createDracoPrimitive","cached","promise","geometryPromise","meshIndex","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","camera","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","updateMatrix","matrixAutoUpdate","TypedKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","sanitizeNodeName","matrix","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tCanvasTexture,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"./three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t\tthis.pluginCallbacks = [];\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\t\t\tvar plugins = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\t\tfor ( var i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\t\tvar plugin = this.pluginCallbacks[ i ]( parser );\n\t\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t\t// Remove this workaround if we move all the existing\n\t\t\t\t// extension handlers to plugin system\n\t\t\t\textensions[ plugin.name ] = true;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.setExtensions( extensions );\n\t\t\tparser.setPlugins( plugins );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\t\tif ( typeof createImageBitmap !== 'undefined' && /Firefox/.test( navigator.userAgent ) === false ) {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.setExtensions = function ( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t};\n\n\tGLTFParser.prototype.setPlugins = function ( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\tGLTFParser.prototype._invokeOne = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t};\n\n\tGLTFParser.prototype._invokeAll = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tpending.push( func( extensions[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tresolve( new CanvasTexture( imageBitmap ) );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\tGLTFParser.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"]},"sourceType":"module","hash":"7596e4a53601d6967d18b3578ef9554d96405d2b"}
