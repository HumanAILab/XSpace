{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/main.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/main.js","filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/main.js","passPerPreset":false,"envName":"development","cwd":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","root":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/main.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/main.js"}},"code":"!function (module1) {\n  module1.link(\"./main.html\");\n  let FlowRouter;\n  module1.link(\"meteor/ostrio:flow-router-extra\", {\n    FlowRouter(v) {\n      FlowRouter = v;\n    }\n\n  }, 0);\n  let Random;\n  module1.link(\"meteor/random\", {\n    Random(v) {\n      Random = v;\n    }\n\n  }, 1);\n  let THREE;\n  module1.link(\"./three/three.module.js\", {\n    \"*\"(v) {\n      THREE = v;\n    }\n\n  }, 2);\n  let GLTFLoader;\n  module1.link(\"./three/GLTFLoader.js\", {\n    GLTFLoader(v) {\n      GLTFLoader = v;\n    }\n\n  }, 3);\n  let PointerLockControls;\n  module1.link(\"./three/PointerLockControls.js\", {\n    PointerLockControls(v) {\n      PointerLockControls = v;\n    }\n\n  }, 4);\n  let SliceGeometry;\n  module1.link(\"./three/slice\", {\n    SliceGeometry(v) {\n      SliceGeometry = v;\n    }\n\n  }, 5);\n  // World Server URL \n  const URL = \"http://localhost:8000/\";\n  var WorldServer;\n  var clientId = Random.id(); // Canvas and Renderer\n\n  var canvas, renderer; // Views \n\n  var view = {\n    viewport: null,\n    scene: null,\n    camera: null,\n    room: {\n      mesh: new THREE.Mesh(),\n      position: null,\n      quaternion: null,\n      scale: null,\n      loaded: false\n    },\n    remoteRoom: {\n      mesh: new THREE.Mesh(),\n      position: null,\n      quaternion: null,\n      scale: null,\n      loaded: false\n    },\n    pointerLock: null,\n    movement: {\n      velocity: new THREE.Vector3(),\n      direction: new THREE.Vector3(),\n      moveForward: false,\n      moveBackward: false,\n      moveLeft: false,\n      moveRight: false\n    },\n    avatar: {\n      avatar: null,\n      body: null,\n      head: null\n    },\n    avatarPrevState: {\n      position: new THREE.Vector3(),\n      headRotation: new THREE.Euler()\n    },\n    shared: {\n      mesh: null,\n      start: null,\n      end: null,\n      loaded: false\n    },\n    remoteUsers: []\n  }; // Mappings between rooms \n\n  var mappings = {\n    localRemote: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    },\n    remoteLocal: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    },\n    localComposite: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    },\n    remoteComposite: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    },\n    compositeLocal: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    },\n    compositeRemote: {\n      positionMap: new THREE.Matrix4(),\n      rotationMap: new THREE.Matrix4(),\n      scaleMap: new THREE.Matrix4()\n    }\n  }; // Camera set-up parameters\n\n  var camFirstParams = {\n    fov: 60,\n    near: 0.1,\n    far: 100,\n    position: new THREE.Vector3(0.0, 1.5, 0.0),\n    lookAt: new THREE.Vector3(0.0, 1.5, -1.0)\n  }; // Identify world\n\n  var worldId;\n  FlowRouter.route(\"/:id\", {\n    name: \"worldId.select\",\n\n    action(params, queryParams) {\n      worldId = params.id;\n    }\n\n  }); // Rooms \n\n  var roomA, roomB; // MongoDB Collections synced with the server \n\n  var Intersections;\n  var Rooms;\n  var Users; // Update variables\n\n  var prevTime = performance.now(); // Lighting\n\n  function lightScene(scene) {\n    // Ambient\n    scene.add(new THREE.AmbientLight(0xffffff, 0.2)); // Directional\n\n    let dir_light = new THREE.DirectionalLight(0x9fc5e8, 0.7);\n    dir_light.position.set(50, 200, 100);\n    dir_light.position.multiplyScalar(1.0);\n    scene.add(dir_light);\n    let dir_light_2 = new THREE.DirectionalLight(0xa2c4c9, 0.7);\n    dir_light_2.position.set(-200, 50, -100);\n    dir_light_2.position.multiplyScalar(1.0);\n    scene.add(dir_light_2);\n    let dir_light_3 = new THREE.DirectionalLight(0x9cc98a, 0.7); // 0xa7cf97\n\n    dir_light_3.position.set(100, -35, -50);\n    dir_light_3.position.multiplyScalar(1.0);\n    scene.add(dir_light_3);\n    let dir_light_4 = new THREE.DirectionalLight(0x666666, 0.4);\n    dir_light_4.position.set(0, -200, 0);\n    dir_light_4.position.multiplyScalar(1.0);\n    scene.add(dir_light_4); // Hemisphere\n\n    let hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.4);\n    hemiLight.color.setHSL(0.6, 1, 0.6);\n    hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n    hemiLight.position.set(0, 4, 0);\n    scene.add(hemiLight);\n  } // Instantiating a camera object\n\n\n  function newCamera(params, view) {\n    let bounds = view.getBoundingClientRect();\n    let camera = new THREE.PerspectiveCamera(params.fov, bounds.width / bounds.height, params.near, params.far);\n    camera.position.copy(params.position);\n    camera.lookAt(params.lookAt);\n    return camera;\n  } // New avatar \n\n\n  function newAvatar(color) {\n    var avatar = new THREE.Object3D(); // Meshes\n\n    var head = new THREE.Mesh(new THREE.BoxGeometry(0.25, 0.25, 0.25), new THREE.MeshLambertMaterial({\n      color: color\n    }));\n    var avatarEyeLeft = new THREE.Mesh(new THREE.CircleBufferGeometry(0.05, 32), new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    }));\n    avatarEyeLeft.position.set(-0.075, 0, 0.13);\n    var avatarEyeRight = new THREE.Mesh(new THREE.CircleBufferGeometry(0.05, 32), new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    }));\n    avatarEyeRight.position.set(0.075, 0, 0.13);\n    var avatarPupilLeft = new THREE.Mesh(new THREE.CircleBufferGeometry(0.025, 32), new THREE.MeshBasicMaterial({\n      color: 0x000000\n    }));\n    avatarPupilLeft.position.set(-0.075, 0, 0.135);\n    var avatarPupilRight = new THREE.Mesh(new THREE.CircleBufferGeometry(0.025, 32), new THREE.MeshBasicMaterial({\n      color: 0x000000\n    }));\n    avatarPupilRight.position.set(0.075, 0, 0.135);\n    head.attach(avatarEyeLeft);\n    head.attach(avatarEyeRight);\n    head.attach(avatarPupilLeft);\n    head.attach(avatarPupilRight);\n    avatar.attach(head);\n    var body = new THREE.Mesh(new THREE.BoxGeometry(0.25, 0.5, 0.25), new THREE.MeshLambertMaterial({\n      color: color\n    }));\n    body.position.set(0.0, -0.5, 0.0);\n    avatar.attach(body); // SHARED COFFEE\n\n    var mug = newMug();\n    avatar.attach(mug);\n    mug.position.set(-0.30, -0.4, -0.30);\n    return {\n      avatar: avatar,\n      body: body,\n      head: head,\n      mug: mug\n    };\n  } // New mug (SHARED COFFEE)\n\n\n  function newMug() {\n    // Cup geometry\n    var cup = new THREE.Mesh(new THREE.CylinderGeometry(0.75, 0.675, 2.0, 32), new THREE.MeshLambertMaterial({\n      color: 0xffffff\n    }));\n    var handle = new THREE.Mesh(new THREE.TorusGeometry(0.5, 0.125, 16, 100, Math.PI * 2), new THREE.MeshLambertMaterial({\n      color: 0xffffff\n    }));\n    var mug = new THREE.Object3D();\n    cup.position.set(0.0, 0.0, 0.0);\n    handle.position.set(0, 0.125, 0.75);\n    handle.rotation.set(0.0, Math.PI / 2.0, 0.0);\n    mug.add(cup);\n    mug.add(handle);\n    mug.scale.set(0.1, 0.1, 0.1);\n    return mug;\n  } // Loading room GLTF models \n\n\n  var loadModelGLTF = function (source, color) {\n    return new Promise(function (resolve) {\n      let material = new THREE.MeshLambertMaterial({\n        flatShading: true,\n        side: THREE.DoubleSide,\n        // THREE.BackSide\n        color: color,\n        opacity: 1.0,\n        transparent: true\n      });\n      let loader = new GLTFLoader();\n      loader.load(source, function (gltf) {\n        let bufferGeometry = gltf.scenes[0].children[0].geometry;\n        let geometry = new THREE.Geometry();\n        geometry.fromBufferGeometry(bufferGeometry);\n        let mesh = new THREE.Mesh(geometry, material); // \"Center\" Mesh\n\n        mesh.geometry.computeBoundingBox();\n        let bbCenter = new THREE.Vector3();\n        mesh.geometry.boundingBox.getCenter(bbCenter);\n        let bbSize = new THREE.Vector3();\n        mesh.geometry.boundingBox.getSize(bbSize);\n        let xOffset = -bbCenter.x;\n        let yOffset = -bbCenter.y + 0.5 * bbSize.y;\n        let zOffset = -bbCenter.z;\n        mesh.geometry.translate(xOffset, yOffset, zOffset);\n        mesh.updateMatrix();\n        mesh.updateMatrixWorld();\n        resolve(mesh);\n      });\n    });\n  }; // Rendering \n\n\n  function renderView(scene, camera, view) {\n    let {\n      left,\n      right,\n      top,\n      bottom,\n      width,\n      height\n    } = view.getBoundingClientRect();\n    let positiveYUpBottom = renderer.domElement.offsetHeight - bottom;\n    renderer.setViewport(left, positiveYUpBottom, width, height);\n    renderer.setScissor(left, positiveYUpBottom, width, height);\n    renderer.setScissorTest(true);\n    renderer.render(scene, camera);\n  }\n\n  function render() {\n    renderView(view.scene, view.camera, view.viewport);\n  } // Three.js setup \n\n\n  function initThree() {\n    // Canvas & Renderer\n    canvas = document.getElementById(\"c\");\n    renderer = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(canvas.offsetWidth, canvas.offsetHeight); // Views\n\n    view.viewport = document.getElementById(\"viewFirst\"); // Scenes\n\n    view.scene = new THREE.Scene();\n    view.scene.background = new THREE.Color(0xdedede); // Lighting \n\n    lightScene(view.scene); // Room\n\n    view.scene.add(view.room.mesh);\n    Promise.all([loadModelGLTF(\"../roomA.gltf\", 0xcfe2f3), loadModelGLTF(\"../roomB.gltf\", 0xffe599)]).then(result => {\n      roomA = result[0];\n      roomB = result[1];\n\n      if (worldId == \"A\") {\n        view.room.mesh.geometry = roomA.geometry.clone();\n        view.room.mesh.material = roomA.material.clone();\n        view.remoteRoom.mesh.geometry = roomB.geometry.clone();\n        view.remoteRoom.mesh.material = roomB.material.clone();\n      } else {\n        view.room.mesh.geometry = roomB.geometry.clone();\n        view.room.mesh.material = roomB.material.clone();\n        view.remoteRoom.mesh.geometry = roomA.geometry.clone();\n        view.remoteRoom.mesh.material = roomA.material.clone();\n      }\n\n      loadIntersection();\n      render();\n    }); // Cameras \n\n    view.camera = newCamera(camFirstParams, view.viewport);\n    view.scene.add(view.camera); // User Avatar\n\n    let userAvatarColor = worldId == \"A\" ? 0x0000ff : 0xffff00;\n    view.avatar = newAvatar(userAvatarColor);\n    view.scene.add(view.avatar.avatar);\n    view.avatarPrevState.position.copy(view.avatar.avatar.position);\n    view.avatarPrevState.headRotation.copy(view.avatar.head.rotation); // Render \n\n    render();\n  } // Character movement controls \n\n\n  function wasdDown(event) {\n    switch (event.keyCode) {\n      case 87:\n        // W\n        view.movement.moveForward = true;\n        break;\n\n      case 65:\n        // A\n        view.movement.moveLeft = true;\n        break;\n\n      case 83:\n        // S\n        view.movement.moveBackward = true;\n        break;\n\n      case 68:\n        // D\n        view.movement.moveRight = true;\n        break;\n    }\n  }\n\n  function wasdUp(event) {\n    switch (event.keyCode) {\n      case 87:\n        // W\n        view.movement.moveForward = false;\n        break;\n\n      case 65:\n        // A\n        view.movement.moveLeft = false;\n        break;\n\n      case 83:\n        // S\n        view.movement.moveBackward = false;\n        break;\n\n      case 68:\n        // D\n        view.movement.moveRight = false;\n        break;\n    }\n  } // Initialize controls \n\n\n  function initControls() {\n    // PointerLock Controls \n    view.pointerLock = new PointerLockControls(view.camera, view.viewport);\n    view.pointerLock.addEventListener(\"change\", render);\n    view.viewport.addEventListener(\"click\", function (event) {\n      if (view.pointerLock.isLocked != true) {\n        view.pointerLock.lock();\n        document.addEventListener(\"keydown\", wasdDown);\n        document.addEventListener(\"keyup\", wasdUp);\n      }\n    });\n    view.pointerLock.addEventListener(\"unlock\", function (event) {\n      document.removeEventListener(\"keydown\", wasdDown);\n      document.removeEventListener(\"keyup\", wasdUp);\n    });\n  } // User Movements\n\n\n  function userMove(delta) {\n    view.movement.velocity.x -= view.movement.velocity.x * 10.0 * delta;\n    view.movement.velocity.z -= view.movement.velocity.z * 10.0 * delta;\n    view.movement.direction.z = Number(view.movement.moveForward) - Number(view.movement.moveBackward);\n    view.movement.direction.x = Number(view.movement.moveRight) - Number(view.movement.moveLeft);\n    view.movement.direction.normalize();\n    if (view.movement.moveForward || view.movement.moveBackward) view.movement.velocity.z -= view.movement.direction.z * 50.0 * delta;\n    if (view.movement.moveLeft || view.movement.moveRight) view.movement.velocity.x -= view.movement.direction.x * 50.0 * delta;\n    view.pointerLock.moveRight(-view.movement.velocity.x * delta);\n    view.pointerLock.moveForward(-view.movement.velocity.z * delta);\n  } // Handling User Avatar Updates \n\n\n  function updateAvatar() {\n    if (view.avatar.avatar != null) {\n      // Position\n      view.avatar.avatar.position.copy(view.camera.position);\n    }\n\n    if (view.avatar.head != null) {\n      // Head orientation\n      let dir = new THREE.Vector3();\n      view.pointerLock.getDirection(dir);\n      let mx = new THREE.Matrix4().lookAt(dir, new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n      view.avatar.head.setRotationFromMatrix(mx); // SHARED COFFEE\n\n      let mugPos = new THREE.Vector3(0.3, 0.0, 0.3).applyMatrix4(mx);\n      mugPos.y = -0.5;\n      let mugRotMx = new THREE.Matrix4().lookAt(new THREE.Vector3(-dir.x, 0.0, -dir.z), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n      view.avatar.mug.position.copy(mugPos);\n      view.avatar.mug.setRotationFromMatrix(mugRotMx);\n    }\n  } // Synchronize avatar with server \n\n\n  function syncAvatar() {\n    if (WorldServer.status().connected) {\n      let rotDiff = new THREE.Quaternion().setFromEuler(view.avatarPrevState.headRotation).angleTo(view.avatar.head.quaternion);\n      let moveDiff = view.avatarPrevState.position.distanceTo(view.avatar.avatar.position);\n\n      if (moveDiff > 0.1 || rotDiff > 0.10) {\n        let pos = [];\n        let rot = [];\n        view.avatar.avatar.position.toArray(pos);\n        view.avatar.head.rotation.toArray(rot);\n        WorldServer.call(\"users.update\", clientId, pos, rot);\n        view.avatarPrevState.position.copy(view.avatar.avatar.position);\n        view.avatarPrevState.headRotation.copy(view.avatar.head.rotation);\n      }\n    }\n  } // Check remote avatar visibility \n\n\n  function checkShareRemote(position) {\n    position.applyMatrix4(mappings.localComposite.positionMap);\n    return position.x >= Math.min(view.shared.start.x, view.shared.end.x) && position.x <= Math.max(view.shared.start.x, view.shared.end.x) && position.z >= Math.min(view.shared.start.z, view.shared.end.z) && position.z <= Math.max(view.shared.start.z, view.shared.end.z);\n  }\n\n  function defineMapping() {\n    // local to remote \n    // position\n    mappings.localComposite.positionMap.identity();\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion));\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x, 1.0, view.room.scale.z));\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeTranslation(view.room.position.x, 0.0, view.room.position.z));\n    mappings.compositeRemote.positionMap.identity();\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeTranslation(-view.remoteRoom.position.x, 0.0, -view.remoteRoom.position.z));\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.remoteRoom.scale.x, 1.0, 1.0 / view.remoteRoom.scale.z));\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion.clone().inverse()));\n    mappings.localRemote.positionMap.identity();\n    mappings.localRemote.positionMap.premultiply(mappings.localComposite.positionMap);\n    mappings.localRemote.positionMap.premultiply(mappings.compositeRemote.positionMap); // rotation \n\n    mappings.localComposite.rotationMap.identity();\n    mappings.localComposite.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion));\n    mappings.compositeRemote.rotationMap.identity();\n    mappings.compositeRemote.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion.clone().inverse()));\n    mappings.localRemote.rotationMap.premultiply(mappings.localComposite.rotationMap);\n    mappings.localRemote.rotationMap.premultiply(mappings.compositeRemote.rotationMap); // scale\n\n    mappings.localComposite.scaleMap.identity();\n    mappings.localComposite.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x, 1.0, view.room.scale.z));\n    mappings.compositeRemote.scaleMap.identity();\n    mappings.compositeRemote.scaleMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.remoteRoom.scale.x, 1.0, 1.0 / view.remoteRoom.scale.z));\n    mappings.localRemote.scaleMap.identity();\n    mappings.localRemote.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x / view.remoteRoom.scale.x, 1.0, view.room.scale.z / view.remoteRoom.scale.z)); // Remote to local\n    // position\n\n    mappings.remoteComposite.positionMap.identity();\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion));\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x, 1.0, view.remoteRoom.scale.z));\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeTranslation(view.remoteRoom.position.x, 0.0, view.remoteRoom.position.z));\n    mappings.compositeLocal.positionMap.identity();\n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeTranslation(-view.room.position.x, 0.0, -view.room.position.z));\n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.room.scale.x, 1.0, 1.0 / view.room.scale.z));\n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion.clone().inverse()));\n    mappings.remoteLocal.positionMap.identity();\n    mappings.remoteLocal.positionMap.premultiply(mappings.remoteComposite.positionMap);\n    mappings.remoteLocal.positionMap.premultiply(mappings.compositeLocal.positionMap); // rotation\n\n    mappings.remoteComposite.rotationMap.identity();\n    mappings.remoteComposite.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion));\n    mappings.compositeLocal.rotationMap.identity();\n    mappings.compositeLocal.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion.clone().inverse()));\n    mappings.remoteLocal.rotationMap.premultiply(mappings.remoteComposite.rotationMap);\n    mappings.remoteLocal.rotationMap.premultiply(mappings.compositeLocal.rotationMap); // scale\n\n    mappings.remoteComposite.scaleMap.identity();\n    mappings.remoteComposite.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x, 1.0, view.remoteRoom.scale.z));\n    mappings.compositeLocal.scaleMap.identity();\n    mappings.compositeLocal.scaleMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.room.scale.x, 1.0, 1.0 / view.room.scale.z));\n    mappings.remoteLocal.scaleMap.identity();\n    mappings.remoteLocal.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x / view.room.scale.x, 1.0, view.remoteRoom.scale.z / view.room.scale.z));\n  } // Extracting intersection geometry\n\n\n  function extractIntersection(room, bl, tr, br, tl) {\n    var blbr = new THREE.Plane(new THREE.Vector3().subVectors(tl, bl)).translate(bl);\n    var bltl = new THREE.Plane(new THREE.Vector3().subVectors(br, bl)).translate(bl);\n    var trbr = new THREE.Plane(new THREE.Vector3().subVectors(tl, tr)).translate(tr);\n    var trtl = new THREE.Plane(new THREE.Vector3().subVectors(br, tr)).translate(tr);\n    let intersectGeometry = room.geometry.clone();\n    intersectGeometry = SliceGeometry(intersectGeometry, blbr);\n    intersectGeometry = SliceGeometry(intersectGeometry, bltl);\n    intersectGeometry = SliceGeometry(intersectGeometry, trbr);\n    intersectGeometry = SliceGeometry(intersectGeometry, trtl);\n    let intersectMaterial = new THREE.MeshLambertMaterial({\n      flatShading: true,\n      color: 0xffffff,\n      side: THREE.DoubleSide,\n      transparent: true\n    });\n    let intersection = new THREE.Mesh(intersectGeometry, intersectMaterial);\n    return intersection;\n  } // Loading intersection\n\n\n  function loadIntersection() {\n    if (view.room.loaded && view.room.mesh != null && view.remoteRoom.mesh != null && view.remoteRoom.loaded && view.shared.loaded) {\n      defineMapping(); // Calculate shared region \n\n      var blComposite = new THREE.Vector3(Math.min(view.shared.start.x, view.shared.end.x), 0.0, Math.min(view.shared.start.z, view.shared.end.z));\n      var trComposite = new THREE.Vector3(Math.max(view.shared.start.x, view.shared.end.x), 0.0, Math.max(view.shared.start.z, view.shared.end.z));\n      var brComposite = new THREE.Vector3(Math.max(view.shared.start.x, view.shared.end.x), 0.0, Math.min(view.shared.start.z, view.shared.end.z));\n      var tlComposite = new THREE.Vector3(Math.min(view.shared.start.x, view.shared.end.x), 0.0, Math.max(view.shared.start.z, view.shared.end.z));\n      var blRemote = new THREE.Vector3().copy(blComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n      var trRemote = new THREE.Vector3().copy(trComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n      var brRemote = new THREE.Vector3().copy(brComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n      var tlRemote = new THREE.Vector3().copy(tlComposite).applyMatrix4(mappings.compositeRemote.positionMap); // Get intersection\n\n      var intersection = extractIntersection(view.remoteRoom.mesh, blRemote, trRemote, brRemote, tlRemote);\n      intersection.material = view.remoteRoom.mesh.material.clone();\n      intersection.renderOrder = 1;\n      intersection.material.opacity = 0.375; // Place intersection \n\n      intersection.position.applyMatrix4(mappings.remoteLocal.positionMap);\n      intersection.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n      intersection.scale.applyMatrix4(mappings.remoteLocal.scaleMap);\n      view.scene.add(intersection);\n      view.shared.mesh = intersection;\n      render();\n    }\n  } // Update Loop \n\n\n  function update() {\n    requestAnimationFrame(update);\n    let time = performance.now();\n    let delta = (time - prevTime) / 1000; // Update User \n\n    userMove(delta);\n    updateAvatar();\n    syncAvatar();\n    render();\n    prevTime = time;\n  } // Synchronize with Server \n\n\n  function sync() {\n    WorldServer = DDP.connect(URL);\n    let remoteWorldId = worldId == \"A\" ? \"B\" : \"A\"; // Intersections \n\n    Intersections = new Mongo.Collection(\"intersections\", {\n      connection: WorldServer\n    });\n    WorldServer.subscribe(\"intersections\");\n    let intersectionsUpdates = Intersections.find({});\n    intersectionsUpdates.observeChanges({\n      added: function (docId, newDoc) {\n        view.shared.start = new THREE.Vector3().fromArray(newDoc.start);\n        view.shared.end = new THREE.Vector3().fromArray(newDoc.end);\n        view.shared.loaded = true;\n        loadIntersection();\n      }\n    }); // Rooms\n\n    Rooms = new Mongo.Collection(\"rooms\", {\n      connection: WorldServer\n    });\n    WorldServer.subscribe(\"intersections\");\n    let localRoomUpdates = Rooms.find({\n      id: worldId\n    });\n    localRoomUpdates.observeChanges({\n      added: function (docId, newDoc) {\n        view.room.position = new THREE.Vector3().fromArray(newDoc.position);\n        view.room.quaternion = new THREE.Quaternion().fromArray(newDoc.quaternion);\n        view.room.scale = new THREE.Vector3().fromArray(newDoc.scale);\n        view.room.loaded = true;\n        loadIntersection();\n      }\n    });\n    let remoteRoomUpdates = Rooms.find({\n      id: remoteWorldId\n    });\n    remoteRoomUpdates.observeChanges({\n      added: function (docId, newDoc) {\n        view.remoteRoom.position = new THREE.Vector3().fromArray(newDoc.position);\n        view.remoteRoom.quaternion = new THREE.Quaternion().fromArray(newDoc.quaternion);\n        view.remoteRoom.scale = new THREE.Vector3().fromArray(newDoc.scale);\n        view.remoteRoom.loaded = true;\n        loadIntersection();\n      }\n    }); // Users\n\n    WorldServer.call(\"users.insert\", clientId, worldId); // Insert current client\n\n    Users = new Mongo.Collection(\"users\", {\n      connection: WorldServer\n    });\n    WorldServer.subscribe(\"users\");\n    let remoteUserUpdates = Users.find({\n      clientId: {\n        $ne: clientId\n      }\n    });\n    remoteUserUpdates.observeChanges({\n      added: function (docId, newDoc) {\n        newDoc._id = docId;\n        let newAvatarColor = newDoc.worldId == \"A\" ? 0x0000ff : 0xffff00;\n        newDoc.avatar = newAvatar(newAvatarColor);\n        newDoc.avatar.avatar.position.fromArray(newDoc.position);\n        newDoc.avatar.head.rotation.fromArray(newDoc.headRotation);\n\n        if (newDoc.worldId != worldId) {\n          newDoc.avatar.avatar.position.applyMatrix4(mappings.remoteLocal.positionMap);\n          newDoc.avatar.head.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n        }\n\n        view.scene.add(newDoc.avatar.avatar);\n        newDoc.avatar.avatar.visible = checkShareRemote(newDoc.avatar.avatar.position.clone());\n        view.remoteUsers.push(newDoc); // SHARED COFEE\n\n        let dir = new THREE.Vector3(0.0, 0.0, -1.0).applyQuaternion(newDoc.avatar.head.quaternion);\n        let mx = new THREE.Matrix4().lookAt(new THREE.Vector3(dir.x, 0.0, dir.z), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n        let mugPos = new THREE.Vector3(-0.20, 0.0, -0.20).applyMatrix4(mx);\n        mugPos.y = -0.4;\n        newDoc.avatar.mug.position.copy(mugPos);\n        newDoc.avatar.mug.setRotationFromMatrix(mx);\n        render();\n      },\n      changed: function (docId, newDoc) {\n        let updates = view.remoteUsers.filter(function (user) {\n          return user._id == docId;\n        });\n\n        if (updates.length > 0) {\n          let updatedUser = updates[0];\n          let p = newDoc.position;\n\n          if (p) {\n            updatedUser.avatar.avatar.position.fromArray(p);\n\n            if (updatedUser.worldId != worldId) {\n              updatedUser.avatar.avatar.position.applyMatrix4(mappings.remoteLocal.positionMap);\n            }\n\n            updatedUser.avatar.avatar.visible = checkShareRemote(updatedUser.avatar.avatar.position.clone());\n          }\n\n          let r = newDoc.headRotation;\n\n          if (r) {\n            updatedUser.avatar.head.rotation.fromArray(r);\n\n            if (updatedUser.worldId != worldId) {\n              updatedUser.avatar.head.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n            } // SHARED COFEE\n\n\n            let dir = new THREE.Vector3(0.0, 0.0, -1.0).applyQuaternion(updatedUser.avatar.head.quaternion);\n            let mx = new THREE.Matrix4().lookAt(new THREE.Vector3(dir.x, 0.0, dir.z), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n            let mugPos = new THREE.Vector3(-0.20, 0.0, -0.20).applyMatrix4(mx);\n            mugPos.y = -0.4;\n            updatedUser.avatar.mug.position.copy(mugPos);\n            updatedUser.avatar.mug.setRotationFromMatrix(mx);\n          }\n        }\n\n        render();\n      },\n      removed: function (docId) {\n        let updates = view.remoteUsers.filter(function (user) {\n          return user._id == docId;\n        });\n\n        if (updates.length > 0) {\n          view.scene.remove(updates[0].avatar.avatar);\n          view.remoteUsers = view.remoteUsers.filter(function (user) {\n            return user != updates[0];\n          });\n        }\n      }\n    });\n  }\n\n  window.onload = function () {\n    initThree();\n    initControls();\n    sync();\n    update();\n  };\n\n  window.onbeforeunload = function () {\n    // Disconnect client \n    WorldServer.call(\"users.remove\", clientId);\n  };\n}.call(this, module);","map":{"version":3,"sources":["client/main.js"],"names":["module1","link","FlowRouter","v","Random","THREE","GLTFLoader","PointerLockControls","SliceGeometry","URL","WorldServer","clientId","id","canvas","renderer","view","viewport","scene","camera","room","mesh","Mesh","position","quaternion","scale","loaded","remoteRoom","pointerLock","movement","velocity","Vector3","direction","moveForward","moveBackward","moveLeft","moveRight","avatar","body","head","avatarPrevState","headRotation","Euler","shared","start","end","remoteUsers","mappings","localRemote","positionMap","Matrix4","rotationMap","scaleMap","remoteLocal","localComposite","remoteComposite","compositeLocal","compositeRemote","camFirstParams","fov","near","far","lookAt","worldId","route","name","action","params","queryParams","roomA","roomB","Intersections","Rooms","Users","prevTime","performance","now","lightScene","add","AmbientLight","dir_light","DirectionalLight","set","multiplyScalar","dir_light_2","dir_light_3","dir_light_4","hemiLight","HemisphereLight","color","setHSL","groundColor","newCamera","bounds","getBoundingClientRect","PerspectiveCamera","width","height","copy","newAvatar","Object3D","BoxGeometry","MeshLambertMaterial","avatarEyeLeft","CircleBufferGeometry","MeshBasicMaterial","avatarEyeRight","avatarPupilLeft","avatarPupilRight","attach","mug","newMug","cup","CylinderGeometry","handle","TorusGeometry","Math","PI","rotation","loadModelGLTF","source","Promise","resolve","material","flatShading","side","DoubleSide","opacity","transparent","loader","load","gltf","bufferGeometry","scenes","children","geometry","Geometry","fromBufferGeometry","computeBoundingBox","bbCenter","boundingBox","getCenter","bbSize","getSize","xOffset","x","yOffset","y","zOffset","z","translate","updateMatrix","updateMatrixWorld","renderView","left","right","top","bottom","positiveYUpBottom","domElement","offsetHeight","setViewport","setScissor","setScissorTest","render","initThree","document","getElementById","WebGLRenderer","alpha","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","Scene","background","Color","all","then","result","clone","loadIntersection","userAvatarColor","wasdDown","event","keyCode","wasdUp","initControls","addEventListener","isLocked","lock","removeEventListener","userMove","delta","Number","normalize","updateAvatar","dir","getDirection","mx","setRotationFromMatrix","mugPos","applyMatrix4","mugRotMx","syncAvatar","status","connected","rotDiff","Quaternion","setFromEuler","angleTo","moveDiff","distanceTo","pos","rot","toArray","call","checkShareRemote","min","max","defineMapping","identity","premultiply","makeRotationFromQuaternion","makeScale","makeTranslation","inverse","extractIntersection","bl","tr","br","tl","blbr","Plane","subVectors","bltl","trbr","trtl","intersectGeometry","intersectMaterial","intersection","blComposite","trComposite","brComposite","tlComposite","blRemote","trRemote","brRemote","tlRemote","renderOrder","setFromRotationMatrix","update","requestAnimationFrame","time","sync","DDP","connect","remoteWorldId","Mongo","Collection","connection","subscribe","intersectionsUpdates","find","observeChanges","added","docId","newDoc","fromArray","localRoomUpdates","remoteRoomUpdates","remoteUserUpdates","$ne","_id","newAvatarColor","visible","push","applyQuaternion","changed","updates","filter","user","length","updatedUser","p","r","removed","remove","onload","onbeforeunload"],"mappings":";AAAAA,EAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AAA4B,MAAIC,UAAJ;AAAeF,EAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb,EAA+C;AAACC,IAAAA,UAAU,CAACC,CAAD,EAAG;AAACD,MAAAA,UAAU,GAACC,CAAX;AAAa;;AAA5B,GAA/C,EAA6E,CAA7E;AAAgF,MAAIC,MAAJ;AAAWJ,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAb,EAA6B;AAACG,IAAAA,MAAM,CAACD,CAAD,EAAG;AAACC,MAAAA,MAAM,GAACD,CAAP;AAAS;;AAApB,GAA7B,EAAmD,CAAnD;AAAsD,MAAIE,KAAJ;AAAUL,EAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb,EAAuC;AAAC,QAAIE,CAAJ,EAAM;AAACE,MAAAA,KAAK,GAACF,CAAN;AAAQ;;AAAhB,GAAvC,EAAyD,CAAzD;AAA4D,MAAIG,UAAJ;AAAeN,EAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb,EAAqC;AAACK,IAAAA,UAAU,CAACH,CAAD,EAAG;AAACG,MAAAA,UAAU,GAACH,CAAX;AAAa;;AAA5B,GAArC,EAAmE,CAAnE;AAAsE,MAAII,mBAAJ;AAAwBP,EAAAA,OAAO,CAACC,IAAR,CAAa,gCAAb,EAA8C;AAACM,IAAAA,mBAAmB,CAACJ,CAAD,EAAG;AAACI,MAAAA,mBAAmB,GAACJ,CAApB;AAAsB;;AAA9C,GAA9C,EAA8F,CAA9F;AAAiG,MAAIK,aAAJ;AAAkBR,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAb,EAA6B;AAACO,IAAAA,aAAa,CAACL,CAAD,EAAG;AAACK,MAAAA,aAAa,GAACL,CAAd;AAAgB;;AAAlC,GAA7B,EAAiE,CAAjE;AAQle;AACA,QAAMM,GAAG,GAAG,wBAAZ;AACA,MAAIC,WAAJ;AACA,MAAIC,QAAQ,GAAGP,MAAM,CAACQ,EAAP,EAAf,C,CACA;;AACA,MAAIC,MAAJ,EAAYC,QAAZ,C,CAEA;;AACA,MAAIC,IAAI,GAAG;AACPC,IAAAA,QAAQ,EAAE,IADH;AAEPC,IAAAA,KAAK,EAAE,IAFA;AAGPC,IAAAA,MAAM,EAAE,IAHD;AAIPC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,IAAIf,KAAK,CAACgB,IAAV,EADJ;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,UAAU,EAAE,IAHV;AAIFC,MAAAA,KAAK,EAAE,IAJL;AAKFC,MAAAA,MAAM,EAAE;AALN,KAJC;AAWPC,IAAAA,UAAU,EAAE;AACRN,MAAAA,IAAI,EAAE,IAAIf,KAAK,CAACgB,IAAV,EADE;AAERC,MAAAA,QAAQ,EAAE,IAFF;AAGRC,MAAAA,UAAU,EAAE,IAHJ;AAIRC,MAAAA,KAAK,EAAE,IAJC;AAKRC,MAAAA,MAAM,EAAE;AALA,KAXL;AAkBPE,IAAAA,WAAW,EAAE,IAlBN;AAmBPC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,IAAIxB,KAAK,CAACyB,OAAV,EADJ;AAENC,MAAAA,SAAS,EAAE,IAAI1B,KAAK,CAACyB,OAAV,EAFL;AAGNE,MAAAA,WAAW,EAAE,KAHP;AAINC,MAAAA,YAAY,EAAE,KAJR;AAKNC,MAAAA,QAAQ,EAAE,KALJ;AAMNC,MAAAA,SAAS,EAAE;AANL,KAnBH;AA2BPC,IAAAA,MAAM,EAAE;AACJA,MAAAA,MAAM,EAAE,IADJ;AAEJC,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,IAAI,EAAE;AAHF,KA3BD;AAgCPC,IAAAA,eAAe,EAAE;AACbjB,MAAAA,QAAQ,EAAE,IAAIjB,KAAK,CAACyB,OAAV,EADG;AAEbU,MAAAA,YAAY,EAAE,IAAInC,KAAK,CAACoC,KAAV;AAFD,KAhCV;AAoCPC,IAAAA,MAAM,EAAE;AACJtB,MAAAA,IAAI,EAAE,IADF;AAEJuB,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,GAAG,EAAE,IAHD;AAIJnB,MAAAA,MAAM,EAAE;AAJJ,KApCD;AA0CPoB,IAAAA,WAAW,EAAE;AA1CN,GAAX,C,CA6CA;;AACA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,WAAW,EAAE;AACTC,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADJ;AAETC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFJ;AAGTE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHD,KADF;AAMXG,IAAAA,WAAW,EAAE;AACTJ,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADJ;AAETC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFJ;AAGTE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHD,KANF;AAWXI,IAAAA,cAAc,EAAE;AACZL,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADD;AAEZC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFD;AAGZE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHE,KAXL;AAgBXK,IAAAA,eAAe,EAAE;AACbN,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADA;AAEbC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFA;AAGbE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHG,KAhBN;AAqBXM,IAAAA,cAAc,EAAE;AACZP,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADD;AAEZC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFD;AAGZE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHE,KArBL;AA0BXO,IAAAA,eAAe,EAAE;AACbR,MAAAA,WAAW,EAAE,IAAI3C,KAAK,CAAC4C,OAAV,EADA;AAEbC,MAAAA,WAAW,EAAE,IAAI7C,KAAK,CAAC4C,OAAV,EAFA;AAGbE,MAAAA,QAAQ,EAAE,IAAI9C,KAAK,CAAC4C,OAAV;AAHG;AA1BN,GAAf,C,CAiCA;;AACA,MAAIQ,cAAc,GAAG;AACjBC,IAAAA,GAAG,EAAE,EADY;AAEjBC,IAAAA,IAAI,EAAE,GAFW;AAGjBC,IAAAA,GAAG,EAAE,GAHY;AAIjBtC,IAAAA,QAAQ,EAAE,IAAIjB,KAAK,CAACyB,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,CAJO;AAKjB+B,IAAAA,MAAM,EAAE,IAAIxD,KAAK,CAACyB,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,CAAC,GAA7B;AALS,GAArB,C,CAQA;;AACA,MAAIgC,OAAJ;AACA5D,EAAAA,UAAU,CAAC6D,KAAX,CAAiB,MAAjB,EAAyB;AACrBC,IAAAA,IAAI,EAAE,gBADe;;AAErBC,IAAAA,MAAM,CAACC,MAAD,EAASC,WAAT,EAAsB;AACxBL,MAAAA,OAAO,GAAGI,MAAM,CAACtD,EAAjB;AACH;;AAJoB,GAAzB,E,CAOA;;AACA,MAAIwD,KAAJ,EAAWC,KAAX,C,CAEA;;AACA,MAAIC,aAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,KAAJ,C,CAEA;;AACA,MAAIC,QAAQ,GAAGC,WAAW,CAACC,GAAZ,EAAf,C,CAEA;;AACA,WAASC,UAAT,CAAoB3D,KAApB,EAA2B;AACvB;AACAA,IAAAA,KAAK,CAAC4D,GAAN,CAAU,IAAIxE,KAAK,CAACyE,YAAV,CAAuB,QAAvB,EAAiC,GAAjC,CAAV,EAFuB,CAIvB;;AACA,QAAIC,SAAS,GAAG,IAAI1E,KAAK,CAAC2E,gBAAV,CAA2B,QAA3B,EAAqC,GAArC,CAAhB;AACAD,IAAAA,SAAS,CAACzD,QAAV,CAAmB2D,GAAnB,CAAuB,EAAvB,EAA2B,GAA3B,EAAgC,GAAhC;AACAF,IAAAA,SAAS,CAACzD,QAAV,CAAmB4D,cAAnB,CAAkC,GAAlC;AACAjE,IAAAA,KAAK,CAAC4D,GAAN,CAAUE,SAAV;AAEA,QAAII,WAAW,GAAG,IAAI9E,KAAK,CAAC2E,gBAAV,CAA2B,QAA3B,EAAqC,GAArC,CAAlB;AACAG,IAAAA,WAAW,CAAC7D,QAAZ,CAAqB2D,GAArB,CAAyB,CAAC,GAA1B,EAA+B,EAA/B,EAAmC,CAAC,GAApC;AACAE,IAAAA,WAAW,CAAC7D,QAAZ,CAAqB4D,cAArB,CAAoC,GAApC;AACAjE,IAAAA,KAAK,CAAC4D,GAAN,CAAUM,WAAV;AAEA,QAAIC,WAAW,GAAG,IAAI/E,KAAK,CAAC2E,gBAAV,CAA2B,QAA3B,EAAqC,GAArC,CAAlB,CAfuB,CAesC;;AAC7DI,IAAAA,WAAW,CAAC9D,QAAZ,CAAqB2D,GAArB,CAAyB,GAAzB,EAA8B,CAAC,EAA/B,EAAmC,CAAC,EAApC;AACAG,IAAAA,WAAW,CAAC9D,QAAZ,CAAqB4D,cAArB,CAAoC,GAApC;AACAjE,IAAAA,KAAK,CAAC4D,GAAN,CAAUO,WAAV;AAEA,QAAIC,WAAW,GAAG,IAAIhF,KAAK,CAAC2E,gBAAV,CAA2B,QAA3B,EAAqC,GAArC,CAAlB;AACAK,IAAAA,WAAW,CAAC/D,QAAZ,CAAqB2D,GAArB,CAAyB,CAAzB,EAA4B,CAAC,GAA7B,EAAkC,CAAlC;AACAI,IAAAA,WAAW,CAAC/D,QAAZ,CAAqB4D,cAArB,CAAoC,GAApC;AACAjE,IAAAA,KAAK,CAAC4D,GAAN,CAAUQ,WAAV,EAvBuB,CAyBvB;;AACA,QAAIC,SAAS,GAAG,IAAIjF,KAAK,CAACkF,eAAV,CAA0B,QAA1B,EAAoC,QAApC,EAA8C,GAA9C,CAAhB;AACAD,IAAAA,SAAS,CAACE,KAAV,CAAgBC,MAAhB,CAAuB,GAAvB,EAA4B,CAA5B,EAA+B,GAA/B;AACAH,IAAAA,SAAS,CAACI,WAAV,CAAsBD,MAAtB,CAA6B,KAA7B,EAAoC,CAApC,EAAuC,IAAvC;AACAH,IAAAA,SAAS,CAAChE,QAAV,CAAmB2D,GAAnB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AACAhE,IAAAA,KAAK,CAAC4D,GAAN,CAAUS,SAAV;AACH,G,CAED;;;AACA,WAASK,SAAT,CAAmBzB,MAAnB,EAA2BnD,IAA3B,EAAiC;AAC7B,QAAI6E,MAAM,GAAG7E,IAAI,CAAC8E,qBAAL,EAAb;AACA,QAAI3E,MAAM,GAAG,IAAIb,KAAK,CAACyF,iBAAV,CACT5B,MAAM,CAACR,GADE,EAETkC,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACI,MAFb,EAGT9B,MAAM,CAACP,IAHE,EAITO,MAAM,CAACN,GAJE,CAAb;AAMA1C,IAAAA,MAAM,CAACI,QAAP,CAAgB2E,IAAhB,CAAqB/B,MAAM,CAAC5C,QAA5B;AACAJ,IAAAA,MAAM,CAAC2C,MAAP,CAAcK,MAAM,CAACL,MAArB;AACA,WAAO3C,MAAP;AACH,G,CAED;;;AACA,WAASgF,SAAT,CAAmBV,KAAnB,EAA0B;AACtB,QAAIpD,MAAM,GAAG,IAAI/B,KAAK,CAAC8F,QAAV,EAAb,CADsB,CAEtB;;AACA,QAAI7D,IAAI,GAAG,IAAIjC,KAAK,CAACgB,IAAV,CACP,IAAIhB,KAAK,CAAC+F,WAAV,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,CADO,EAEP,IAAI/F,KAAK,CAACgG,mBAAV,CAA8B;AAAEb,MAAAA,KAAK,EAAEA;AAAT,KAA9B,CAFO,CAAX;AAIA,QAAIc,aAAa,GAAG,IAAIjG,KAAK,CAACgB,IAAV,CAChB,IAAIhB,KAAK,CAACkG,oBAAV,CAA+B,IAA/B,EAAqC,EAArC,CADgB,EAEhB,IAAIlG,KAAK,CAACmG,iBAAV,CAA4B;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAA5B,CAFgB,CAApB;AAIAc,IAAAA,aAAa,CAAChF,QAAd,CAAuB2D,GAAvB,CAA2B,CAAC,KAA5B,EAAmC,CAAnC,EAAsC,IAAtC;AACA,QAAIwB,cAAc,GAAG,IAAIpG,KAAK,CAACgB,IAAV,CACjB,IAAIhB,KAAK,CAACkG,oBAAV,CAA+B,IAA/B,EAAqC,EAArC,CADiB,EAEjB,IAAIlG,KAAK,CAACmG,iBAAV,CAA4B;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAA5B,CAFiB,CAArB;AAIAiB,IAAAA,cAAc,CAACnF,QAAf,CAAwB2D,GAAxB,CAA4B,KAA5B,EAAmC,CAAnC,EAAsC,IAAtC;AACA,QAAIyB,eAAe,GAAG,IAAIrG,KAAK,CAACgB,IAAV,CAClB,IAAIhB,KAAK,CAACkG,oBAAV,CAA+B,KAA/B,EAAsC,EAAtC,CADkB,EAElB,IAAIlG,KAAK,CAACmG,iBAAV,CAA4B;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAA5B,CAFkB,CAAtB;AAIAkB,IAAAA,eAAe,CAACpF,QAAhB,CAAyB2D,GAAzB,CAA6B,CAAC,KAA9B,EAAqC,CAArC,EAAwC,KAAxC;AACA,QAAI0B,gBAAgB,GAAG,IAAItG,KAAK,CAACgB,IAAV,CACnB,IAAIhB,KAAK,CAACkG,oBAAV,CAA+B,KAA/B,EAAsC,EAAtC,CADmB,EAEnB,IAAIlG,KAAK,CAACmG,iBAAV,CAA4B;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAA5B,CAFmB,CAAvB;AAIAmB,IAAAA,gBAAgB,CAACrF,QAAjB,CAA0B2D,GAA1B,CAA8B,KAA9B,EAAqC,CAArC,EAAwC,KAAxC;AACA3C,IAAAA,IAAI,CAACsE,MAAL,CAAYN,aAAZ;AACAhE,IAAAA,IAAI,CAACsE,MAAL,CAAYH,cAAZ;AACAnE,IAAAA,IAAI,CAACsE,MAAL,CAAYF,eAAZ;AACApE,IAAAA,IAAI,CAACsE,MAAL,CAAYD,gBAAZ;AACAvE,IAAAA,MAAM,CAACwE,MAAP,CAActE,IAAd;AACA,QAAID,IAAI,GAAG,IAAIhC,KAAK,CAACgB,IAAV,CACP,IAAIhB,KAAK,CAAC+F,WAAV,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,IAAjC,CADO,EAEP,IAAI/F,KAAK,CAACgG,mBAAV,CAA8B;AAAEb,MAAAA,KAAK,EAAEA;AAAT,KAA9B,CAFO,CAAX;AAIAnD,IAAAA,IAAI,CAACf,QAAL,CAAc2D,GAAd,CAAkB,GAAlB,EAAuB,CAAC,GAAxB,EAA6B,GAA7B;AACA7C,IAAAA,MAAM,CAACwE,MAAP,CAAcvE,IAAd,EArCsB,CAuCtB;;AACA,QAAIwE,GAAG,GAAGC,MAAM,EAAhB;AACA1E,IAAAA,MAAM,CAACwE,MAAP,CAAcC,GAAd;AACAA,IAAAA,GAAG,CAACvF,QAAJ,CAAa2D,GAAb,CAAiB,CAAC,IAAlB,EAAwB,CAAC,GAAzB,EAA8B,CAAC,IAA/B;AAEA,WAAO;AACH7C,MAAAA,MAAM,EAAEA,MADL;AAEHC,MAAAA,IAAI,EAAEA,IAFH;AAGHC,MAAAA,IAAI,EAAEA,IAHH;AAIHuE,MAAAA,GAAG,EAAEA;AAJF,KAAP;AAMH,G,CAED;;;AACA,WAASC,MAAT,GAAkB;AACd;AACA,QAAIC,GAAG,GAAG,IAAI1G,KAAK,CAACgB,IAAV,CAAe,IAAIhB,KAAK,CAAC2G,gBAAV,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,GAAxC,EAA6C,EAA7C,CAAf,EAAiE,IAAI3G,KAAK,CAACgG,mBAAV,CAA8B;AAAEb,MAAAA,KAAK,EAAE;AAAT,KAA9B,CAAjE,CAAV;AACA,QAAIyB,MAAM,GAAG,IAAI5G,KAAK,CAACgB,IAAV,CAAe,IAAIhB,KAAK,CAAC6G,aAAV,CAAwB,GAAxB,EAA6B,KAA7B,EAAoC,EAApC,EAAwC,GAAxC,EAA6CC,IAAI,CAACC,EAAL,GAAU,CAAvD,CAAf,EAA0E,IAAI/G,KAAK,CAACgG,mBAAV,CAA8B;AAAEb,MAAAA,KAAK,EAAE;AAAT,KAA9B,CAA1E,CAAb;AACA,QAAIqB,GAAG,GAAG,IAAIxG,KAAK,CAAC8F,QAAV,EAAV;AACAY,IAAAA,GAAG,CAACzF,QAAJ,CAAa2D,GAAb,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAgC,IAAAA,MAAM,CAAC3F,QAAP,CAAgB2D,GAAhB,CAAoB,CAApB,EAAuB,KAAvB,EAA8B,IAA9B;AACAgC,IAAAA,MAAM,CAACI,QAAP,CAAgBpC,GAAhB,CAAoB,GAApB,EAAyBkC,IAAI,CAACC,EAAL,GAAU,GAAnC,EAAwC,GAAxC;AACAP,IAAAA,GAAG,CAAChC,GAAJ,CAAQkC,GAAR;AACAF,IAAAA,GAAG,CAAChC,GAAJ,CAAQoC,MAAR;AACAJ,IAAAA,GAAG,CAACrF,KAAJ,CAAUyD,GAAV,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB;AAEA,WAAO4B,GAAP;AACH,G,CAED;;;AACA,MAAIS,aAAa,GAAG,UAAUC,MAAV,EAAkB/B,KAAlB,EAAyB;AACzC,WAAO,IAAIgC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClC,UAAIC,QAAQ,GAAG,IAAIrH,KAAK,CAACgG,mBAAV,CAA8B;AACzCsB,QAAAA,WAAW,EAAE,IAD4B;AAEzCC,QAAAA,IAAI,EAAEvH,KAAK,CAACwH,UAF6B;AAEjB;AACxBrC,QAAAA,KAAK,EAAEA,KAHkC;AAIzCsC,QAAAA,OAAO,EAAE,GAJgC;AAKzCC,QAAAA,WAAW,EAAE;AAL4B,OAA9B,CAAf;AAQA,UAAIC,MAAM,GAAG,IAAI1H,UAAJ,EAAb;AAEA0H,MAAAA,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoB,UAAUW,IAAV,EAAgB;AAChC,YAAIC,cAAc,GAAGD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,QAAf,CAAwB,CAAxB,EAA2BC,QAAhD;AACA,YAAIA,QAAQ,GAAG,IAAIjI,KAAK,CAACkI,QAAV,EAAf;AACAD,QAAAA,QAAQ,CAACE,kBAAT,CAA4BL,cAA5B;AACA,YAAI/G,IAAI,GAAG,IAAIf,KAAK,CAACgB,IAAV,CAAeiH,QAAf,EAAyBZ,QAAzB,CAAX,CAJgC,CAMhC;;AACAtG,QAAAA,IAAI,CAACkH,QAAL,CAAcG,kBAAd;AACA,YAAIC,QAAQ,GAAG,IAAIrI,KAAK,CAACyB,OAAV,EAAf;AACAV,QAAAA,IAAI,CAACkH,QAAL,CAAcK,WAAd,CAA0BC,SAA1B,CAAoCF,QAApC;AACA,YAAIG,MAAM,GAAG,IAAIxI,KAAK,CAACyB,OAAV,EAAb;AACAV,QAAAA,IAAI,CAACkH,QAAL,CAAcK,WAAd,CAA0BG,OAA1B,CAAkCD,MAAlC;AACA,YAAIE,OAAO,GAAG,CAACL,QAAQ,CAACM,CAAxB;AACA,YAAIC,OAAO,GAAG,CAACP,QAAQ,CAACQ,CAAV,GAAc,MAAML,MAAM,CAACK,CAAzC;AACA,YAAIC,OAAO,GAAG,CAACT,QAAQ,CAACU,CAAxB;AACAhI,QAAAA,IAAI,CAACkH,QAAL,CAAce,SAAd,CAAwBN,OAAxB,EAAiCE,OAAjC,EAA0CE,OAA1C;AACA/H,QAAAA,IAAI,CAACkI,YAAL;AACAlI,QAAAA,IAAI,CAACmI,iBAAL;AAEA9B,QAAAA,OAAO,CAACrG,IAAD,CAAP;AACH,OApBD;AAqBH,KAhCM,CAAP;AAiCH,GAlCD,C,CAoCA;;;AACA,WAASoI,UAAT,CAAoBvI,KAApB,EAA2BC,MAA3B,EAAmCH,IAAnC,EAAyC;AACrC,QAAI;AACA0I,MAAAA,IADA;AAEAC,MAAAA,KAFA;AAGAC,MAAAA,GAHA;AAIAC,MAAAA,MAJA;AAKA7D,MAAAA,KALA;AAMAC,MAAAA;AANA,QAOAjF,IAAI,CAAC8E,qBAAL,EAPJ;AAQA,QAAIgE,iBAAiB,GAAG/I,QAAQ,CAACgJ,UAAT,CAAoBC,YAApB,GAAmCH,MAA3D;AACA9I,IAAAA,QAAQ,CAACkJ,WAAT,CAAqBP,IAArB,EAA2BI,iBAA3B,EAA8C9D,KAA9C,EAAqDC,MAArD;AACAlF,IAAAA,QAAQ,CAACmJ,UAAT,CAAoBR,IAApB,EAA0BI,iBAA1B,EAA6C9D,KAA7C,EAAoDC,MAApD;AACAlF,IAAAA,QAAQ,CAACoJ,cAAT,CAAwB,IAAxB;AACApJ,IAAAA,QAAQ,CAACqJ,MAAT,CAAgBlJ,KAAhB,EAAuBC,MAAvB;AACH;;AACD,WAASiJ,MAAT,GAAkB;AACdX,IAAAA,UAAU,CAACzI,IAAI,CAACE,KAAN,EAAaF,IAAI,CAACG,MAAlB,EAA0BH,IAAI,CAACC,QAA/B,CAAV;AACH,G,CAED;;;AACA,WAASoJ,SAAT,GAAqB;AACjB;AACAvJ,IAAAA,MAAM,GAAGwJ,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAAT;AACAxJ,IAAAA,QAAQ,GAAG,IAAIT,KAAK,CAACkK,aAAV,CAAwB;AAAE1J,MAAAA,MAAF;AAAU2J,MAAAA,KAAK,EAAE;AAAjB,KAAxB,CAAX;AACA1J,IAAAA,QAAQ,CAAC2J,aAAT,CAAuBC,MAAM,CAACC,gBAA9B;AACA7J,IAAAA,QAAQ,CAAC8J,OAAT,CAAiB/J,MAAM,CAACgK,WAAxB,EAAqChK,MAAM,CAACkJ,YAA5C,EALiB,CAOjB;;AACAhJ,IAAAA,IAAI,CAACC,QAAL,GAAgBqJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB,CARiB,CAUjB;;AACAvJ,IAAAA,IAAI,CAACE,KAAL,GAAa,IAAIZ,KAAK,CAACyK,KAAV,EAAb;AACA/J,IAAAA,IAAI,CAACE,KAAL,CAAW8J,UAAX,GAAwB,IAAI1K,KAAK,CAAC2K,KAAV,CAAgB,QAAhB,CAAxB,CAZiB,CAcjB;;AACApG,IAAAA,UAAU,CAAC7D,IAAI,CAACE,KAAN,CAAV,CAfiB,CAiBjB;;AACAF,IAAAA,IAAI,CAACE,KAAL,CAAW4D,GAAX,CAAe9D,IAAI,CAACI,IAAL,CAAUC,IAAzB;AACAoG,IAAAA,OAAO,CAACyD,GAAR,CAAY,CACR3D,aAAa,CAAC,eAAD,EAAkB,QAAlB,CADL,EAERA,aAAa,CAAC,eAAD,EAAkB,QAAlB,CAFL,CAAZ,EAGG4D,IAHH,CAGQC,MAAM,IAAI;AACd/G,MAAAA,KAAK,GAAG+G,MAAM,CAAC,CAAD,CAAd;AACA9G,MAAAA,KAAK,GAAG8G,MAAM,CAAC,CAAD,CAAd;;AACA,UAAIrH,OAAO,IAAI,GAAf,EAAoB;AAChB/C,QAAAA,IAAI,CAACI,IAAL,CAAUC,IAAV,CAAekH,QAAf,GAA0BlE,KAAK,CAACkE,QAAN,CAAe8C,KAAf,EAA1B;AACArK,QAAAA,IAAI,CAACI,IAAL,CAAUC,IAAV,CAAesG,QAAf,GAA0BtD,KAAK,CAACsD,QAAN,CAAe0D,KAAf,EAA1B;AACArK,QAAAA,IAAI,CAACW,UAAL,CAAgBN,IAAhB,CAAqBkH,QAArB,GAAgCjE,KAAK,CAACiE,QAAN,CAAe8C,KAAf,EAAhC;AACArK,QAAAA,IAAI,CAACW,UAAL,CAAgBN,IAAhB,CAAqBsG,QAArB,GAAgCrD,KAAK,CAACqD,QAAN,CAAe0D,KAAf,EAAhC;AACH,OALD,MAKO;AACHrK,QAAAA,IAAI,CAACI,IAAL,CAAUC,IAAV,CAAekH,QAAf,GAA0BjE,KAAK,CAACiE,QAAN,CAAe8C,KAAf,EAA1B;AACArK,QAAAA,IAAI,CAACI,IAAL,CAAUC,IAAV,CAAesG,QAAf,GAA0BrD,KAAK,CAACqD,QAAN,CAAe0D,KAAf,EAA1B;AACArK,QAAAA,IAAI,CAACW,UAAL,CAAgBN,IAAhB,CAAqBkH,QAArB,GAAgClE,KAAK,CAACkE,QAAN,CAAe8C,KAAf,EAAhC;AACArK,QAAAA,IAAI,CAACW,UAAL,CAAgBN,IAAhB,CAAqBsG,QAArB,GAAgCtD,KAAK,CAACsD,QAAN,CAAe0D,KAAf,EAAhC;AACH;;AAEDC,MAAAA,gBAAgB;AAEhBlB,MAAAA,MAAM;AACT,KArBD,EAnBiB,CA0CjB;;AACApJ,IAAAA,IAAI,CAACG,MAAL,GAAcyE,SAAS,CAAClC,cAAD,EAAiB1C,IAAI,CAACC,QAAtB,CAAvB;AACAD,IAAAA,IAAI,CAACE,KAAL,CAAW4D,GAAX,CAAe9D,IAAI,CAACG,MAApB,EA5CiB,CA8CjB;;AACA,QAAIoK,eAAe,GAAIxH,OAAO,IAAI,GAAZ,GAAmB,QAAnB,GAA8B,QAApD;AACA/C,IAAAA,IAAI,CAACqB,MAAL,GAAc8D,SAAS,CAACoF,eAAD,CAAvB;AACAvK,IAAAA,IAAI,CAACE,KAAL,CAAW4D,GAAX,CAAe9D,IAAI,CAACqB,MAAL,CAAYA,MAA3B;AACArB,IAAAA,IAAI,CAACwB,eAAL,CAAqBjB,QAArB,CAA8B2E,IAA9B,CAAmClF,IAAI,CAACqB,MAAL,CAAYA,MAAZ,CAAmBd,QAAtD;AACAP,IAAAA,IAAI,CAACwB,eAAL,CAAqBC,YAArB,CAAkCyD,IAAlC,CAAuClF,IAAI,CAACqB,MAAL,CAAYE,IAAZ,CAAiB+E,QAAxD,EAnDiB,CAqDjB;;AACA8C,IAAAA,MAAM;AACT,G,CAED;;;AACA,WAASoB,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,YAAQA,KAAK,CAACC,OAAd;AACI,WAAK,EAAL;AAAS;AACL1K,QAAAA,IAAI,CAACa,QAAL,CAAcI,WAAd,GAA4B,IAA5B;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLjB,QAAAA,IAAI,CAACa,QAAL,CAAcM,QAAd,GAAyB,IAAzB;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLnB,QAAAA,IAAI,CAACa,QAAL,CAAcK,YAAd,GAA6B,IAA7B;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLlB,QAAAA,IAAI,CAACa,QAAL,CAAcO,SAAd,GAA0B,IAA1B;AACA;AAfR;AAiBH;;AACD,WAASuJ,MAAT,CAAgBF,KAAhB,EAAuB;AACnB,YAAQA,KAAK,CAACC,OAAd;AACI,WAAK,EAAL;AAAS;AACL1K,QAAAA,IAAI,CAACa,QAAL,CAAcI,WAAd,GAA4B,KAA5B;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLjB,QAAAA,IAAI,CAACa,QAAL,CAAcM,QAAd,GAAyB,KAAzB;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLnB,QAAAA,IAAI,CAACa,QAAL,CAAcK,YAAd,GAA6B,KAA7B;AACA;;AAEJ,WAAK,EAAL;AAAS;AACLlB,QAAAA,IAAI,CAACa,QAAL,CAAcO,SAAd,GAA0B,KAA1B;AACA;AAfR;AAiBH,G,CAED;;;AACA,WAASwJ,YAAT,GAAwB;AACpB;AACA5K,IAAAA,IAAI,CAACY,WAAL,GAAmB,IAAIpB,mBAAJ,CACfQ,IAAI,CAACG,MADU,EAEfH,IAAI,CAACC,QAFU,CAAnB;AAIAD,IAAAA,IAAI,CAACY,WAAL,CAAiBiK,gBAAjB,CAAkC,QAAlC,EAA4CzB,MAA5C;AACApJ,IAAAA,IAAI,CAACC,QAAL,CAAc4K,gBAAd,CAA+B,OAA/B,EAAwC,UAAUJ,KAAV,EAAiB;AACrD,UAAIzK,IAAI,CAACY,WAAL,CAAiBkK,QAAjB,IAA6B,IAAjC,EAAuC;AACnC9K,QAAAA,IAAI,CAACY,WAAL,CAAiBmK,IAAjB;AACAzB,QAAAA,QAAQ,CAACuB,gBAAT,CAA0B,SAA1B,EAAqCL,QAArC;AACAlB,QAAAA,QAAQ,CAACuB,gBAAT,CAA0B,OAA1B,EAAmCF,MAAnC;AACH;AACJ,KAND;AAOA3K,IAAAA,IAAI,CAACY,WAAL,CAAiBiK,gBAAjB,CAAkC,QAAlC,EAA4C,UAAUJ,KAAV,EAAiB;AACzDnB,MAAAA,QAAQ,CAAC0B,mBAAT,CAA6B,SAA7B,EAAwCR,QAAxC;AACAlB,MAAAA,QAAQ,CAAC0B,mBAAT,CAA6B,OAA7B,EAAsCL,MAAtC;AACH,KAHD;AAIH,G,CAED;;;AACA,WAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrBlL,IAAAA,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBmH,CAAvB,IACIjI,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBmH,CAAvB,GAA2B,IAA3B,GAAkCiD,KADtC;AAEAlL,IAAAA,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBuH,CAAvB,IACIrI,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBuH,CAAvB,GAA2B,IAA3B,GAAkC6C,KADtC;AAEAlL,IAAAA,IAAI,CAACa,QAAL,CAAcG,SAAd,CAAwBqH,CAAxB,GACI8C,MAAM,CAACnL,IAAI,CAACa,QAAL,CAAcI,WAAf,CAAN,GACAkK,MAAM,CAACnL,IAAI,CAACa,QAAL,CAAcK,YAAf,CAFV;AAGAlB,IAAAA,IAAI,CAACa,QAAL,CAAcG,SAAd,CAAwBiH,CAAxB,GACIkD,MAAM,CAACnL,IAAI,CAACa,QAAL,CAAcO,SAAf,CAAN,GACA+J,MAAM,CAACnL,IAAI,CAACa,QAAL,CAAcM,QAAf,CAFV;AAGAnB,IAAAA,IAAI,CAACa,QAAL,CAAcG,SAAd,CAAwBoK,SAAxB;AACA,QAAIpL,IAAI,CAACa,QAAL,CAAcI,WAAd,IAA6BjB,IAAI,CAACa,QAAL,CAAcK,YAA/C,EACIlB,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBuH,CAAvB,IACIrI,IAAI,CAACa,QAAL,CAAcG,SAAd,CAAwBqH,CAAxB,GAA4B,IAA5B,GAAmC6C,KADvC;AAEJ,QAAIlL,IAAI,CAACa,QAAL,CAAcM,QAAd,IAA0BnB,IAAI,CAACa,QAAL,CAAcO,SAA5C,EACIpB,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBmH,CAAvB,IACIjI,IAAI,CAACa,QAAL,CAAcG,SAAd,CAAwBiH,CAAxB,GAA4B,IAA5B,GAAmCiD,KADvC;AAEJlL,IAAAA,IAAI,CAACY,WAAL,CAAiBQ,SAAjB,CAA2B,CAACpB,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBmH,CAAxB,GAA4BiD,KAAvD;AACAlL,IAAAA,IAAI,CAACY,WAAL,CAAiBK,WAAjB,CAA6B,CAACjB,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBuH,CAAxB,GAA4B6C,KAAzD;AACH,G,CAED;;;AACA,WAASG,YAAT,GAAwB;AACpB,QAAIrL,IAAI,CAACqB,MAAL,CAAYA,MAAZ,IAAsB,IAA1B,EAAgC;AAC5B;AACArB,MAAAA,IAAI,CAACqB,MAAL,CAAYA,MAAZ,CAAmBd,QAAnB,CAA4B2E,IAA5B,CAAiClF,IAAI,CAACG,MAAL,CAAYI,QAA7C;AACH;;AAED,QAAIP,IAAI,CAACqB,MAAL,CAAYE,IAAZ,IAAoB,IAAxB,EAA8B;AAC1B;AACA,UAAI+J,GAAG,GAAG,IAAIhM,KAAK,CAACyB,OAAV,EAAV;AACAf,MAAAA,IAAI,CAACY,WAAL,CAAiB2K,YAAjB,CAA8BD,GAA9B;AACA,UAAIE,EAAE,GAAG,IAAIlM,KAAK,CAAC4C,OAAV,GAAoBY,MAApB,CACLwI,GADK,EAEL,IAAIhM,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAFK,EAGL,IAAIzB,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAHK,CAAT;AAKAf,MAAAA,IAAI,CAACqB,MAAL,CAAYE,IAAZ,CAAiBkK,qBAAjB,CAAuCD,EAAvC,EAT0B,CAW1B;;AACA,UAAIE,MAAM,GAAG,IAAIpM,KAAK,CAACyB,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC4K,YAAjC,CAA8CH,EAA9C,CAAb;AACAE,MAAAA,MAAM,CAACvD,CAAP,GAAW,CAAC,GAAZ;AACA,UAAIyD,QAAQ,GAAG,IAAItM,KAAK,CAAC4C,OAAV,GAAoBY,MAApB,CACX,IAAIxD,KAAK,CAACyB,OAAV,CAAkB,CAACuK,GAAG,CAACrD,CAAvB,EAA0B,GAA1B,EAA+B,CAACqD,GAAG,CAACjD,CAApC,CADW,EAEX,IAAI/I,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAFW,EAGX,IAAIzB,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAHW,CAAf;AAKAf,MAAAA,IAAI,CAACqB,MAAL,CAAYyE,GAAZ,CAAgBvF,QAAhB,CAAyB2E,IAAzB,CAA8BwG,MAA9B;AACA1L,MAAAA,IAAI,CAACqB,MAAL,CAAYyE,GAAZ,CAAgB2F,qBAAhB,CAAsCG,QAAtC;AACH;AACJ,G,CAED;;;AACA,WAASC,UAAT,GAAsB;AAClB,QAAIlM,WAAW,CAACmM,MAAZ,GAAqBC,SAAzB,EAAoC;AAChC,UAAIC,OAAO,GAAG,IAAI1M,KAAK,CAAC2M,UAAV,GACTC,YADS,CACIlM,IAAI,CAACwB,eAAL,CAAqBC,YADzB,EAET0K,OAFS,CAEDnM,IAAI,CAACqB,MAAL,CAAYE,IAAZ,CAAiBf,UAFhB,CAAd;AAGA,UAAI4L,QAAQ,GAAGpM,IAAI,CAACwB,eAAL,CAAqBjB,QAArB,CAA8B8L,UAA9B,CAAyCrM,IAAI,CAACqB,MAAL,CAAYA,MAAZ,CAAmBd,QAA5D,CAAf;;AACA,UAAK6L,QAAQ,GAAG,GAAZ,IAAqBJ,OAAO,GAAG,IAAnC,EAA0C;AACtC,YAAIM,GAAG,GAAG,EAAV;AACA,YAAIC,GAAG,GAAG,EAAV;AACAvM,QAAAA,IAAI,CAACqB,MAAL,CAAYA,MAAZ,CAAmBd,QAAnB,CAA4BiM,OAA5B,CAAoCF,GAApC;AACAtM,QAAAA,IAAI,CAACqB,MAAL,CAAYE,IAAZ,CAAiB+E,QAAjB,CAA0BkG,OAA1B,CAAkCD,GAAlC;AACA5M,QAAAA,WAAW,CAAC8M,IAAZ,CAAiB,cAAjB,EAAiC7M,QAAjC,EAA2C0M,GAA3C,EAAgDC,GAAhD;AACAvM,QAAAA,IAAI,CAACwB,eAAL,CAAqBjB,QAArB,CAA8B2E,IAA9B,CAAmClF,IAAI,CAACqB,MAAL,CAAYA,MAAZ,CAAmBd,QAAtD;AACAP,QAAAA,IAAI,CAACwB,eAAL,CAAqBC,YAArB,CAAkCyD,IAAlC,CAAuClF,IAAI,CAACqB,MAAL,CAAYE,IAAZ,CAAiB+E,QAAxD;AACH;AACJ;AACJ,G,CAED;;;AACA,WAASoG,gBAAT,CAA0BnM,QAA1B,EAAoC;AAChCA,IAAAA,QAAQ,CAACoL,YAAT,CAAsB5J,QAAQ,CAACO,cAAT,CAAwBL,WAA9C;AACA,WAAQ1B,QAAQ,CAAC0H,CAAT,IAAc7B,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CAAd,IACJ1H,QAAQ,CAAC0H,CAAT,IAAc7B,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CADV,IAEJ1H,QAAQ,CAAC8H,CAAT,IAAcjC,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAFV,IAGJ9H,QAAQ,CAAC8H,CAAT,IAAcjC,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAHlB;AAIH;;AAED,WAASwE,aAAT,GAAyB;AACrB;AACA;AACA9K,IAAAA,QAAQ,CAACO,cAAT,CAAwBL,WAAxB,CAAoC6K,QAApC;AACA/K,IAAAA,QAAQ,CAACO,cAAT,CAAwBL,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACI,IAAL,CAAUI,UAAzD,CAAhD;AACAuB,IAAAA,QAAQ,CAACO,cAAT,CAAwBL,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAA9C,EAAiD,GAAjD,EAAsDjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAAtE,CAAhD;AACAtG,IAAAA,QAAQ,CAACO,cAAT,CAAwBL,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoBgL,eAApB,CAAoClN,IAAI,CAACI,IAAL,CAAUG,QAAV,CAAmB0H,CAAvD,EAA0D,GAA1D,EAA+DjI,IAAI,CAACI,IAAL,CAAUG,QAAV,CAAmB8H,CAAlF,CAAhD;AACAtG,IAAAA,QAAQ,CAACU,eAAT,CAAyBR,WAAzB,CAAqC6K,QAArC;AACA/K,IAAAA,QAAQ,CAACU,eAAT,CAAyBR,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoBgL,eAApB,CAAoC,CAAClN,IAAI,CAACW,UAAL,CAAgBJ,QAAhB,CAAyB0H,CAA9D,EAAiE,GAAjE,EAAsE,CAACjI,IAAI,CAACW,UAAL,CAAgBJ,QAAhB,CAAyB8H,CAAhG,CAAjD;AACAtG,IAAAA,QAAQ,CAACU,eAAT,CAAyBR,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8B,MAAMjN,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAA1D,EAA6D,GAA7D,EAAkE,MAAMjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAA9F,CAAjD;AACAtG,IAAAA,QAAQ,CAACU,eAAT,CAAyBR,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACW,UAAL,CAAgBH,UAAhB,CAA2B6J,KAA3B,GAAmC8C,OAAnC,EAA/C,CAAjD;AACApL,IAAAA,QAAQ,CAACC,WAAT,CAAqBC,WAArB,CAAiC6K,QAAjC;AACA/K,IAAAA,QAAQ,CAACC,WAAT,CAAqBC,WAArB,CAAiC8K,WAAjC,CAA6ChL,QAAQ,CAACO,cAAT,CAAwBL,WAArE;AACAF,IAAAA,QAAQ,CAACC,WAAT,CAAqBC,WAArB,CAAiC8K,WAAjC,CAA6ChL,QAAQ,CAACU,eAAT,CAAyBR,WAAtE,EAbqB,CAcrB;;AACAF,IAAAA,QAAQ,CAACO,cAAT,CAAwBH,WAAxB,CAAoC2K,QAApC;AACA/K,IAAAA,QAAQ,CAACO,cAAT,CAAwBH,WAAxB,CAAoC4K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACI,IAAL,CAAUI,UAAzD,CAAhD;AACAuB,IAAAA,QAAQ,CAACU,eAAT,CAAyBN,WAAzB,CAAqC2K,QAArC;AACA/K,IAAAA,QAAQ,CAACU,eAAT,CAAyBN,WAAzB,CAAqC4K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACW,UAAL,CAAgBH,UAAhB,CAA2B6J,KAA3B,GAAmC8C,OAAnC,EAA/C,CAAjD;AACApL,IAAAA,QAAQ,CAACC,WAAT,CAAqBG,WAArB,CAAiC4K,WAAjC,CAA6ChL,QAAQ,CAACO,cAAT,CAAwBH,WAArE;AACAJ,IAAAA,QAAQ,CAACC,WAAT,CAAqBG,WAArB,CAAiC4K,WAAjC,CAA6ChL,QAAQ,CAACU,eAAT,CAAyBN,WAAtE,EApBqB,CAqBrB;;AACAJ,IAAAA,QAAQ,CAACO,cAAT,CAAwBF,QAAxB,CAAiC0K,QAAjC;AACA/K,IAAAA,QAAQ,CAACO,cAAT,CAAwBF,QAAxB,CAAiC2K,WAAjC,CAA6C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAA9C,EAAiD,GAAjD,EAAsDjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAAtE,CAA7C;AACAtG,IAAAA,QAAQ,CAACU,eAAT,CAAyBL,QAAzB,CAAkC0K,QAAlC;AACA/K,IAAAA,QAAQ,CAACU,eAAT,CAAyBL,QAAzB,CAAkC2K,WAAlC,CAA8C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8B,MAAMjN,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAA1D,EAA6D,GAA7D,EAAkE,MAAMjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAA9F,CAA9C;AACAtG,IAAAA,QAAQ,CAACC,WAAT,CAAqBI,QAArB,CAA8B0K,QAA9B;AACA/K,IAAAA,QAAQ,CAACC,WAAT,CAAqBI,QAArB,CAA8B2K,WAA9B,CAA0C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAAhB,GAAoBjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAAxE,EAA2E,GAA3E,EAAgFjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAAhB,GAAoBrI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAA1H,CAA1C,EA3BqB,CA6BrB;AACA;;AACAtG,IAAAA,QAAQ,CAACQ,eAAT,CAAyBN,WAAzB,CAAqC6K,QAArC;AACA/K,IAAAA,QAAQ,CAACQ,eAAT,CAAyBN,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACW,UAAL,CAAgBH,UAA/D,CAAjD;AACAuB,IAAAA,QAAQ,CAACQ,eAAT,CAAyBN,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAApD,EAAuD,GAAvD,EAA4DjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAAlF,CAAjD;AACAtG,IAAAA,QAAQ,CAACQ,eAAT,CAAyBN,WAAzB,CAAqC8K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoBgL,eAApB,CAAoClN,IAAI,CAACW,UAAL,CAAgBJ,QAAhB,CAAyB0H,CAA7D,EAAgE,GAAhE,EAAqEjI,IAAI,CAACW,UAAL,CAAgBJ,QAAhB,CAAyB8H,CAA9F,CAAjD;AACAtG,IAAAA,QAAQ,CAACS,cAAT,CAAwBP,WAAxB,CAAoC6K,QAApC;AACA/K,IAAAA,QAAQ,CAACS,cAAT,CAAwBP,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoBgL,eAApB,CAAoC,CAAClN,IAAI,CAACI,IAAL,CAAUG,QAAV,CAAmB0H,CAAxD,EAA2D,GAA3D,EAAgE,CAACjI,IAAI,CAACI,IAAL,CAAUG,QAAV,CAAmB8H,CAApF,CAAhD;AACAtG,IAAAA,QAAQ,CAACS,cAAT,CAAwBP,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8B,MAAMjN,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAApD,EAAuD,GAAvD,EAA4D,MAAMjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAAlF,CAAhD;AACAtG,IAAAA,QAAQ,CAACS,cAAT,CAAwBP,WAAxB,CAAoC8K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACI,IAAL,CAAUI,UAAV,CAAqB6J,KAArB,GAA6B8C,OAA7B,EAA/C,CAAhD;AACApL,IAAAA,QAAQ,CAACM,WAAT,CAAqBJ,WAArB,CAAiC6K,QAAjC;AACA/K,IAAAA,QAAQ,CAACM,WAAT,CAAqBJ,WAArB,CAAiC8K,WAAjC,CAA6ChL,QAAQ,CAACQ,eAAT,CAAyBN,WAAtE;AACAF,IAAAA,QAAQ,CAACM,WAAT,CAAqBJ,WAArB,CAAiC8K,WAAjC,CAA6ChL,QAAQ,CAACS,cAAT,CAAwBP,WAArE,EAzCqB,CA0CrB;;AACAF,IAAAA,QAAQ,CAACQ,eAAT,CAAyBJ,WAAzB,CAAqC2K,QAArC;AACA/K,IAAAA,QAAQ,CAACQ,eAAT,CAAyBJ,WAAzB,CAAqC4K,WAArC,CAAiD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACW,UAAL,CAAgBH,UAA/D,CAAjD;AACAuB,IAAAA,QAAQ,CAACS,cAAT,CAAwBL,WAAxB,CAAoC2K,QAApC;AACA/K,IAAAA,QAAQ,CAACS,cAAT,CAAwBL,WAAxB,CAAoC4K,WAApC,CAAgD,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB8K,0BAApB,CAA+ChN,IAAI,CAACI,IAAL,CAAUI,UAAV,CAAqB6J,KAArB,GAA6B8C,OAA7B,EAA/C,CAAhD;AACApL,IAAAA,QAAQ,CAACM,WAAT,CAAqBF,WAArB,CAAiC4K,WAAjC,CAA6ChL,QAAQ,CAACQ,eAAT,CAAyBJ,WAAtE;AACAJ,IAAAA,QAAQ,CAACM,WAAT,CAAqBF,WAArB,CAAiC4K,WAAjC,CAA6ChL,QAAQ,CAACS,cAAT,CAAwBL,WAArE,EAhDqB,CAiDrB;;AACAJ,IAAAA,QAAQ,CAACQ,eAAT,CAAyBH,QAAzB,CAAkC0K,QAAlC;AACA/K,IAAAA,QAAQ,CAACQ,eAAT,CAAyBH,QAAzB,CAAkC2K,WAAlC,CAA8C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAApD,EAAuD,GAAvD,EAA4DjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAAlF,CAA9C;AACAtG,IAAAA,QAAQ,CAACS,cAAT,CAAwBJ,QAAxB,CAAiC0K,QAAjC;AACA/K,IAAAA,QAAQ,CAACS,cAAT,CAAwBJ,QAAxB,CAAiC2K,WAAjC,CAA6C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8B,MAAMjN,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAApD,EAAuD,GAAvD,EAA4D,MAAMjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAAlF,CAA7C;AACAtG,IAAAA,QAAQ,CAACM,WAAT,CAAqBD,QAArB,CAA8B0K,QAA9B;AACA/K,IAAAA,QAAQ,CAACM,WAAT,CAAqBD,QAArB,CAA8B2K,WAA9B,CAA0C,IAAIzN,KAAK,CAAC4C,OAAV,GAAoB+K,SAApB,CAA8BjN,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsBwH,CAAtB,GAA0BjI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgBwH,CAAxE,EAA2E,GAA3E,EAAgFjI,IAAI,CAACW,UAAL,CAAgBF,KAAhB,CAAsB4H,CAAtB,GAA0BrI,IAAI,CAACI,IAAL,CAAUK,KAAV,CAAgB4H,CAA1H,CAA1C;AACH,G,CAED;;;AACA,WAAS+E,mBAAT,CAA6BhN,IAA7B,EAAmCiN,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmD;AAC/C,QAAIC,IAAI,GAAG,IAAInO,KAAK,CAACoO,KAAV,CAAgB,IAAIpO,KAAK,CAACyB,OAAV,GAAoB4M,UAApB,CAA+BH,EAA/B,EAAmCH,EAAnC,CAAhB,EAAwD/E,SAAxD,CAAkE+E,EAAlE,CAAX;AACA,QAAIO,IAAI,GAAG,IAAItO,KAAK,CAACoO,KAAV,CAAgB,IAAIpO,KAAK,CAACyB,OAAV,GAAoB4M,UAApB,CAA+BJ,EAA/B,EAAmCF,EAAnC,CAAhB,EAAwD/E,SAAxD,CAAkE+E,EAAlE,CAAX;AACA,QAAIQ,IAAI,GAAG,IAAIvO,KAAK,CAACoO,KAAV,CAAgB,IAAIpO,KAAK,CAACyB,OAAV,GAAoB4M,UAApB,CAA+BH,EAA/B,EAAmCF,EAAnC,CAAhB,EAAwDhF,SAAxD,CAAkEgF,EAAlE,CAAX;AACA,QAAIQ,IAAI,GAAG,IAAIxO,KAAK,CAACoO,KAAV,CAAgB,IAAIpO,KAAK,CAACyB,OAAV,GAAoB4M,UAApB,CAA+BJ,EAA/B,EAAmCD,EAAnC,CAAhB,EAAwDhF,SAAxD,CAAkEgF,EAAlE,CAAX;AAEA,QAAIS,iBAAiB,GAAG3N,IAAI,CAACmH,QAAL,CAAc8C,KAAd,EAAxB;AACA0D,IAAAA,iBAAiB,GAAGtO,aAAa,CAACsO,iBAAD,EAAoBN,IAApB,CAAjC;AACAM,IAAAA,iBAAiB,GAAGtO,aAAa,CAACsO,iBAAD,EAAoBH,IAApB,CAAjC;AACAG,IAAAA,iBAAiB,GAAGtO,aAAa,CAACsO,iBAAD,EAAoBF,IAApB,CAAjC;AACAE,IAAAA,iBAAiB,GAAGtO,aAAa,CAACsO,iBAAD,EAAoBD,IAApB,CAAjC;AACA,QAAIE,iBAAiB,GAAG,IAAI1O,KAAK,CAACgG,mBAAV,CAA8B;AAAEsB,MAAAA,WAAW,EAAE,IAAf;AAAqBnC,MAAAA,KAAK,EAAE,QAA5B;AAAsCoC,MAAAA,IAAI,EAAEvH,KAAK,CAACwH,UAAlD;AAA8DE,MAAAA,WAAW,EAAE;AAA3E,KAA9B,CAAxB;AACA,QAAIiH,YAAY,GAAG,IAAI3O,KAAK,CAACgB,IAAV,CAAeyN,iBAAf,EAAkCC,iBAAlC,CAAnB;AAEA,WAAOC,YAAP;AACH,G,CAED;;;AACA,WAAS3D,gBAAT,GAA4B;AACxB,QAAItK,IAAI,CAACI,IAAL,CAAUM,MAAV,IACAV,IAAI,CAACI,IAAL,CAAUC,IAAV,IAAkB,IADlB,IAEAL,IAAI,CAACW,UAAL,CAAgBN,IAAhB,IAAwB,IAFxB,IAGAL,IAAI,CAACW,UAAL,CAAgBD,MAHhB,IAIAV,IAAI,CAAC2B,MAAL,CAAYjB,MAJhB,EAIwB;AACpBmM,MAAAA,aAAa,GADO,CAGpB;;AACA,UAAIqB,WAAW,GAAG,IAAI5O,KAAK,CAACyB,OAAV,CAAkBqF,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CAAlB,EAAoE,GAApE,EAAyE7B,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAAzE,CAAlB;AACA,UAAI8F,WAAW,GAAG,IAAI7O,KAAK,CAACyB,OAAV,CAAkBqF,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CAAlB,EAAoE,GAApE,EAAyE7B,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAAzE,CAAlB;AACA,UAAI+F,WAAW,GAAG,IAAI9O,KAAK,CAACyB,OAAV,CAAkBqF,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CAAlB,EAAoE,GAApE,EAAyE7B,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAAzE,CAAlB;AACA,UAAIgG,WAAW,GAAG,IAAI/O,KAAK,CAACyB,OAAV,CAAkBqF,IAAI,CAACuG,GAAL,CAAS3M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkBqG,CAA3B,EAA8BjI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBoG,CAA9C,CAAlB,EAAoE,GAApE,EAAyE7B,IAAI,CAACwG,GAAL,CAAS5M,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,CAAkByG,CAA3B,EAA8BrI,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,CAAgBwG,CAA9C,CAAzE,CAAlB;AAEA,UAAIiG,QAAQ,GAAG,IAAIhP,KAAK,CAACyB,OAAV,GAAoBmE,IAApB,CAAyBgJ,WAAzB,EAAsCvC,YAAtC,CAAmD5J,QAAQ,CAACU,eAAT,CAAyBR,WAA5E,CAAf;AACA,UAAIsM,QAAQ,GAAG,IAAIjP,KAAK,CAACyB,OAAV,GAAoBmE,IAApB,CAAyBiJ,WAAzB,EAAsCxC,YAAtC,CAAmD5J,QAAQ,CAACU,eAAT,CAAyBR,WAA5E,CAAf;AACA,UAAIuM,QAAQ,GAAG,IAAIlP,KAAK,CAACyB,OAAV,GAAoBmE,IAApB,CAAyBkJ,WAAzB,EAAsCzC,YAAtC,CAAmD5J,QAAQ,CAACU,eAAT,CAAyBR,WAA5E,CAAf;AACA,UAAIwM,QAAQ,GAAG,IAAInP,KAAK,CAACyB,OAAV,GAAoBmE,IAApB,CAAyBmJ,WAAzB,EAAsC1C,YAAtC,CAAmD5J,QAAQ,CAACU,eAAT,CAAyBR,WAA5E,CAAf,CAZoB,CAcpB;;AACA,UAAIgM,YAAY,GAAGb,mBAAmB,CAACpN,IAAI,CAACW,UAAL,CAAgBN,IAAjB,EAAuBiO,QAAvB,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqDC,QAArD,CAAtC;AACAR,MAAAA,YAAY,CAACtH,QAAb,GAAwB3G,IAAI,CAACW,UAAL,CAAgBN,IAAhB,CAAqBsG,QAArB,CAA8B0D,KAA9B,EAAxB;AACA4D,MAAAA,YAAY,CAACS,WAAb,GAA2B,CAA3B;AACAT,MAAAA,YAAY,CAACtH,QAAb,CAAsBI,OAAtB,GAAgC,KAAhC,CAlBoB,CAoBpB;;AACAkH,MAAAA,YAAY,CAAC1N,QAAb,CAAsBoL,YAAtB,CAAmC5J,QAAQ,CAACM,WAAT,CAAqBJ,WAAxD;AACAgM,MAAAA,YAAY,CAACzN,UAAb,CAAwBuM,WAAxB,CAAoC,IAAIzN,KAAK,CAAC2M,UAAV,GAAuB0C,qBAAvB,CAA6C5M,QAAQ,CAACM,WAAT,CAAqBF,WAAlE,CAApC;AACA8L,MAAAA,YAAY,CAACxN,KAAb,CAAmBkL,YAAnB,CAAgC5J,QAAQ,CAACM,WAAT,CAAqBD,QAArD;AACApC,MAAAA,IAAI,CAACE,KAAL,CAAW4D,GAAX,CAAemK,YAAf;AACAjO,MAAAA,IAAI,CAAC2B,MAAL,CAAYtB,IAAZ,GAAmB4N,YAAnB;AAEA7E,MAAAA,MAAM;AACT;AACJ,G,CAED;;;AACA,WAASwF,MAAT,GAAkB;AACdC,IAAAA,qBAAqB,CAACD,MAAD,CAArB;AAEA,QAAIE,IAAI,GAAGnL,WAAW,CAACC,GAAZ,EAAX;AACA,QAAIsH,KAAK,GAAG,CAAC4D,IAAI,GAAGpL,QAAR,IAAoB,IAAhC,CAJc,CAMd;;AACAuH,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACAG,IAAAA,YAAY;AACZQ,IAAAA,UAAU;AAEVzC,IAAAA,MAAM;AACN1F,IAAAA,QAAQ,GAAGoL,IAAX;AACH,G,CAED;;;AACA,WAASC,IAAT,GAAgB;AACZpP,IAAAA,WAAW,GAAGqP,GAAG,CAACC,OAAJ,CAAYvP,GAAZ,CAAd;AAEA,QAAIwP,aAAa,GAAInM,OAAO,IAAI,GAAZ,GAAmB,GAAnB,GAAyB,GAA7C,CAHY,CAOZ;;AACAQ,IAAAA,aAAa,GAAG,IAAI4L,KAAK,CAACC,UAAV,CAAqB,eAArB,EAAsC;AAAEC,MAAAA,UAAU,EAAE1P;AAAd,KAAtC,CAAhB;AACAA,IAAAA,WAAW,CAAC2P,SAAZ,CAAsB,eAAtB;AACA,QAAIC,oBAAoB,GAAGhM,aAAa,CAACiM,IAAd,CAAmB,EAAnB,CAA3B;AACAD,IAAAA,oBAAoB,CAACE,cAArB,CAAoC;AAChCC,MAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5B5P,QAAAA,IAAI,CAAC2B,MAAL,CAAYC,KAAZ,GAAoB,IAAItC,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAAChO,KAArC,CAApB;AACA5B,QAAAA,IAAI,CAAC2B,MAAL,CAAYE,GAAZ,GAAkB,IAAIvC,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAAC/N,GAArC,CAAlB;AACA7B,QAAAA,IAAI,CAAC2B,MAAL,CAAYjB,MAAZ,GAAqB,IAArB;AACA4J,QAAAA,gBAAgB;AACnB;AAN+B,KAApC,EAXY,CAoBZ;;AACA9G,IAAAA,KAAK,GAAG,IAAI2L,KAAK,CAACC,UAAV,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,UAAU,EAAE1P;AAAd,KAA9B,CAAR;AACAA,IAAAA,WAAW,CAAC2P,SAAZ,CAAsB,eAAtB;AACA,QAAIQ,gBAAgB,GAAGtM,KAAK,CAACgM,IAAN,CAAW;AAAE3P,MAAAA,EAAE,EAAEkD;AAAN,KAAX,CAAvB;AACA+M,IAAAA,gBAAgB,CAACL,cAAjB,CAAgC;AAC5BC,MAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5B5P,QAAAA,IAAI,CAACI,IAAL,CAAUG,QAAV,GAAqB,IAAIjB,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAACrP,QAArC,CAArB;AACAP,QAAAA,IAAI,CAACI,IAAL,CAAUI,UAAV,GAAuB,IAAIlB,KAAK,CAAC2M,UAAV,GAAuB4D,SAAvB,CAAiCD,MAAM,CAACpP,UAAxC,CAAvB;AACAR,QAAAA,IAAI,CAACI,IAAL,CAAUK,KAAV,GAAkB,IAAInB,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAACnP,KAArC,CAAlB;AACAT,QAAAA,IAAI,CAACI,IAAL,CAAUM,MAAV,GAAmB,IAAnB;AACA4J,QAAAA,gBAAgB;AACnB;AAP2B,KAAhC;AASA,QAAIyF,iBAAiB,GAAGvM,KAAK,CAACgM,IAAN,CAAW;AAAE3P,MAAAA,EAAE,EAAEqP;AAAN,KAAX,CAAxB;AACAa,IAAAA,iBAAiB,CAACN,cAAlB,CAAiC;AAC7BC,MAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5B5P,QAAAA,IAAI,CAACW,UAAL,CAAgBJ,QAAhB,GAA2B,IAAIjB,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAACrP,QAArC,CAA3B;AACAP,QAAAA,IAAI,CAACW,UAAL,CAAgBH,UAAhB,GAA6B,IAAIlB,KAAK,CAAC2M,UAAV,GAAuB4D,SAAvB,CAAiCD,MAAM,CAACpP,UAAxC,CAA7B;AACAR,QAAAA,IAAI,CAACW,UAAL,CAAgBF,KAAhB,GAAwB,IAAInB,KAAK,CAACyB,OAAV,GAAoB8O,SAApB,CAA8BD,MAAM,CAACnP,KAArC,CAAxB;AACAT,QAAAA,IAAI,CAACW,UAAL,CAAgBD,MAAhB,GAAyB,IAAzB;AACA4J,QAAAA,gBAAgB;AACnB;AAP4B,KAAjC,EAlCY,CA4CZ;;AACA3K,IAAAA,WAAW,CAAC8M,IAAZ,CAAiB,cAAjB,EAAiC7M,QAAjC,EAA2CmD,OAA3C,EA7CY,CA6CyC;;AACrDU,IAAAA,KAAK,GAAG,IAAI0L,KAAK,CAACC,UAAV,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,UAAU,EAAE1P;AAAd,KAA9B,CAAR;AACAA,IAAAA,WAAW,CAAC2P,SAAZ,CAAsB,OAAtB;AACA,QAAIU,iBAAiB,GAAGvM,KAAK,CAAC+L,IAAN,CAAW;AAAE5P,MAAAA,QAAQ,EAAE;AAAEqQ,QAAAA,GAAG,EAAErQ;AAAP;AAAZ,KAAX,CAAxB;AACAoQ,IAAAA,iBAAiB,CAACP,cAAlB,CAAiC;AAC7BC,MAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5BA,QAAAA,MAAM,CAACM,GAAP,GAAaP,KAAb;AACA,YAAIQ,cAAc,GAAIP,MAAM,CAAC7M,OAAP,IAAkB,GAAnB,GAA0B,QAA1B,GAAqC,QAA1D;AACA6M,QAAAA,MAAM,CAACvO,MAAP,GAAgB8D,SAAS,CAACgL,cAAD,CAAzB;AACAP,QAAAA,MAAM,CAACvO,MAAP,CAAcA,MAAd,CAAqBd,QAArB,CAA8BsP,SAA9B,CAAwCD,MAAM,CAACrP,QAA/C;AACAqP,QAAAA,MAAM,CAACvO,MAAP,CAAcE,IAAd,CAAmB+E,QAAnB,CAA4BuJ,SAA5B,CAAsCD,MAAM,CAACnO,YAA7C;;AAEA,YAAImO,MAAM,CAAC7M,OAAP,IAAkBA,OAAtB,EAA+B;AAC3B6M,UAAAA,MAAM,CAACvO,MAAP,CAAcA,MAAd,CAAqBd,QAArB,CAA8BoL,YAA9B,CAA2C5J,QAAQ,CAACM,WAAT,CAAqBJ,WAAhE;AACA2N,UAAAA,MAAM,CAACvO,MAAP,CAAcE,IAAd,CAAmBf,UAAnB,CAA8BuM,WAA9B,CAA0C,IAAIzN,KAAK,CAAC2M,UAAV,GAAuB0C,qBAAvB,CAA6C5M,QAAQ,CAACM,WAAT,CAAqBF,WAAlE,CAA1C;AACH;;AACDnC,QAAAA,IAAI,CAACE,KAAL,CAAW4D,GAAX,CAAe8L,MAAM,CAACvO,MAAP,CAAcA,MAA7B;AACAuO,QAAAA,MAAM,CAACvO,MAAP,CAAcA,MAAd,CAAqB+O,OAArB,GAA+B1D,gBAAgB,CAACkD,MAAM,CAACvO,MAAP,CAAcA,MAAd,CAAqBd,QAArB,CAA8B8J,KAA9B,EAAD,CAA/C;AACArK,QAAAA,IAAI,CAAC8B,WAAL,CAAiBuO,IAAjB,CAAsBT,MAAtB,EAb4B,CAe5B;;AACA,YAAItE,GAAG,GAAG,IAAIhM,KAAK,CAACyB,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,CAAC,GAA7B,EAAkCuP,eAAlC,CAAkDV,MAAM,CAACvO,MAAP,CAAcE,IAAd,CAAmBf,UAArE,CAAV;AACA,YAAIgL,EAAE,GAAG,IAAIlM,KAAK,CAAC4C,OAAV,GAAoBY,MAApB,CACL,IAAIxD,KAAK,CAACyB,OAAV,CAAkBuK,GAAG,CAACrD,CAAtB,EAAyB,GAAzB,EAA8BqD,GAAG,CAACjD,CAAlC,CADK,EAEL,IAAI/I,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAFK,EAGL,IAAIzB,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAHK,CAAT;AAKA,YAAI2K,MAAM,GAAG,IAAIpM,KAAK,CAACyB,OAAV,CAAkB,CAAC,IAAnB,EAAyB,GAAzB,EAA8B,CAAC,IAA/B,EAAqC4K,YAArC,CAAkDH,EAAlD,CAAb;AACAE,QAAAA,MAAM,CAACvD,CAAP,GAAW,CAAC,GAAZ;AACAyH,QAAAA,MAAM,CAACvO,MAAP,CAAcyE,GAAd,CAAkBvF,QAAlB,CAA2B2E,IAA3B,CAAgCwG,MAAhC;AACAkE,QAAAA,MAAM,CAACvO,MAAP,CAAcyE,GAAd,CAAkB2F,qBAAlB,CAAwCD,EAAxC;AAEApC,QAAAA,MAAM;AACT,OA7B4B;AA8B7BmH,MAAAA,OAAO,EAAE,UAAUZ,KAAV,EAAiBC,MAAjB,EAAyB;AAC9B,YAAIY,OAAO,GAAGxQ,IAAI,CAAC8B,WAAL,CAAiB2O,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;AAClD,iBAAOA,IAAI,CAACR,GAAL,IAAYP,KAAnB;AACH,SAFa,CAAd;;AAGA,YAAIa,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACpB,cAAIC,WAAW,GAAGJ,OAAO,CAAC,CAAD,CAAzB;AACA,cAAIK,CAAC,GAAGjB,MAAM,CAACrP,QAAf;;AACA,cAAIsQ,CAAJ,EAAO;AACHD,YAAAA,WAAW,CAACvP,MAAZ,CAAmBA,MAAnB,CAA0Bd,QAA1B,CAAmCsP,SAAnC,CAA6CgB,CAA7C;;AACA,gBAAID,WAAW,CAAC7N,OAAZ,IAAuBA,OAA3B,EAAoC;AAChC6N,cAAAA,WAAW,CAACvP,MAAZ,CAAmBA,MAAnB,CAA0Bd,QAA1B,CAAmCoL,YAAnC,CAAgD5J,QAAQ,CAACM,WAAT,CAAqBJ,WAArE;AACH;;AACD2O,YAAAA,WAAW,CAACvP,MAAZ,CAAmBA,MAAnB,CAA0B+O,OAA1B,GAAoC1D,gBAAgB,CAACkE,WAAW,CAACvP,MAAZ,CAAmBA,MAAnB,CAA0Bd,QAA1B,CAAmC8J,KAAnC,EAAD,CAApD;AACH;;AACD,cAAIyG,CAAC,GAAGlB,MAAM,CAACnO,YAAf;;AACA,cAAIqP,CAAJ,EAAO;AACHF,YAAAA,WAAW,CAACvP,MAAZ,CAAmBE,IAAnB,CAAwB+E,QAAxB,CAAiCuJ,SAAjC,CAA2CiB,CAA3C;;AACA,gBAAIF,WAAW,CAAC7N,OAAZ,IAAuBA,OAA3B,EAAoC;AAChC6N,cAAAA,WAAW,CAACvP,MAAZ,CAAmBE,IAAnB,CAAwBf,UAAxB,CAAmCuM,WAAnC,CAA+C,IAAIzN,KAAK,CAAC2M,UAAV,GAAuB0C,qBAAvB,CAA6C5M,QAAQ,CAACM,WAAT,CAAqBF,WAAlE,CAA/C;AACH,aAJE,CAMH;;;AACA,gBAAImJ,GAAG,GAAG,IAAIhM,KAAK,CAACyB,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,CAAC,GAA7B,EAAkCuP,eAAlC,CAAkDM,WAAW,CAACvP,MAAZ,CAAmBE,IAAnB,CAAwBf,UAA1E,CAAV;AACA,gBAAIgL,EAAE,GAAG,IAAIlM,KAAK,CAAC4C,OAAV,GAAoBY,MAApB,CACL,IAAIxD,KAAK,CAACyB,OAAV,CAAkBuK,GAAG,CAACrD,CAAtB,EAAyB,GAAzB,EAA8BqD,GAAG,CAACjD,CAAlC,CADK,EAEL,IAAI/I,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAFK,EAGL,IAAIzB,KAAK,CAACyB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAHK,CAAT;AAKA,gBAAI2K,MAAM,GAAG,IAAIpM,KAAK,CAACyB,OAAV,CAAkB,CAAC,IAAnB,EAAyB,GAAzB,EAA8B,CAAC,IAA/B,EAAqC4K,YAArC,CAAkDH,EAAlD,CAAb;AACAE,YAAAA,MAAM,CAACvD,CAAP,GAAW,CAAC,GAAZ;AACAyI,YAAAA,WAAW,CAACvP,MAAZ,CAAmByE,GAAnB,CAAuBvF,QAAvB,CAAgC2E,IAAhC,CAAqCwG,MAArC;AACAkF,YAAAA,WAAW,CAACvP,MAAZ,CAAmByE,GAAnB,CAAuB2F,qBAAvB,CAA6CD,EAA7C;AACH;AACJ;;AAEDpC,QAAAA,MAAM;AACT,OAlE4B;AAmE7B2H,MAAAA,OAAO,EAAE,UAAUpB,KAAV,EAAiB;AACtB,YAAIa,OAAO,GAAGxQ,IAAI,CAAC8B,WAAL,CAAiB2O,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;AAClD,iBAAOA,IAAI,CAACR,GAAL,IAAYP,KAAnB;AACH,SAFa,CAAd;;AAGA,YAAIa,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACpB3Q,UAAAA,IAAI,CAACE,KAAL,CAAW8Q,MAAX,CAAkBR,OAAO,CAAC,CAAD,CAAP,CAAWnP,MAAX,CAAkBA,MAApC;AACArB,UAAAA,IAAI,CAAC8B,WAAL,GAAmB9B,IAAI,CAAC8B,WAAL,CAAiB2O,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;AACvD,mBAAOA,IAAI,IAAIF,OAAO,CAAC,CAAD,CAAtB;AACH,WAFkB,CAAnB;AAGH;AACJ;AA7E4B,KAAjC;AAgFH;;AAED7G,EAAAA,MAAM,CAACsH,MAAP,GAAgB,YAAY;AACxB5H,IAAAA,SAAS;AACTuB,IAAAA,YAAY;AACZmE,IAAAA,IAAI;AAEJH,IAAAA,MAAM;AACT,GAND;;AAQAjF,EAAAA,MAAM,CAACuH,cAAP,GAAwB,YAAY;AAChC;AACAvR,IAAAA,WAAW,CAAC8M,IAAZ,CAAiB,cAAjB,EAAiC7M,QAAjC;AACH,GAHD","sourcesContent":["import \"./main.html\";\nimport { FlowRouter } from \"meteor/ostrio:flow-router-extra\";\nimport { Random } from \"meteor/random\";\nimport * as THREE from \"./three/three.module.js\";\nimport { GLTFLoader } from './three/GLTFLoader.js';\nimport { PointerLockControls } from \"./three/PointerLockControls.js\";\nimport { SliceGeometry } from \"./three/slice\";\n\n// World Server URL \nconst URL = \"http://localhost:8000/\";\nvar WorldServer;\nvar clientId = Random.id(); \n// Canvas and Renderer\nvar canvas, renderer; \n\n// Views \nvar view = {\n    viewport: null,\n    scene: null,\n    camera: null,\n    room: {\n        mesh: new THREE.Mesh(),\n        position: null,\n        quaternion: null,\n        scale: null,\n        loaded: false\n    }, \n    remoteRoom: {\n        mesh: new THREE.Mesh(),\n        position: null,\n        quaternion: null,\n        scale: null,\n        loaded: false \n    },\n    pointerLock: null,\n    movement: {\n        velocity: new THREE.Vector3(),\n        direction: new THREE.Vector3(),\n        moveForward: false,\n        moveBackward: false,\n        moveLeft: false,\n        moveRight: false\n    },\n    avatar: {\n        avatar: null,\n        body: null,\n        head: null\n    },\n    avatarPrevState: {\n        position: new THREE.Vector3(),\n        headRotation: new THREE.Euler()\n    },\n    shared: {\n        mesh: null, \n        start: null,\n        end: null,\n        loaded: false \n    },\n    remoteUsers: []\n}\n\n// Mappings between rooms \nvar mappings = {\n    localRemote: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    },\n    remoteLocal: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    },\n    localComposite: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    },\n    remoteComposite: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    },\n    compositeLocal: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    },\n    compositeRemote: {\n        positionMap: new THREE.Matrix4(),\n        rotationMap: new THREE.Matrix4(),\n        scaleMap: new THREE.Matrix4()\n    }\n}\n\n// Camera set-up parameters\nvar camFirstParams = {\n    fov: 60,\n    near: 0.1,\n    far: 100,\n    position: new THREE.Vector3(0.0, 1.5, 0.0),\n    lookAt: new THREE.Vector3(0.0, 1.5, -1.0)\n};\n\n// Identify world\nvar worldId;\nFlowRouter.route(\"/:id\", {\n    name: \"worldId.select\",\n    action(params, queryParams) {\n        worldId = params.id;\n    }\n})\n\n// Rooms \nvar roomA, roomB; \n\n// MongoDB Collections synced with the server \nvar Intersections; \nvar Rooms; \nvar Users; \n\n// Update variables\nvar prevTime = performance.now();\n\n// Lighting\nfunction lightScene(scene) {\n    // Ambient\n    scene.add(new THREE.AmbientLight(0xffffff, 0.2));\n\n    // Directional\n    let dir_light = new THREE.DirectionalLight(0x9fc5e8, 0.7);\n    dir_light.position.set(50, 200, 100);\n    dir_light.position.multiplyScalar(1.0);\n    scene.add(dir_light);\n\n    let dir_light_2 = new THREE.DirectionalLight(0xa2c4c9, 0.7);\n    dir_light_2.position.set(-200, 50, -100);\n    dir_light_2.position.multiplyScalar(1.0);\n    scene.add(dir_light_2);\n\n    let dir_light_3 = new THREE.DirectionalLight(0x9cc98a, 0.7); // 0xa7cf97\n    dir_light_3.position.set(100, -35, -50);\n    dir_light_3.position.multiplyScalar(1.0);\n    scene.add(dir_light_3);\n\n    let dir_light_4 = new THREE.DirectionalLight(0x666666, 0.4);\n    dir_light_4.position.set(0, -200, 0);\n    dir_light_4.position.multiplyScalar(1.0);\n    scene.add(dir_light_4);\n\n    // Hemisphere\n    let hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.4);\n    hemiLight.color.setHSL(0.6, 1, 0.6);\n    hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n    hemiLight.position.set(0, 4, 0);\n    scene.add(hemiLight);\n}\n\n// Instantiating a camera object\nfunction newCamera(params, view) {\n    let bounds = view.getBoundingClientRect();\n    let camera = new THREE.PerspectiveCamera(\n        params.fov,\n        bounds.width / bounds.height,\n        params.near,\n        params.far\n    );\n    camera.position.copy(params.position);\n    camera.lookAt(params.lookAt);\n    return camera;\n}\n\n// New avatar \nfunction newAvatar(color) {\n    var avatar = new THREE.Object3D();\n    // Meshes\n    var head = new THREE.Mesh(\n        new THREE.BoxGeometry(0.25, 0.25, 0.25),\n        new THREE.MeshLambertMaterial({ color: color })\n    );\n    var avatarEyeLeft = new THREE.Mesh(\n        new THREE.CircleBufferGeometry(0.05, 32),\n        new THREE.MeshBasicMaterial({ color: 0xffffff })\n    );\n    avatarEyeLeft.position.set(-0.075, 0, 0.13);\n    var avatarEyeRight = new THREE.Mesh(\n        new THREE.CircleBufferGeometry(0.05, 32),\n        new THREE.MeshBasicMaterial({ color: 0xffffff })\n    );\n    avatarEyeRight.position.set(0.075, 0, 0.13);\n    var avatarPupilLeft = new THREE.Mesh(\n        new THREE.CircleBufferGeometry(0.025, 32),\n        new THREE.MeshBasicMaterial({ color: 0x000000 })\n    );\n    avatarPupilLeft.position.set(-0.075, 0, 0.135);\n    var avatarPupilRight = new THREE.Mesh(\n        new THREE.CircleBufferGeometry(0.025, 32),\n        new THREE.MeshBasicMaterial({ color: 0x000000 })\n    );\n    avatarPupilRight.position.set(0.075, 0, 0.135);\n    head.attach(avatarEyeLeft);\n    head.attach(avatarEyeRight);\n    head.attach(avatarPupilLeft);\n    head.attach(avatarPupilRight);\n    avatar.attach(head);\n    var body = new THREE.Mesh(\n        new THREE.BoxGeometry(0.25, 0.5, 0.25),\n        new THREE.MeshLambertMaterial({ color: color })\n    );\n    body.position.set(0.0, -0.5, 0.0);\n    avatar.attach(body);\n\n    // SHARED COFFEE\n    var mug = newMug();\n    avatar.attach(mug);\n    mug.position.set(-0.30, -0.4, -0.30);\n\n    return {\n        avatar: avatar,\n        body: body,\n        head: head,\n        mug: mug\n    };\n}\n\n// New mug (SHARED COFFEE)\nfunction newMug() {\n    // Cup geometry\n    var cup = new THREE.Mesh(new THREE.CylinderGeometry(0.75, 0.675, 2.0, 32), new THREE.MeshLambertMaterial({ color: 0xffffff }));\n    var handle = new THREE.Mesh(new THREE.TorusGeometry(0.5, 0.125, 16, 100, Math.PI * 2), new THREE.MeshLambertMaterial({ color: 0xffffff }));\n    var mug = new THREE.Object3D()\n    cup.position.set(0.0, 0.0, 0.0);\n    handle.position.set(0, 0.125, 0.75);\n    handle.rotation.set(0.0, Math.PI / 2.0, 0.0);\n    mug.add(cup);\n    mug.add(handle);\n    mug.scale.set(0.1, 0.1, 0.1);\n\n    return mug; \n}\n\n// Loading room GLTF models \nvar loadModelGLTF = function (source, color) {\n    return new Promise(function (resolve) {\n        let material = new THREE.MeshLambertMaterial({\n            flatShading: true,\n            side: THREE.DoubleSide, // THREE.BackSide\n            color: color,\n            opacity: 1.0,\n            transparent: true\n        });\n\n        let loader = new GLTFLoader();\n\n        loader.load(source, function (gltf) {\n            let bufferGeometry = gltf.scenes[0].children[0].geometry;\n            let geometry = new THREE.Geometry();\n            geometry.fromBufferGeometry(bufferGeometry);\n            let mesh = new THREE.Mesh(geometry, material);\n\n            // \"Center\" Mesh\n            mesh.geometry.computeBoundingBox();\n            let bbCenter = new THREE.Vector3();\n            mesh.geometry.boundingBox.getCenter(bbCenter);\n            let bbSize = new THREE.Vector3();\n            mesh.geometry.boundingBox.getSize(bbSize);\n            let xOffset = -bbCenter.x;\n            let yOffset = -bbCenter.y + 0.5 * bbSize.y;\n            let zOffset = -bbCenter.z;\n            mesh.geometry.translate(xOffset, yOffset, zOffset);\n            mesh.updateMatrix();\n            mesh.updateMatrixWorld();\n\n            resolve(mesh);\n        });\n    });\n}\n\n// Rendering \nfunction renderView(scene, camera, view) {\n    let {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height\n    } = view.getBoundingClientRect();\n    let positiveYUpBottom = renderer.domElement.offsetHeight - bottom;\n    renderer.setViewport(left, positiveYUpBottom, width, height);\n    renderer.setScissor(left, positiveYUpBottom, width, height);\n    renderer.setScissorTest(true);\n    renderer.render(scene, camera);\n}\nfunction render() {\n    renderView(view.scene, view.camera, view.viewport);\n}\n\n// Three.js setup \nfunction initThree() {\n    // Canvas & Renderer\n    canvas = document.getElementById(\"c\");\n    renderer = new THREE.WebGLRenderer({ canvas, alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(canvas.offsetWidth, canvas.offsetHeight);\n\n    // Views\n    view.viewport = document.getElementById(\"viewFirst\");\n\n    // Scenes\n    view.scene = new THREE.Scene();\n    view.scene.background = new THREE.Color(0xdedede);\n\n    // Lighting \n    lightScene(view.scene);\n\n    // Room\n    view.scene.add(view.room.mesh);\n    Promise.all([\n        loadModelGLTF(\"../roomA.gltf\", 0xcfe2f3),\n        loadModelGLTF(\"../roomB.gltf\", 0xffe599)\n    ]).then(result => {\n        roomA = result[0];\n        roomB = result[1];\n        if (worldId == \"A\") {\n            view.room.mesh.geometry = roomA.geometry.clone();\n            view.room.mesh.material = roomA.material.clone();\n            view.remoteRoom.mesh.geometry = roomB.geometry.clone();\n            view.remoteRoom.mesh.material = roomB.material.clone();\n        } else {\n            view.room.mesh.geometry = roomB.geometry.clone();\n            view.room.mesh.material = roomB.material.clone();\n            view.remoteRoom.mesh.geometry = roomA.geometry.clone();\n            view.remoteRoom.mesh.material = roomA.material.clone();\n        }\n\n        loadIntersection();\n\n        render();\n    });\n\n    // Cameras \n    view.camera = newCamera(camFirstParams, view.viewport);\n    view.scene.add(view.camera);\n\n    // User Avatar\n    let userAvatarColor = (worldId == \"A\") ? 0x0000ff : 0xffff00;\n    view.avatar = newAvatar(userAvatarColor);\n    view.scene.add(view.avatar.avatar);\n    view.avatarPrevState.position.copy(view.avatar.avatar.position);\n    view.avatarPrevState.headRotation.copy(view.avatar.head.rotation);\n\n    // Render \n    render();\n}\n\n// Character movement controls \nfunction wasdDown(event) {\n    switch (event.keyCode) {\n        case 87: // W\n            view.movement.moveForward = true;\n            break;\n\n        case 65: // A\n            view.movement.moveLeft = true;\n            break;\n\n        case 83: // S\n            view.movement.moveBackward = true;\n            break;\n\n        case 68: // D\n            view.movement.moveRight = true;\n            break;\n    }\n}\nfunction wasdUp(event) {\n    switch (event.keyCode) {\n        case 87: // W\n            view.movement.moveForward = false;\n            break;\n\n        case 65: // A\n            view.movement.moveLeft = false;\n            break;\n\n        case 83: // S\n            view.movement.moveBackward = false;\n            break;\n\n        case 68: // D\n            view.movement.moveRight = false;\n            break;\n    }\n}\n\n// Initialize controls \nfunction initControls() {\n    // PointerLock Controls \n    view.pointerLock = new PointerLockControls(\n        view.camera,\n        view.viewport\n    );\n    view.pointerLock.addEventListener(\"change\", render);\n    view.viewport.addEventListener(\"click\", function (event) {\n        if (view.pointerLock.isLocked != true) {\n            view.pointerLock.lock();\n            document.addEventListener(\"keydown\", wasdDown);\n            document.addEventListener(\"keyup\", wasdUp);\n        }\n    });\n    view.pointerLock.addEventListener(\"unlock\", function (event) {\n        document.removeEventListener(\"keydown\", wasdDown);\n        document.removeEventListener(\"keyup\", wasdUp);\n    });\n}\n\n// User Movements\nfunction userMove(delta) {\n    view.movement.velocity.x -=\n        view.movement.velocity.x * 10.0 * delta;\n    view.movement.velocity.z -=\n        view.movement.velocity.z * 10.0 * delta;\n    view.movement.direction.z =\n        Number(view.movement.moveForward) -\n        Number(view.movement.moveBackward);\n    view.movement.direction.x =\n        Number(view.movement.moveRight) -\n        Number(view.movement.moveLeft);\n    view.movement.direction.normalize();\n    if (view.movement.moveForward || view.movement.moveBackward)\n        view.movement.velocity.z -=\n            view.movement.direction.z * 50.0 * delta;\n    if (view.movement.moveLeft || view.movement.moveRight)\n        view.movement.velocity.x -=\n            view.movement.direction.x * 50.0 * delta;\n    view.pointerLock.moveRight(-view.movement.velocity.x * delta);\n    view.pointerLock.moveForward(-view.movement.velocity.z * delta);\n}\n\n// Handling User Avatar Updates \nfunction updateAvatar() {\n    if (view.avatar.avatar != null) {\n        // Position\n        view.avatar.avatar.position.copy(view.camera.position);\n    }\n\n    if (view.avatar.head != null) {\n        // Head orientation\n        let dir = new THREE.Vector3();\n        view.pointerLock.getDirection(dir);\n        let mx = new THREE.Matrix4().lookAt(\n            dir,\n            new THREE.Vector3(0, 0, 0),\n            new THREE.Vector3(0, 1, 0)\n        );\n        view.avatar.head.setRotationFromMatrix(mx);\n\n        // SHARED COFFEE\n        let mugPos = new THREE.Vector3(0.3, 0.0, 0.3).applyMatrix4(mx);\n        mugPos.y = -0.5;\n        let mugRotMx = new THREE.Matrix4().lookAt(\n            new THREE.Vector3(-dir.x, 0.0, -dir.z),\n            new THREE.Vector3(0, 0, 0),\n            new THREE.Vector3(0, 1, 0)\n        );\n        view.avatar.mug.position.copy(mugPos);\n        view.avatar.mug.setRotationFromMatrix(mugRotMx);\n    }\n}\n\n// Synchronize avatar with server \nfunction syncAvatar() {\n    if (WorldServer.status().connected) {\n        let rotDiff = new THREE.Quaternion()\n            .setFromEuler(view.avatarPrevState.headRotation)\n            .angleTo(view.avatar.head.quaternion);\n        let moveDiff = view.avatarPrevState.position.distanceTo(view.avatar.avatar.position);\n        if ((moveDiff > 0.1) || (rotDiff > 0.10)) {\n            let pos = [];\n            let rot = [];\n            view.avatar.avatar.position.toArray(pos);\n            view.avatar.head.rotation.toArray(rot);\n            WorldServer.call(\"users.update\", clientId, pos, rot);\n            view.avatarPrevState.position.copy(view.avatar.avatar.position);\n            view.avatarPrevState.headRotation.copy(view.avatar.head.rotation);\n        }\n    }\n}\n\n// Check remote avatar visibility \nfunction checkShareRemote(position) {\n    position.applyMatrix4(mappings.localComposite.positionMap);\n    return (position.x >= Math.min(view.shared.start.x, view.shared.end.x) &&\n        position.x <= Math.max(view.shared.start.x, view.shared.end.x) &&\n        position.z >= Math.min(view.shared.start.z, view.shared.end.z) &&\n        position.z <= Math.max(view.shared.start.z, view.shared.end.z));\n}\n\nfunction defineMapping() {\n    // local to remote \n    // position\n    mappings.localComposite.positionMap.identity();\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion));\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x, 1.0, view.room.scale.z));\n    mappings.localComposite.positionMap.premultiply(new THREE.Matrix4().makeTranslation(view.room.position.x, 0.0, view.room.position.z));\n    mappings.compositeRemote.positionMap.identity();\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeTranslation(-view.remoteRoom.position.x, 0.0, -view.remoteRoom.position.z));\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.remoteRoom.scale.x, 1.0, 1.0 / view.remoteRoom.scale.z));\n    mappings.compositeRemote.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion.clone().inverse()));\n    mappings.localRemote.positionMap.identity();\n    mappings.localRemote.positionMap.premultiply(mappings.localComposite.positionMap);\n    mappings.localRemote.positionMap.premultiply(mappings.compositeRemote.positionMap);\n    // rotation \n    mappings.localComposite.rotationMap.identity();\n    mappings.localComposite.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion));\n    mappings.compositeRemote.rotationMap.identity();\n    mappings.compositeRemote.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion.clone().inverse()));\n    mappings.localRemote.rotationMap.premultiply(mappings.localComposite.rotationMap);\n    mappings.localRemote.rotationMap.premultiply(mappings.compositeRemote.rotationMap);\n    // scale\n    mappings.localComposite.scaleMap.identity();\n    mappings.localComposite.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x, 1.0, view.room.scale.z));\n    mappings.compositeRemote.scaleMap.identity();\n    mappings.compositeRemote.scaleMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.remoteRoom.scale.x, 1.0, 1.0 / view.remoteRoom.scale.z));\n    mappings.localRemote.scaleMap.identity();\n    mappings.localRemote.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.room.scale.x / view.remoteRoom.scale.x, 1.0, view.room.scale.z / view.remoteRoom.scale.z));\n\n    // Remote to local\n    // position\n    mappings.remoteComposite.positionMap.identity();\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion));\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x, 1.0, view.remoteRoom.scale.z));\n    mappings.remoteComposite.positionMap.premultiply(new THREE.Matrix4().makeTranslation(view.remoteRoom.position.x, 0.0, view.remoteRoom.position.z));\n    mappings.compositeLocal.positionMap.identity(); \n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeTranslation(-view.room.position.x, 0.0, -view.room.position.z));\n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.room.scale.x, 1.0, 1.0 / view.room.scale.z));\n    mappings.compositeLocal.positionMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion.clone().inverse()));\n    mappings.remoteLocal.positionMap.identity();\n    mappings.remoteLocal.positionMap.premultiply(mappings.remoteComposite.positionMap);\n    mappings.remoteLocal.positionMap.premultiply(mappings.compositeLocal.positionMap);\n    // rotation\n    mappings.remoteComposite.rotationMap.identity();\n    mappings.remoteComposite.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.remoteRoom.quaternion));\n    mappings.compositeLocal.rotationMap.identity();\n    mappings.compositeLocal.rotationMap.premultiply(new THREE.Matrix4().makeRotationFromQuaternion(view.room.quaternion.clone().inverse()));\n    mappings.remoteLocal.rotationMap.premultiply(mappings.remoteComposite.rotationMap);\n    mappings.remoteLocal.rotationMap.premultiply(mappings.compositeLocal.rotationMap);\n    // scale\n    mappings.remoteComposite.scaleMap.identity();\n    mappings.remoteComposite.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x, 1.0, view.remoteRoom.scale.z));\n    mappings.compositeLocal.scaleMap.identity();\n    mappings.compositeLocal.scaleMap.premultiply(new THREE.Matrix4().makeScale(1.0 / view.room.scale.x, 1.0, 1.0 / view.room.scale.z));\n    mappings.remoteLocal.scaleMap.identity();\n    mappings.remoteLocal.scaleMap.premultiply(new THREE.Matrix4().makeScale(view.remoteRoom.scale.x / view.room.scale.x, 1.0, view.remoteRoom.scale.z / view.room.scale.z));\n}\n\n// Extracting intersection geometry\nfunction extractIntersection(room, bl, tr, br, tl) {\n    var blbr = new THREE.Plane(new THREE.Vector3().subVectors(tl, bl)).translate(bl);\n    var bltl = new THREE.Plane(new THREE.Vector3().subVectors(br, bl)).translate(bl);\n    var trbr = new THREE.Plane(new THREE.Vector3().subVectors(tl, tr)).translate(tr);\n    var trtl = new THREE.Plane(new THREE.Vector3().subVectors(br, tr)).translate(tr);\n\n    let intersectGeometry = room.geometry.clone();\n    intersectGeometry = SliceGeometry(intersectGeometry, blbr);\n    intersectGeometry = SliceGeometry(intersectGeometry, bltl);\n    intersectGeometry = SliceGeometry(intersectGeometry, trbr);\n    intersectGeometry = SliceGeometry(intersectGeometry, trtl);\n    let intersectMaterial = new THREE.MeshLambertMaterial({ flatShading: true, color: 0xffffff, side: THREE.DoubleSide, transparent: true });\n    let intersection = new THREE.Mesh(intersectGeometry, intersectMaterial);\n\n    return intersection;\n}\n\n// Loading intersection\nfunction loadIntersection() {\n    if (view.room.loaded &&\n        view.room.mesh != null &&\n        view.remoteRoom.mesh != null && \n        view.remoteRoom.loaded &&\n        view.shared.loaded) {\n        defineMapping();\n\n        // Calculate shared region \n        var blComposite = new THREE.Vector3(Math.min(view.shared.start.x, view.shared.end.x), 0.0, Math.min(view.shared.start.z, view.shared.end.z));\n        var trComposite = new THREE.Vector3(Math.max(view.shared.start.x, view.shared.end.x), 0.0, Math.max(view.shared.start.z, view.shared.end.z));\n        var brComposite = new THREE.Vector3(Math.max(view.shared.start.x, view.shared.end.x), 0.0, Math.min(view.shared.start.z, view.shared.end.z));\n        var tlComposite = new THREE.Vector3(Math.min(view.shared.start.x, view.shared.end.x), 0.0, Math.max(view.shared.start.z, view.shared.end.z));\n\n        var blRemote = new THREE.Vector3().copy(blComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n        var trRemote = new THREE.Vector3().copy(trComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n        var brRemote = new THREE.Vector3().copy(brComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n        var tlRemote = new THREE.Vector3().copy(tlComposite).applyMatrix4(mappings.compositeRemote.positionMap);\n\n        // Get intersection\n        var intersection = extractIntersection(view.remoteRoom.mesh, blRemote, trRemote, brRemote, tlRemote);\n        intersection.material = view.remoteRoom.mesh.material.clone();\n        intersection.renderOrder = 1;\n        intersection.material.opacity = 0.375;\n\n        // Place intersection \n        intersection.position.applyMatrix4(mappings.remoteLocal.positionMap);\n        intersection.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n        intersection.scale.applyMatrix4(mappings.remoteLocal.scaleMap);\n        view.scene.add(intersection);\n        view.shared.mesh = intersection;\n\n        render();\n    }\n}\n\n// Update Loop \nfunction update() {\n    requestAnimationFrame(update);\n\n    let time = performance.now();\n    let delta = (time - prevTime) / 1000;\n\n    // Update User \n    userMove(delta);\n    updateAvatar();\n    syncAvatar();\n\n    render();\n    prevTime = time;\n}\n\n// Synchronize with Server \nfunction sync() {\n    WorldServer = DDP.connect(URL);\n\n    let remoteWorldId = (worldId == \"A\") ? \"B\" : \"A\";\n\n    \n\n    // Intersections \n    Intersections = new Mongo.Collection(\"intersections\", { connection: WorldServer });\n    WorldServer.subscribe(\"intersections\");\n    let intersectionsUpdates = Intersections.find({});\n    intersectionsUpdates.observeChanges({\n        added: function (docId, newDoc) {\n            view.shared.start = new THREE.Vector3().fromArray(newDoc.start);\n            view.shared.end = new THREE.Vector3().fromArray(newDoc.end);\n            view.shared.loaded = true;\n            loadIntersection()\n        }\n    });\n\n    // Rooms\n    Rooms = new Mongo.Collection(\"rooms\", { connection: WorldServer });\n    WorldServer.subscribe(\"intersections\");\n    let localRoomUpdates = Rooms.find({ id: worldId });\n    localRoomUpdates.observeChanges({\n        added: function (docId, newDoc) {\n            view.room.position = new THREE.Vector3().fromArray(newDoc.position);\n            view.room.quaternion = new THREE.Quaternion().fromArray(newDoc.quaternion);\n            view.room.scale = new THREE.Vector3().fromArray(newDoc.scale);\n            view.room.loaded = true;\n            loadIntersection();\n        }\n    });\n    let remoteRoomUpdates = Rooms.find({ id: remoteWorldId });\n    remoteRoomUpdates.observeChanges({\n        added: function (docId, newDoc) {\n            view.remoteRoom.position = new THREE.Vector3().fromArray(newDoc.position);\n            view.remoteRoom.quaternion = new THREE.Quaternion().fromArray(newDoc.quaternion);\n            view.remoteRoom.scale = new THREE.Vector3().fromArray(newDoc.scale);\n            view.remoteRoom.loaded = true; \n            loadIntersection();\n        }\n    });\n\n    // Users\n    WorldServer.call(\"users.insert\", clientId, worldId); // Insert current client\n    Users = new Mongo.Collection(\"users\", { connection: WorldServer });\n    WorldServer.subscribe(\"users\");\n    let remoteUserUpdates = Users.find({ clientId: { $ne: clientId } });\n    remoteUserUpdates.observeChanges({\n        added: function (docId, newDoc) {\n            newDoc._id = docId;\n            let newAvatarColor = (newDoc.worldId == \"A\") ? 0x0000ff : 0xffff00;\n            newDoc.avatar = newAvatar(newAvatarColor);\n            newDoc.avatar.avatar.position.fromArray(newDoc.position);\n            newDoc.avatar.head.rotation.fromArray(newDoc.headRotation);\n\n            if (newDoc.worldId != worldId) {\n                newDoc.avatar.avatar.position.applyMatrix4(mappings.remoteLocal.positionMap);\n                newDoc.avatar.head.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n            }\n            view.scene.add(newDoc.avatar.avatar);\n            newDoc.avatar.avatar.visible = checkShareRemote(newDoc.avatar.avatar.position.clone());\n            view.remoteUsers.push(newDoc);\n\n            // SHARED COFEE\n            let dir = new THREE.Vector3(0.0, 0.0, -1.0).applyQuaternion(newDoc.avatar.head.quaternion);\n            let mx = new THREE.Matrix4().lookAt(\n                new THREE.Vector3(dir.x, 0.0, dir.z),\n                new THREE.Vector3(0, 0, 0),\n                new THREE.Vector3(0, 1, 0)\n            );\n            let mugPos = new THREE.Vector3(-0.20, 0.0, -0.20).applyMatrix4(mx);\n            mugPos.y = -0.4;\n            newDoc.avatar.mug.position.copy(mugPos);\n            newDoc.avatar.mug.setRotationFromMatrix(mx);\n\n            render();\n        }, \n        changed: function (docId, newDoc) {\n            let updates = view.remoteUsers.filter(function (user) {\n                return user._id == docId;\n            });\n            if (updates.length > 0) {\n                let updatedUser = updates[0];\n                let p = newDoc.position;\n                if (p) {\n                    updatedUser.avatar.avatar.position.fromArray(p);\n                    if (updatedUser.worldId != worldId) {\n                        updatedUser.avatar.avatar.position.applyMatrix4(mappings.remoteLocal.positionMap);\n                    }\n                    updatedUser.avatar.avatar.visible = checkShareRemote(updatedUser.avatar.avatar.position.clone());\n                }\n                let r = newDoc.headRotation;\n                if (r) {\n                    updatedUser.avatar.head.rotation.fromArray(r);\n                    if (updatedUser.worldId != worldId) {\n                        updatedUser.avatar.head.quaternion.premultiply(new THREE.Quaternion().setFromRotationMatrix(mappings.remoteLocal.rotationMap));\n                    }\n\n                    // SHARED COFEE\n                    let dir = new THREE.Vector3(0.0, 0.0, -1.0).applyQuaternion(updatedUser.avatar.head.quaternion);\n                    let mx = new THREE.Matrix4().lookAt(\n                        new THREE.Vector3(dir.x, 0.0, dir.z),\n                        new THREE.Vector3(0, 0, 0),\n                        new THREE.Vector3(0, 1, 0)\n                    );\n                    let mugPos = new THREE.Vector3(-0.20, 0.0, -0.20).applyMatrix4(mx);\n                    mugPos.y = -0.4;\n                    updatedUser.avatar.mug.position.copy(mugPos);\n                    updatedUser.avatar.mug.setRotationFromMatrix(mx);\n                }\n            }\n\n            render();\n        },\n        removed: function (docId) {\n            let updates = view.remoteUsers.filter(function (user) {\n                return user._id == docId;\n            });\n            if (updates.length > 0) {\n                view.scene.remove(updates[0].avatar.avatar);\n                view.remoteUsers = view.remoteUsers.filter(function (user) {\n                    return user != updates[0];\n                });\n            }\n        }\n    });\n\n}\n\nwindow.onload = function () {\n    initThree();\n    initControls();\n    sync();\n    \n    update();\n}\n\nwindow.onbeforeunload = function () {\n    // Disconnect client \n    WorldServer.call(\"users.remove\", clientId);\n}"]},"sourceType":"module","hash":"23e59ca660d5b1a0e09cc0ab3e371db8f02a4da3"}
