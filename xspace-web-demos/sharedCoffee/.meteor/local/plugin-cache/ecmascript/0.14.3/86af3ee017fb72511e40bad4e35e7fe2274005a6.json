{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/packages/ostrio:flow-router-extra/client/router.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/ostrio:flow-router-extra/client/router.js","filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/packages/ostrio:flow-router-extra/client/router.js","passPerPreset":false,"envName":"development","cwd":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","root":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/packages/ostrio:flow-router-extra/client/router.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:flow-router-extra/client/router.js"}},"code":"var _createClass;\n\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 0);\nvar FlowRouter, Route, Group, Triggers, BlazeRenderer;\nmodule.link(\"./_init.js\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  },\n  Route: function (v) {\n    Route = v;\n  },\n  Group: function (v) {\n    Group = v;\n  },\n  Triggers: function (v) {\n    Triggers = v;\n  },\n  BlazeRenderer: function (v) {\n    BlazeRenderer = v;\n  }\n}, 0);\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 3);\n\nvar _helpers;\n\nmodule.link(\"./../lib/_helpers.js\", {\n  _helpers: function (v) {\n    _helpers = v;\n  }\n}, 4);\nvar page, qs;\nmodule.link(\"./modules.js\", {\n  page: function (v) {\n    page = v;\n  },\n  qs: function (v) {\n    qs = v;\n  }\n}, 5);\n\n// let isNavigating = false;\nvar Router = /*#__PURE__*/function () {\n  function Router() {\n    var _this = this;\n\n    this.pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n    this.globals = [];\n    this.subscriptions = Function.prototype;\n    this.Renderer = new BlazeRenderer({\n      router: this\n    });\n    this._tracker = this._buildTracker();\n    this._current = {};\n    this._specialChars = ['/', '%', '+'];\n\n    this._encodeParam = function (param) {\n      var paramArr = param.split('');\n      var _param = '';\n\n      for (var i = 0; i < paramArr.length; i++) {\n        if (_this._specialChars.includes(paramArr[i])) {\n          _param += encodeURIComponent(encodeURIComponent(paramArr[i]));\n        } else {\n          try {\n            _param += encodeURIComponent(paramArr[i]);\n          } catch (e) {\n            _param += paramArr[i];\n          }\n        }\n      }\n\n      return _param;\n    }; // tracks the current path change\n\n\n    this._onEveryPath = new Tracker.Dependency();\n    this._globalRoute = new Route(this); // holds onRoute callbacks\n\n    this._onRouteCallbacks = []; // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n\n    this._askedToWait = false;\n    this._initialized = false;\n    this._triggersEnter = [];\n    this._triggersExit = [];\n    this._routes = [];\n    this._routesMap = {};\n\n    this._updateCallbacks();\n\n    this._notFound = null;\n    this.notfound = this.notFound; // indicate it's okay (or not okay) to run the tracker\n    // when doing subscriptions\n    // using a number and increment it help us to support FlowRouter.go()\n    // and legitimate reruns inside tracker on the same event loop.\n    // this is a solution for #145\n\n    this.safeToRun = 0; // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n\n    this._basePath = window.__meteor_runtime_config__.ROOT_URL_PATH_PREFIX || ''; // this is a chain contains a list of old routes\n    // most of the time, there is only one old route\n    // but when it's the time for a trigger redirect we've a chain\n\n    this._oldRouteChain = [];\n    this.env = {\n      replaceState: new Meteor.EnvironmentVariable(),\n      reload: new Meteor.EnvironmentVariable(),\n      trailingSlash: new Meteor.EnvironmentVariable()\n    }; // Implementing Reactive APIs\n\n    var reactiveApis = ['getParam', 'getQueryParam', 'getRouteName', 'watchPathChange'];\n    reactiveApis.forEach(function (api) {\n      _this[api] = function (arg1) {\n        // when this is calling, there may not be any route initiated\n        // so we need to handle it\n        var currentRoute = this._current.route;\n\n        if (!currentRoute) {\n          this._onEveryPath.depend();\n\n          return void 0;\n        } // currently, there is only one argument. If we've more let's add more args\n        // this is not clean code, but better in performance\n\n\n        return currentRoute[api].call(currentRoute, arg1);\n      };\n    }); // redirect function used inside triggers\n\n    this._redirectFn = function (pathDef, fields, queryParams) {\n      if (/^http(s)?:\\/\\//.test(pathDef)) {\n        throw new Error(\"Redirects to URLs outside of the app are not supported in this version of Flow Router. Use 'window.location = yourUrl' instead\");\n      }\n\n      _this.withReplaceState(function () {\n        _this._page.redirect(FlowRouter.path(pathDef, fields, queryParams));\n      });\n    };\n\n    this._initTriggersAPI();\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.route = function () {\n    function route(pathDef) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (!/^\\//.test(pathDef) && pathDef !== '*') {\n        throw new Error(\"route's path must start with '/'\");\n      }\n\n      var route = new Route(this, pathDef, options, group); // calls when the page route being activates\n\n      route._actionHandle = function (context) {\n        // if (isNavigating) {\n        //   return;\n        // }\n        // isNavigating = true;\n        var oldRoute = _this2._current.route;\n\n        _this2._oldRouteChain.push(oldRoute); // _qs.parse() gives us a object without prototypes,\n        // created with Object.create(null)\n        // Meteor's check doesn't play nice with it.\n        // So, we need to fix it by cloning it.\n        // see more: https://github.com/meteorhacks/flow-router/issues/164\n\n\n        var queryParams = _this2._qs.parse(context.querystring);\n\n        _this2._current = {\n          path: context.path,\n          params: context.params,\n          route: route,\n          context: context,\n          oldRoute: oldRoute,\n          queryParams: queryParams\n        }; // we need to invalidate if all the triggers have been completed\n        // if not that means, we've been redirected to another path\n        // then we don't need to invalidate\n\n        var afterAllTriggersRan = function () {\n          // isNavigating = false;\n          _this2._invalidateTracker();\n        };\n\n        route.waitOn(_this2._current, function (current, data) {\n          Triggers.runTriggers(_this2._triggersEnter.concat(route._triggersEnter), _this2._current, _this2._redirectFn, afterAllTriggersRan, data);\n        });\n      }; // calls when you exit from the page js route\n\n\n      route._exitHandle = function (context, next) {\n        Triggers.runTriggers(_this2._triggersExit.concat(route._triggersExit), _this2._current, _this2._redirectFn, next);\n      };\n\n      this._routes.push(route);\n\n      if (options.name) {\n        this._routesMap[options.name] = route;\n      }\n\n      this._updateCallbacks();\n\n      this._triggerRouteRegister(route);\n\n      return route;\n    }\n\n    return route;\n  }();\n\n  _proto.group = function () {\n    function group(options) {\n      return new Group(this, options);\n    }\n\n    return group;\n  }();\n\n  _proto.path = function () {\n    function path(_pathDef) {\n      var _this3 = this;\n\n      var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var queryParams = arguments.length > 2 ? arguments[2] : undefined;\n      var pathDef = _pathDef;\n\n      if (this._routesMap[pathDef]) {\n        pathDef = this._routesMap[pathDef].pathDef;\n      }\n\n      var path = ''; // Prefix the path with the router global prefix\n\n      if (this._basePath) {\n        path += \"/\" + this._basePath + \"/\";\n      }\n\n      path += pathDef.replace(this.pathRegExp, function (_key) {\n        var firstRegexpChar = _key.indexOf('('); // get the content behind : and (\\\\d+/)\n\n\n        var key = _key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined); // remove +?*\n\n\n        key = key.replace(/[\\+\\*\\?]+/g, ''); // this is to allow page js to keep the custom characters as it is\n        // we need to encode 2 times otherwise \"/\" char does not work properly\n        // So, in that case, when I includes \"/\" it will think it's a part of the\n        // route. encoding 2times fixes it\n\n        if (fields[key]) {\n          return _this3._encodeParam(\"\" + fields[key]);\n        }\n\n        return '';\n      }); // Replace multiple slashes with single slash\n\n      path = path.replace(/\\/\\/+/g, '/'); // remove trailing slash\n      // but keep the root slash if it's the only one\n\n      path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, ''); // explictly asked to add a trailing slash\n\n      if (this.env.trailingSlash.get() && path[path.length - 1] !== '/') {\n        path += '/';\n      }\n\n      var strQueryParams = this._qs.stringify(queryParams || {});\n\n      if (strQueryParams) {\n        path += \"?\" + strQueryParams;\n      }\n\n      path = path.replace(/\\/\\/+/g, '/');\n      return path;\n    }\n\n    return path;\n  }();\n\n  _proto.go = function () {\n    function go(pathDef, fields, queryParams) {\n      // if (isNavigating) {\n      //   return;\n      // }\n      var path = this.path(pathDef, fields, queryParams);\n\n      if (!this.env.reload.get() && path === this._current.path) {\n        return;\n      } // THIS DESCISION ISN'T CLEAR\n      // WE SHOULD AVOID .go() METHOD\n      // IF WE ARE CURRETLY NAVIGATING\n      // BUT AT THE SAME TIME IT MAY BREAK\n      // REDIRECTS AND MORE COMPLEX LOGIC\n      // SO WE WILL LEAVE IT COMMENTED AND\n      // AS IT IS FOR NOW TO AVOID COMPATIBILITY ISSUES\n      // SEARCH FOR `isNavigating` VARIABLE ACROSS THIS\n      // FILE TO LEARN MORE.\n      // OH... CLIENT-SIDE NAVIGATION AIN'T SIMPLE THING\n      // isNavigating = true;\n\n\n      try {\n        if (this.env.replaceState.get()) {\n          this._page.replace(path);\n        } else {\n          this._page(path);\n        }\n      } catch (e) {\n        Meteor._debug('Malformed URI!', path, e);\n      }\n    }\n\n    return go;\n  }();\n\n  _proto.reload = function () {\n    function reload() {\n      var _this4 = this;\n\n      this.env.reload.withValue(true, function () {\n        _this4._page.replace(_this4._current.path);\n      });\n    }\n\n    return reload;\n  }();\n\n  _proto.redirect = function () {\n    function redirect(path) {\n      this._page.redirect(path);\n    }\n\n    return redirect;\n  }();\n\n  _proto.setParams = function () {\n    function setParams(newParams) {\n      if (!this._current.route) {\n        return false;\n      }\n\n      var pathDef = this._current.route.pathDef;\n      var existingParams = this._current.params;\n      var params = {};\n      Object.keys(existingParams).forEach(function (key) {\n        params[key] = existingParams[key];\n      });\n      params = _helpers.extend(params, newParams);\n      var queryParams = this._current.queryParams;\n      this.go(pathDef, params, queryParams);\n      return true;\n    }\n\n    return setParams;\n  }();\n\n  _proto.setQueryParams = function () {\n    function setQueryParams(newParams) {\n      if (!this._current.route) {\n        return false;\n      }\n\n      var queryParams = _helpers.extend(_helpers.clone(this._current.queryParams), newParams);\n\n      for (var k in meteorBabelHelpers.sanitizeForInObject(queryParams)) {\n        if (queryParams[k] === null || queryParams[k] === undefined) {\n          delete queryParams[k];\n        }\n      }\n\n      var pathDef = this._current.route.pathDef;\n      var params = this._current.params;\n      this.go(pathDef, params, queryParams);\n      return true;\n    }\n\n    return setQueryParams;\n  }() // .current is not reactive\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n  ;\n\n  _proto.current = function () {\n    function current() {\n      // We can't trust outside, that's why we clone this\n      // Anyway, we can't clone the whole object since it has non-jsonable values\n      // That's why we clone what's really needed.\n      var current = _helpers.clone(this._current);\n\n      current.queryParams = EJSON.clone(current.queryParams);\n      current.params = EJSON.clone(current.params);\n      return current;\n    }\n\n    return current;\n  }();\n\n  _proto.track = function () {\n    function track(reactiveMapper) {\n      return function (props, onData, env) {\n        var trackerCleanup = null;\n        var handler = Tracker.nonreactive(function () {\n          return Tracker.autorun(function () {\n            trackerCleanup = reactiveMapper(props, onData, env);\n          });\n        });\n        return function () {\n          if (typeof trackerCleanup === 'function') {\n            trackerCleanup();\n          }\n\n          return handler.stop();\n        };\n      };\n    }\n\n    return track;\n  }();\n\n  _proto.mapper = function () {\n    function mapper(props, onData, env) {\n      if (typeof onData === 'function') {\n        onData(null, {\n          route: this.current(),\n          props: props,\n          env: env\n        });\n      }\n    }\n\n    return mapper;\n  }();\n\n  _proto.trackMapper = function () {\n    function trackMapper() {\n      return this.track(this.mapper);\n    }\n\n    return trackMapper;\n  }();\n\n  _proto.subsReady = function () {\n    function subsReady() {\n      var callback = null;\n      var args = Array.from(arguments);\n\n      if (typeof args[args.length - 1] === 'function') {\n        callback = args.pop();\n      }\n\n      var currentRoute = this.current().route;\n      var globalRoute = this._globalRoute; // we need to depend for every route change and\n      // rerun subscriptions to check the ready state\n\n      this._onEveryPath.depend();\n\n      if (!currentRoute) {\n        return false;\n      }\n\n      var subscriptions;\n\n      if (args.length === 0) {\n        subscriptions = Object.values(globalRoute.getAllSubscriptions());\n        subscriptions = subscriptions.concat(Object.values(currentRoute.getAllSubscriptions()));\n      } else {\n        subscriptions = args.map(function (subName) {\n          return globalRoute.getSubscription(subName) || currentRoute.getSubscription(subName);\n        });\n      }\n\n      var isReady = function () {\n        var ready = subscriptions.every(function (sub) {\n          return sub && sub.ready();\n        });\n        return ready;\n      };\n\n      if (callback) {\n        Tracker.autorun(function (c) {\n          if (isReady()) {\n            callback();\n            c.stop();\n          }\n        });\n        return true;\n      }\n\n      return isReady();\n    }\n\n    return subsReady;\n  }();\n\n  _proto.withReplaceState = function () {\n    function withReplaceState(fn) {\n      return this.env.replaceState.withValue(true, fn);\n    }\n\n    return withReplaceState;\n  }();\n\n  _proto.withTrailingSlash = function () {\n    function withTrailingSlash(fn) {\n      return this.env.trailingSlash.withValue(true, fn);\n    }\n\n    return withTrailingSlash;\n  }();\n\n  _proto.initialize = function () {\n    function initialize() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this._initialized) {\n        throw new Error('FlowRouter is already initialized');\n      }\n\n      var self = this;\n\n      this._updateCallbacks(); // Implementing idempotent routing\n      // by overriding page.js`s \"show\" method.\n      // Why?\n      // It is impossible to bypass exit triggers,\n      // because they execute before the handler and\n      // can not know what the next path is, inside exit trigger.\n      //\n      // we need override both show, replace to make this work\n      // since we use redirect when we are talking about withReplaceState\n\n\n      ['show', 'replace'].forEach(function (fnName) {\n        var original = self._page[fnName];\n\n        self._page[fnName] = function (path, state, dispatch, push) {\n          if (!path || !self.env.reload.get() && self._current.path === path) {\n            return;\n          }\n\n          original.call(this, path.replace(/\\/\\/+/g, '/'), state, dispatch, push);\n        };\n      }); // this is very ugly part of pagejs and it does decoding few times\n      // in unpredicatable manner. See #168\n      // this is the default behaviour and we need keep it like that\n      // we are doing a hack. see .path()\n\n      this._page.base(this._basePath);\n\n      this._page(Object.assign({\n        hashbang: !!options.hashbang,\n        decodeURLComponents: true\n      }, options.page || {}));\n\n      this._initialized = true;\n    }\n\n    return initialize;\n  }();\n\n  _proto._buildTracker = function () {\n    function _buildTracker() {\n      var _this5 = this;\n\n      // main autorun function\n      var tracker = Tracker.autorun(function () {\n        if (!_this5._current || !_this5._current.route) {\n          return;\n        } // see the definition of `this._processingContexts`\n\n\n        var currentContext = _this5._current;\n        var route = currentContext.route;\n        var path = currentContext.path;\n\n        if (_this5.safeToRun === 0) {\n          throw new Error(\"You can't use reactive data sources like Session inside the `.subscriptions` method!\");\n        } // We need to run subscriptions inside a Tracker\n        // to stop subs when switching between routes\n        // But we don't need to run this tracker with\n        // other reactive changes inside the .subscription method\n        // We tackle this with the `safeToRun` variable\n\n\n        _this5._globalRoute.clearSubscriptions();\n\n        _this5.subscriptions.call(_this5._globalRoute, path);\n\n        route.callSubscriptions(currentContext); // otherwise, computations inside action will trigger to re-run\n        // this computation. which we do not need.\n\n        Tracker.nonreactive(function () {\n          var isRouteChange = currentContext.oldRoute !== currentContext.route; // first route is not a route change\n\n          if (!currentContext.oldRoute) {\n            isRouteChange = false;\n          } // Clear oldRouteChain just before calling the action\n          // We still need to get a copy of the oldestRoute first\n          // It's very important to get the oldest route and registerRouteClose() it\n          // See: https://github.com/kadirahq/flow-router/issues/314\n\n\n          var oldestRoute = _this5._oldRouteChain[0];\n          _this5._oldRouteChain = [];\n          currentContext.route.registerRouteChange(currentContext, isRouteChange);\n          route.callAction(currentContext);\n          Tracker.afterFlush(function () {\n            _this5._onEveryPath.changed();\n\n            if (isRouteChange) {\n              // We need to trigger that route (definition itself) has changed.\n              // So, we need to re-run all the register callbacks to current route\n              // This is pretty important, otherwise tracker\n              // can't identify new route's items\n              // We also need to afterFlush, otherwise this will re-run\n              // helpers on templates which are marked for destroying\n              if (oldestRoute && oldestRoute.registerRouteClose) {\n                oldestRoute.registerRouteClose();\n              }\n            }\n          });\n        });\n        _this5.safeToRun--;\n      });\n      return tracker;\n    }\n\n    return _buildTracker;\n  }();\n\n  _proto._invalidateTracker = function () {\n    function _invalidateTracker() {\n      var _this6 = this;\n\n      this.safeToRun++;\n\n      this._tracker.invalidate(); // After the invalidation we need to flush to make changes immediately\n      // otherwise, we have face some issues context mix-matches and so on.\n      // But there are some cases we can't flush. So we need to ready for that.\n      // we clearly know, we can't flush inside an autorun\n      // this may leads some issues on flow-routing\n      // we may need to do some warning\n\n\n      if (!Tracker.currentComputation) {\n        // Still there are some cases where we can't flush\n        //  eg:- when there is a flush currently\n        // But we've no public API or hacks to get that state\n        // So, this is the only solution\n        try {\n          Tracker.flush();\n        } catch (ex) {\n          // only handling \"while flushing\" errors\n          if (!/Tracker\\.flush while flushing/.test(ex.message)) {\n            return;\n          } // XXX: fix this with a proper solution by removing subscription mgt.\n          // from the router. Then we don't need to run invalidate using a tracker\n          // this happens when we are trying to invoke a route change\n          // with inside a route change. (eg:- Template.onCreated)\n          // Since we use page.js and tracker, we don't have much control\n          // over this process.\n          // only solution is to defer route execution.\n          // It's possible to have more than one path want to defer\n          // But, we only need to pick the last one.\n          // self._nextPath = self._current.path;\n\n\n          Meteor.defer(function () {\n            var path = _this6._nextPath;\n\n            if (!path) {\n              return;\n            }\n\n            delete _this6._nextPath;\n\n            _this6.env.reload.withValue(true, function () {\n              _this6.go(path);\n            });\n          });\n        }\n      }\n    }\n\n    return _invalidateTracker;\n  }();\n\n  _proto._updateCallbacks = function () {\n    function _updateCallbacks() {\n      var _this7 = this;\n\n      this._page.callbacks = [];\n      this._page.exits = [];\n      var catchAll = null;\n\n      this._routes.forEach(function (route) {\n        if (route.pathDef === '*') {\n          catchAll = route;\n        } else {\n          _this7._page(route.pathDef, route._actionHandle);\n\n          _this7._page.exit(route.pathDef, route._exitHandle);\n        }\n      }); // Setting exit triggers on catch all routes leads to weird behavior.\n      // We recommend to avoid enter and exit triggers on catch all (`*`) routes.\n      // Use FlowRouter.triggers.exit([func]) and FlowRouter.triggers.enter([func]) instead\n\n\n      if (catchAll) {\n        this._page(catchAll.pathDef, catchAll._actionHandle); // this._page.exit(catchAll.pathDef, catchAll._exitHandle);\n\n      }\n    }\n\n    return _updateCallbacks;\n  }();\n\n  _proto._initTriggersAPI = function () {\n    function _initTriggersAPI() {\n      var self = this;\n      this.triggers = {\n        enter: function (_triggers, filter) {\n          var triggers = Triggers.applyFilters(_triggers, filter);\n\n          if (triggers.length) {\n            self._triggersEnter = self._triggersEnter.concat(triggers);\n          }\n        },\n        exit: function (_triggers, filter) {\n          var triggers = Triggers.applyFilters(_triggers, filter);\n\n          if (triggers.length) {\n            self._triggersExit = self._triggersExit.concat(triggers);\n          }\n        }\n      };\n    }\n\n    return _initTriggersAPI;\n  }();\n\n  _proto.wait = function () {\n    function wait() {\n      if (this._initialized) {\n        throw new Error(\"can't wait after FlowRouter has been initialized\");\n      }\n\n      this._askedToWait = true;\n    }\n\n    return wait;\n  }();\n\n  _proto.onRouteRegister = function () {\n    function onRouteRegister(cb) {\n      this._onRouteCallbacks.push(cb);\n    }\n\n    return onRouteRegister;\n  }();\n\n  _proto._triggerRouteRegister = function () {\n    function _triggerRouteRegister(currentRoute) {\n      // We should only need to send a safe set of fields on the route\n      // object.\n      // This is not to hide what's inside the route object, but to show\n      // these are the public APIs\n      var routePublicApi = _helpers.pick(currentRoute, ['name', 'pathDef', 'path']);\n\n      routePublicApi.options = _helpers.omit(currentRoute.options, ['triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name']);\n\n      this._onRouteCallbacks.forEach(function (cb) {\n        cb(routePublicApi);\n      });\n    }\n\n    return _triggerRouteRegister;\n  }();\n\n  _proto.url = function () {\n    function url() {\n      // We need to remove the leading base path, or \"/\", as it will be inserted\n      // automatically by `Meteor.absoluteUrl` as documented in:\n      // http://docs.meteor.com/#/full/meteor_absoluteurl\n      return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + (\"/\" + (this._basePath || '') + \"/\").replace(/\\/\\/+/g, '/')), ''));\n    }\n\n    return url;\n  }();\n\n  _createClass(Router, [{\n    key: \"notFound\",\n    set: function (opts) {\n      Meteor._debug('FlowRouter.notFound is deprecated, use FlowRouter.route(\\'*\\', { /*...*/ }) instead!');\n\n      opts.name = opts.name || '__notFound';\n      this._notFound = this.route('*', opts);\n    },\n    get: function () {\n      return this._notFound;\n    }\n  }, {\n    key: \"_page\",\n    get: function () {\n      return page;\n    }\n  }, {\n    key: \"_qs\",\n    get: function () {\n      return qs;\n    }\n  }]);\n\n  return Router;\n}();\n\nmodule.exportDefault(Router);","map":{"version":3,"sources":["packages/ostrio:flow-router-extra/client/router.js"],"names":["_createClass","module","link","default","v","FlowRouter","Route","Group","Triggers","BlazeRenderer","EJSON","Meteor","Tracker","_helpers","page","qs","Router","pathRegExp","globals","subscriptions","Function","prototype","Renderer","router","_tracker","_buildTracker","_current","_specialChars","_encodeParam","param","paramArr","split","_param","i","length","includes","encodeURIComponent","e","_onEveryPath","Dependency","_globalRoute","_onRouteCallbacks","_askedToWait","_initialized","_triggersEnter","_triggersExit","_routes","_routesMap","_updateCallbacks","_notFound","notfound","notFound","safeToRun","_basePath","window","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","_oldRouteChain","env","replaceState","EnvironmentVariable","reload","trailingSlash","reactiveApis","forEach","api","arg1","currentRoute","route","depend","call","_redirectFn","pathDef","fields","queryParams","test","Error","withReplaceState","_page","redirect","path","_initTriggersAPI","options","group","_actionHandle","context","oldRoute","push","_qs","parse","querystring","params","afterAllTriggersRan","_invalidateTracker","waitOn","current","data","runTriggers","concat","_exitHandle","next","name","_triggerRouteRegister","_pathDef","replace","_key","firstRegexpChar","indexOf","key","substring","undefined","match","get","strQueryParams","stringify","go","_debug","withValue","setParams","newParams","existingParams","Object","keys","extend","setQueryParams","clone","k","track","reactiveMapper","props","onData","trackerCleanup","handler","nonreactive","autorun","stop","mapper","trackMapper","subsReady","callback","args","Array","from","arguments","pop","globalRoute","values","getAllSubscriptions","map","subName","getSubscription","isReady","ready","every","sub","c","fn","withTrailingSlash","initialize","self","fnName","original","state","dispatch","base","assign","hashbang","decodeURLComponents","tracker","currentContext","clearSubscriptions","callSubscriptions","isRouteChange","oldestRoute","registerRouteChange","callAction","afterFlush","changed","registerRouteClose","invalidate","currentComputation","flush","ex","message","defer","_nextPath","callbacks","exits","catchAll","exit","triggers","enter","_triggers","filter","applyFilters","wait","onRouteRegister","cb","routePublicApi","pick","omit","url","absoluteUrl","apply","RegExp","opts","exportDefault"],"mappings":"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","sourcesContent":["import { FlowRouter, Route, Group, Triggers, BlazeRenderer } from './_init.js';\nimport { EJSON }    from 'meteor/ejson';\nimport { Meteor }   from 'meteor/meteor';\nimport { Tracker }  from 'meteor/tracker';\nimport { _helpers } from './../lib/_helpers.js';\nimport { page, qs } from './modules.js';\n\n// let isNavigating = false;\n\nclass Router {\n  constructor() {\n    this.pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n    this.globals = [];\n    this.subscriptions = Function.prototype;\n    this.Renderer = new BlazeRenderer({ router: this });\n\n    this._tracker = this._buildTracker();\n    this._current = {};\n    this._specialChars = ['/', '%', '+'];\n    this._encodeParam = (param) => {\n      const paramArr = param.split('');\n      let _param = '';\n      for (let i = 0; i < paramArr.length; i++) {\n        if (this._specialChars.includes(paramArr[i])){\n          _param += encodeURIComponent(encodeURIComponent(paramArr[i]));\n        } else {\n          try {\n            _param += encodeURIComponent(paramArr[i]);\n          } catch (e) {\n            _param += paramArr[i];\n          }\n        }\n      }\n      return _param;\n    };\n\n    // tracks the current path change\n    this._onEveryPath = new Tracker.Dependency();\n\n    this._globalRoute = new Route(this);\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n    this._askedToWait = false;\n    this._initialized = false;\n    this._triggersEnter = [];\n    this._triggersExit = [];\n    this._routes = [];\n    this._routesMap = {};\n    this._updateCallbacks();\n    this._notFound = null;\n    this.notfound = this.notFound;\n    // indicate it's okay (or not okay) to run the tracker\n    // when doing subscriptions\n    // using a number and increment it help us to support FlowRouter.go()\n    // and legitimate reruns inside tracker on the same event loop.\n    // this is a solution for #145\n    this.safeToRun = 0;\n\n    // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n    this._basePath = window.__meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n\n    // this is a chain contains a list of old routes\n    // most of the time, there is only one old route\n    // but when it's the time for a trigger redirect we've a chain\n    this._oldRouteChain = [];\n\n    this.env = {\n      replaceState: new Meteor.EnvironmentVariable(),\n      reload: new Meteor.EnvironmentVariable(),\n      trailingSlash: new Meteor.EnvironmentVariable()\n    };\n\n    // Implementing Reactive APIs\n    const reactiveApis = [\n      'getParam', 'getQueryParam',\n      'getRouteName', 'watchPathChange'\n    ];\n\n    reactiveApis.forEach((api) => {\n      this[api] = function (arg1) {\n        // when this is calling, there may not be any route initiated\n        // so we need to handle it\n        const currentRoute = this._current.route;\n        if (!currentRoute) {\n          this._onEveryPath.depend();\n          return void 0;\n        }\n\n        // currently, there is only one argument. If we've more let's add more args\n        // this is not clean code, but better in performance\n        return currentRoute[api].call(currentRoute, arg1);\n      };\n    });\n\n    // redirect function used inside triggers\n    this._redirectFn = (pathDef, fields, queryParams) => {\n      if (/^http(s)?:\\/\\//.test(pathDef)) {\n        throw new Error(\"Redirects to URLs outside of the app are not supported in this version of Flow Router. Use 'window.location = yourUrl' instead\");\n      }\n\n      this.withReplaceState(() => {\n        this._page.redirect(FlowRouter.path(pathDef, fields, queryParams));\n      });\n    };\n    this._initTriggersAPI();\n  }\n\n  set notFound(opts) {\n    Meteor._debug('FlowRouter.notFound is deprecated, use FlowRouter.route(\\'*\\', { /*...*/ }) instead!');\n    opts.name = opts.name || '__notFound';\n    this._notFound = this.route('*', opts);\n  }\n\n  get notFound() {\n    return this._notFound;\n  }\n\n  get _page() {\n    return page;\n  }\n\n  get _qs() {\n    return qs;\n  }\n\n  route(pathDef, options = {}, group) {\n    if (!/^\\//.test(pathDef) && pathDef !== '*') {\n      throw new Error(\"route's path must start with '/'\");\n    }\n\n    const route = new Route(this, pathDef, options, group);\n\n    // calls when the page route being activates\n    route._actionHandle = (context) => {\n      // if (isNavigating) {\n      //   return;\n      // }\n      // isNavigating = true;\n      const oldRoute = this._current.route;\n      this._oldRouteChain.push(oldRoute);\n\n      // _qs.parse() gives us a object without prototypes,\n      // created with Object.create(null)\n      // Meteor's check doesn't play nice with it.\n      // So, we need to fix it by cloning it.\n      // see more: https://github.com/meteorhacks/flow-router/issues/164\n      const queryParams = this._qs.parse(context.querystring);\n      this._current = {\n        path: context.path,\n        params: context.params,\n        route,\n        context,\n        oldRoute,\n        queryParams\n      };\n\n      // we need to invalidate if all the triggers have been completed\n      // if not that means, we've been redirected to another path\n      // then we don't need to invalidate\n      const afterAllTriggersRan = () => {\n        // isNavigating = false;\n        this._invalidateTracker();\n      };\n\n      route.waitOn(this._current, (current, data) => {\n        Triggers.runTriggers(\n          this._triggersEnter.concat(route._triggersEnter),\n          this._current,\n          this._redirectFn,\n          afterAllTriggersRan,\n          data\n        );\n      });\n    };\n\n    // calls when you exit from the page js route\n    route._exitHandle = (context, next) => {\n      Triggers.runTriggers(\n        this._triggersExit.concat(route._triggersExit),\n        this._current,\n        this._redirectFn,\n        next\n      );\n    };\n\n    this._routes.push(route);\n    if (options.name) {\n      this._routesMap[options.name] = route;\n    }\n\n    this._updateCallbacks();\n    this._triggerRouteRegister(route);\n\n    return route;\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  path(_pathDef, fields = {}, queryParams) {\n    let pathDef = _pathDef;\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].pathDef;\n    }\n\n    let path = '';\n\n    // Prefix the path with the router global prefix\n    if (this._basePath) {\n      path += `/${this._basePath}/`;\n    }\n\n    path += pathDef.replace(this.pathRegExp, (_key) => {\n      const firstRegexpChar = _key.indexOf('(');\n      // get the content behind : and (\\\\d+/)\n      let key = _key.substring(1, (firstRegexpChar > 0) ? firstRegexpChar : undefined);\n      // remove +?*\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n\n      // this is to allow page js to keep the custom characters as it is\n      // we need to encode 2 times otherwise \"/\" char does not work properly\n      // So, in that case, when I includes \"/\" it will think it's a part of the\n      // route. encoding 2times fixes it\n      if (fields[key]) {\n        return this._encodeParam(`${fields[key]}`);\n      }\n\n      return '';\n    });\n\n    // Replace multiple slashes with single slash\n    path = path.replace(/\\/\\/+/g, '/');\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n    // explictly asked to add a trailing slash\n    if (this.env.trailingSlash.get() && path[path.length - 1] !== '/') {\n      path += '/';\n    }\n\n    const strQueryParams = this._qs.stringify(queryParams || {});\n    if (strQueryParams) {\n      path += `?${strQueryParams}`;\n    }\n\n    path = path.replace(/\\/\\/+/g, '/');\n    return path;\n  }\n\n  go(pathDef, fields, queryParams) {\n    // if (isNavigating) {\n    //   return;\n    // }\n    const path = this.path(pathDef, fields, queryParams);\n    if (!this.env.reload.get() && path === this._current.path) {\n      return;\n    }\n\n    // THIS DESCISION ISN'T CLEAR\n    // WE SHOULD AVOID .go() METHOD\n    // IF WE ARE CURRETLY NAVIGATING\n    // BUT AT THE SAME TIME IT MAY BREAK\n    // REDIRECTS AND MORE COMPLEX LOGIC\n    // SO WE WILL LEAVE IT COMMENTED AND\n    // AS IT IS FOR NOW TO AVOID COMPATIBILITY ISSUES\n    // SEARCH FOR `isNavigating` VARIABLE ACROSS THIS\n    // FILE TO LEARN MORE.\n    // OH... CLIENT-SIDE NAVIGATION AIN'T SIMPLE THING\n    // isNavigating = true;\n\n    try {\n      if (this.env.replaceState.get()) {\n        this._page.replace(path);\n      } else {\n        this._page(path);\n      }\n    } catch (e) {\n      Meteor._debug('Malformed URI!', path, e);\n    }\n  }\n\n  reload() {\n    this.env.reload.withValue(true, () => {\n      this._page.replace(this._current.path);\n    });\n  }\n\n  redirect(path) {\n    this._page.redirect(path);\n  }\n\n  setParams(newParams) {\n    if (!this._current.route) {return false;}\n\n    const pathDef = this._current.route.pathDef;\n    const existingParams = this._current.params;\n    let params = {};\n    Object.keys(existingParams).forEach((key) => {\n      params[key] = existingParams[key];\n    });\n\n    params = _helpers.extend(params, newParams);\n    const queryParams = this._current.queryParams;\n\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  setQueryParams(newParams) {\n    if (!this._current.route) {return false;}\n\n    const queryParams = _helpers.extend(_helpers.clone(this._current.queryParams), newParams);\n\n    for (const k in queryParams) {\n      if (queryParams[k] === null || queryParams[k] === undefined) {\n        delete queryParams[k];\n      }\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const params = this._current.params;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  // .current is not reactive\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const current = _helpers.clone(this._current);\n    current.queryParams = EJSON.clone(current.queryParams);\n    current.params = EJSON.clone(current.params);\n    return current;\n  }\n\n  track(reactiveMapper) {\n    return (props, onData, env) => {\n      let trackerCleanup = null;\n      const handler = Tracker.nonreactive(() => {\n        return Tracker.autorun(() => {\n          trackerCleanup = reactiveMapper(props, onData, env);\n        });\n      });\n\n      return () => {\n        if (typeof trackerCleanup === 'function') {\n          trackerCleanup();\n        }\n        return handler.stop();\n      };\n    };\n  }\n\n  mapper(props, onData, env) {\n    if (typeof onData === 'function') {\n      onData(null, { route: this.current(), props, env });\n    }\n  }\n\n  trackMapper() {\n    return this.track(this.mapper);\n  }\n\n  subsReady() {\n    let callback = null;\n    const args = Array.from(arguments);\n\n    if (typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    }\n\n    const currentRoute = this.current().route;\n    const globalRoute = this._globalRoute;\n\n    // we need to depend for every route change and\n    // rerun subscriptions to check the ready state\n    this._onEveryPath.depend();\n\n    if (!currentRoute) {\n      return false;\n    }\n\n    let subscriptions;\n    if (args.length === 0) {\n      subscriptions = Object.values(globalRoute.getAllSubscriptions());\n      subscriptions = subscriptions.concat(Object.values(currentRoute.getAllSubscriptions()));\n    } else {\n      subscriptions = args.map((subName) => {\n        return globalRoute.getSubscription(subName) || currentRoute.getSubscription(subName);\n      });\n    }\n\n    const isReady = () => {\n      const ready =  subscriptions.every((sub) => {\n        return sub && sub.ready();\n      });\n\n      return ready;\n    };\n\n    if (callback) {\n      Tracker.autorun((c) => {\n        if (isReady()) {\n          callback();\n          c.stop();\n        }\n      });\n      return true;\n    }\n    return isReady();\n  }\n\n  withReplaceState(fn) {\n    return this.env.replaceState.withValue(true, fn);\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n\n  initialize(options = {}) {\n    if (this._initialized) {\n      throw new Error('FlowRouter is already initialized');\n    }\n\n    const self = this;\n    this._updateCallbacks();\n\n    // Implementing idempotent routing\n    // by overriding page.js`s \"show\" method.\n    // Why?\n    // It is impossible to bypass exit triggers,\n    // because they execute before the handler and\n    // can not know what the next path is, inside exit trigger.\n    //\n    // we need override both show, replace to make this work\n    // since we use redirect when we are talking about withReplaceState\n    ['show', 'replace'].forEach((fnName) => {\n      const original = self._page[fnName];\n      self._page[fnName] = function (path, state, dispatch, push) {\n        if (!path || (!self.env.reload.get() && self._current.path === path)) {\n          return;\n        }\n        original.call(this, path.replace(/\\/\\/+/g, '/'), state, dispatch, push);\n      };\n    });\n\n    // this is very ugly part of pagejs and it does decoding few times\n    // in unpredicatable manner. See #168\n    // this is the default behaviour and we need keep it like that\n    // we are doing a hack. see .path()\n    this._page.base(this._basePath);\n\n    this._page(Object.assign({\n      hashbang: !!options.hashbang,\n      decodeURLComponents: true\n    }, options.page || {}));\n\n    this._initialized = true;\n  }\n\n  _buildTracker() {\n    // main autorun function\n    const tracker = Tracker.autorun(() => {\n      if (!this._current || !this._current.route) {\n        return;\n      }\n\n      // see the definition of `this._processingContexts`\n      const currentContext = this._current;\n      const route = currentContext.route;\n      const path = currentContext.path;\n\n      if (this.safeToRun === 0) {\n        throw new Error(\"You can't use reactive data sources like Session inside the `.subscriptions` method!\");\n      }\n\n      // We need to run subscriptions inside a Tracker\n      // to stop subs when switching between routes\n      // But we don't need to run this tracker with\n      // other reactive changes inside the .subscription method\n      // We tackle this with the `safeToRun` variable\n      this._globalRoute.clearSubscriptions();\n      this.subscriptions.call(this._globalRoute, path);\n      route.callSubscriptions(currentContext);\n\n      // otherwise, computations inside action will trigger to re-run\n      // this computation. which we do not need.\n      Tracker.nonreactive(() => {\n        let isRouteChange = currentContext.oldRoute !== currentContext.route;\n        // first route is not a route change\n        if (!currentContext.oldRoute) {\n          isRouteChange = false;\n        }\n\n        // Clear oldRouteChain just before calling the action\n        // We still need to get a copy of the oldestRoute first\n        // It's very important to get the oldest route and registerRouteClose() it\n        // See: https://github.com/kadirahq/flow-router/issues/314\n        const oldestRoute = this._oldRouteChain[0];\n        this._oldRouteChain = [];\n\n        currentContext.route.registerRouteChange(currentContext, isRouteChange);\n        route.callAction(currentContext);\n\n        Tracker.afterFlush(() => {\n          this._onEveryPath.changed();\n          if (isRouteChange) {\n            // We need to trigger that route (definition itself) has changed.\n            // So, we need to re-run all the register callbacks to current route\n            // This is pretty important, otherwise tracker\n            // can't identify new route's items\n\n            // We also need to afterFlush, otherwise this will re-run\n            // helpers on templates which are marked for destroying\n            if (oldestRoute && oldestRoute.registerRouteClose) {\n              oldestRoute.registerRouteClose();\n            }\n          }\n        });\n      });\n\n      this.safeToRun--;\n    });\n\n    return tracker;\n  }\n\n  _invalidateTracker() {\n    this.safeToRun++;\n    this._tracker.invalidate();\n    // After the invalidation we need to flush to make changes immediately\n    // otherwise, we have face some issues context mix-matches and so on.\n    // But there are some cases we can't flush. So we need to ready for that.\n\n    // we clearly know, we can't flush inside an autorun\n    // this may leads some issues on flow-routing\n    // we may need to do some warning\n    if (!Tracker.currentComputation) {\n      // Still there are some cases where we can't flush\n      //  eg:- when there is a flush currently\n      // But we've no public API or hacks to get that state\n      // So, this is the only solution\n      try {\n        Tracker.flush();\n      } catch(ex) {\n        // only handling \"while flushing\" errors\n        if (!/Tracker\\.flush while flushing/.test(ex.message)) {\n          return;\n        }\n\n        // XXX: fix this with a proper solution by removing subscription mgt.\n        // from the router. Then we don't need to run invalidate using a tracker\n\n        // this happens when we are trying to invoke a route change\n        // with inside a route change. (eg:- Template.onCreated)\n        // Since we use page.js and tracker, we don't have much control\n        // over this process.\n        // only solution is to defer route execution.\n\n        // It's possible to have more than one path want to defer\n        // But, we only need to pick the last one.\n        // self._nextPath = self._current.path;\n        Meteor.defer(() => {\n          const path = this._nextPath;\n          if (!path) {\n            return;\n          }\n\n          delete this._nextPath;\n          this.env.reload.withValue(true, () => {\n            this.go(path);\n          });\n        });\n      }\n    }\n  }\n\n  _updateCallbacks() {\n    this._page.callbacks = [];\n    this._page.exits = [];\n    let catchAll = null;\n\n    this._routes.forEach((route) => {\n      if (route.pathDef === '*') {\n        catchAll = route;\n      } else {\n        this._page(route.pathDef, route._actionHandle);\n        this._page.exit(route.pathDef, route._exitHandle);\n      }\n    });\n\n    // Setting exit triggers on catch all routes leads to weird behavior.\n    // We recommend to avoid enter and exit triggers on catch all (`*`) routes.\n    // Use FlowRouter.triggers.exit([func]) and FlowRouter.triggers.enter([func]) instead\n    if (catchAll) {\n      this._page(catchAll.pathDef, catchAll._actionHandle);\n      // this._page.exit(catchAll.pathDef, catchAll._exitHandle);\n    }\n  }\n\n  _initTriggersAPI() {\n    const self = this;\n    this.triggers = {\n      enter(_triggers, filter) {\n        let triggers = Triggers.applyFilters(_triggers, filter);\n        if (triggers.length) {\n          self._triggersEnter = self._triggersEnter.concat(triggers);\n        }\n      },\n      exit(_triggers, filter) {\n        let triggers = Triggers.applyFilters(_triggers, filter);\n        if (triggers.length) {\n          self._triggersExit = self._triggersExit.concat(triggers);\n        }\n      }\n    };\n  }\n\n  wait() {\n    if (this._initialized) {\n      throw new Error(\"can't wait after FlowRouter has been initialized\");\n    }\n\n    this._askedToWait = true;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _helpers.pick(currentRoute, ['name', 'pathDef', 'path']);\n    routePublicApi.options = _helpers.omit(currentRoute.options, ['triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name']);\n\n    this._onRouteCallbacks.forEach((cb) => {\n      cb(routePublicApi);\n    });\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + (`/${this._basePath || ''}/`).replace(/\\/\\/+/g, '/')), ''));\n  }\n}\n\nexport default Router;\n"]},"sourceType":"module","hash":"86af3ee017fb72511e40bad4e35e7fe2274005a6"}
