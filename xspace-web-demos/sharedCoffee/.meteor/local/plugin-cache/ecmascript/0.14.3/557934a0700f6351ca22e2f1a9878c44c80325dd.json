{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/slice.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/three/slice.js","filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/slice.js","passPerPreset":false,"envName":"development","cwd":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","root":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jaylin/Documents/xspace/xspace-web-demos/sharedCoffee/client/three/slice.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/three/slice.js"}},"code":"!function (module1) {\n  module1.export({\n    SliceGeometry: function () {\n      return SliceGeometry;\n    }\n  });\n  var THREE;\n  module1.link(\"./three.module.js\", {\n    \"*\": function (v) {\n      THREE = v;\n    }\n  }, 0);\n\n  function facesFromEdges(edges) {\n    var chains = joinEdges(edges).filter(validFace);\n    var faces = chains.map(function (chain) {\n      return chain.map(function (edge) {\n        return edge[0];\n      });\n    });\n    return faces;\n  }\n\n  function joinEdges(edges) {\n    changes = true;\n    var chains = edges.map(function (edge) {\n      return [edge];\n    });\n\n    while (changes) {\n      changes = connectChains(chains);\n    }\n\n    chains = chains.filter(function (chain) {\n      return chain.length;\n    });\n    return chains;\n  }\n\n  function connectChains(chains) {\n    chains.forEach(function (chainA, i) {\n      chains.forEach(function (chainB, j) {\n        var merged = mergeChains(chainA, chainB);\n\n        if (merged) {\n          delete chains[j];\n          return true;\n        }\n      });\n    });\n    return false;\n  }\n\n  function mergeChains(chainA, chainB) {\n    if (chainA === chainB) {\n      return false;\n    }\n\n    if (chainStart(chainA) === chainEnd(chainB)) {\n      chainA.unshift.apply(chainA, chainB);\n      return true;\n    }\n\n    if (chainStart(chainA) === chainStart(chainB)) {\n      reverseChain(chainB);\n      chainA.unshift.apply(chainA, chainB);\n      return true;\n    }\n\n    if (chainEnd(chainA) === chainStart(chainB)) {\n      chainA.push.apply(chainA, chainB);\n      return true;\n    }\n\n    if (chainEnd(chainA) === chainEnd(chainB)) {\n      reverseChain(chainB);\n      chainA.push.apply(chainA, chainB);\n      return true;\n    }\n\n    return false;\n  }\n\n  function chainStart(chain) {\n    return chain[0][0];\n  }\n\n  function chainEnd(chain) {\n    return chain[chain.length - 1][1];\n  }\n\n  function reverseChain(chain) {\n    chain.reverse();\n    chain.forEach(function (edge) {\n      edge.reverse();\n    });\n  }\n\n  function validFace(chain) {\n    return chainStart(chain) === chainEnd(chain) ? 1 : 0;\n  }\n\n  var FRONT = 'front';\n  var BACK = 'back';\n  var ON = 'on';\n  var FACE_KEYS = ['a', 'b', 'c'];\n\n  var distanceAsPosition = function (distance) {\n    if (distance < 0) {\n      return BACK;\n    }\n\n    if (distance > 0) {\n      return FRONT;\n    }\n\n    return ON;\n  };\n\n  var findDistance = function (vertex, plane) {\n    return plane.distanceToPoint(vertex);\n  };\n\n  var GeometryBuilder = function (sourceGeometry, targetGeometry, slicePlane) {\n    this.sourceGeometry = sourceGeometry;\n    this.targetGeometry = targetGeometry;\n    this.slicePlane = slicePlane;\n    this.addedVertices = [];\n    this.addedIntersections = [];\n    this.newEdges = [[]];\n  };\n\n  GeometryBuilder.prototype.startFace = function (sourceFaceIndex) {\n    this.sourceFaceIndex = sourceFaceIndex;\n    this.sourceFace = this.sourceGeometry.faces[sourceFaceIndex];\n    this.sourceFaceUvs = this.sourceGeometry.faceVertexUvs[0][sourceFaceIndex];\n    this.faceIndices = [];\n    this.faceNormals = [];\n    this.faceUvs = [];\n  };\n\n  GeometryBuilder.prototype.endFace = function () {\n    var indices = this.faceIndices.map(function (index, i) {\n      return i;\n    });\n    this.addFace(indices);\n  };\n\n  GeometryBuilder.prototype.closeHoles = function () {\n    facesFromEdges(this.newEdges).forEach(function (faceIndices) {\n      var normal = this.faceNormal(faceIndices);\n\n      if (normal.dot(this.slicePlane.normal) > .5) {\n        faceIndices.reverse();\n      }\n\n      this.startFace();\n      this.faceIndices = faceIndices;\n      this.endFace();\n    }, this);\n  };\n\n  GeometryBuilder.prototype.addVertex = function (key) {\n    this.addUv(key);\n    this.addNormal(key);\n    var index = this.sourceFace[key];\n    var newIndex;\n\n    if (this.addedVertices.hasOwnProperty(index)) {\n      newIndex = this.addedVertices[index];\n    } else {\n      var vertex = this.sourceGeometry.vertices[index];\n      this.targetGeometry.vertices.push(vertex);\n      newIndex = this.targetGeometry.vertices.length - 1;\n      this.addedVertices[index] = newIndex;\n    }\n\n    this.faceIndices.push(newIndex);\n  };\n\n  GeometryBuilder.prototype.addIntersection = function (keyA, keyB, distanceA, distanceB) {\n    var t = Math.abs(distanceA) / (Math.abs(distanceA) + Math.abs(distanceB));\n    this.addIntersectionUv(keyA, keyB, t);\n    this.addIntersectionNormal(keyA, keyB, t);\n    var indexA = this.sourceFace[keyA];\n    var indexB = this.sourceFace[keyB];\n    var id = this.intersectionId(indexA, indexB);\n    var index;\n\n    if (this.addedIntersections.hasOwnProperty(id)) {\n      index = this.addedIntersections[id];\n    } else {\n      var vertexA = this.sourceGeometry.vertices[indexA];\n      var vertexB = this.sourceGeometry.vertices[indexB];\n      var newVertex = vertexA.clone().lerp(vertexB, t);\n      this.targetGeometry.vertices.push(newVertex);\n      index = this.targetGeometry.vertices.length - 1;\n      this.addedIntersections[id] = index;\n    }\n\n    this.faceIndices.push(index);\n    this.updateNewEdges(index);\n  };\n\n  GeometryBuilder.prototype.addUv = function (key) {\n    if (!this.sourceFaceUvs) {\n      return;\n    }\n\n    var index = this.keyIndex(key);\n    var uv = this.sourceFaceUvs[index];\n    this.faceUvs.push(uv);\n  };\n\n  GeometryBuilder.prototype.addIntersectionUv = function (keyA, keyB, t) {\n    if (!this.sourceFaceUvs) {\n      return;\n    }\n\n    var indexA = this.keyIndex(keyA);\n    var indexB = this.keyIndex(keyB);\n    var uvA = this.sourceFaceUvs[indexA];\n    var uvB = this.sourceFaceUvs[indexB];\n    var uv = uvA.clone().lerp(uvB, t);\n    this.faceUvs.push(uv);\n  };\n\n  GeometryBuilder.prototype.addNormal = function (key) {\n    if (!this.sourceFace.vertexNormals.length) {\n      return;\n    }\n\n    var index = this.keyIndex(key);\n    var normal = this.sourceFace.vertexNormals[index];\n    this.faceNormals.push(normal);\n  };\n\n  GeometryBuilder.prototype.addIntersectionNormal = function (keyA, keyB, t) {\n    if (!this.sourceFace.vertexNormals.length) {\n      return;\n    }\n\n    var indexA = this.keyIndex(keyA);\n    var indexB = this.keyIndex(keyB);\n    var normalA = this.sourceFace.vertexNormals[indexA];\n    var normalB = this.sourceFace.vertexNormals[indexB];\n    var normal = normalA.clone().lerp(normalB, t).normalize();\n    this.faceNormals.push(normal);\n  };\n\n  GeometryBuilder.prototype.addFace = function (indices) {\n    if (indices.length === 3) {\n      this.addFacePart(indices[0], indices[1], indices[2]);\n      return;\n    }\n\n    var pairs = [];\n\n    for (var i = 0; i < indices.length; i++) {\n      for (var j = i + 1; j < indices.length; j++) {\n        var diff = Math.abs(i - j);\n\n        if (diff > 1 && diff < indices.length - 1) {\n          pairs.push([indices[i], indices[j]]);\n        }\n      }\n    }\n\n    pairs.sort(function (pairA, pairB) {\n      var lengthA = this.faceEdgeLength(pairA[0], pairA[1]);\n      var lengthB = this.faceEdgeLength(pairB[0], pairB[1]);\n      return lengthA - lengthB;\n    }.bind(this));\n    var a = indices.indexOf(pairs[0][0]);\n    indices = indices.slice(a).concat(indices.slice(0, a));\n    var b = indices.indexOf(pairs[0][1]);\n    var indicesA = indices.slice(0, b + 1);\n    var indicesB = indices.slice(b).concat(indices.slice(0, 1));\n    this.addFace(indicesA);\n    this.addFace(indicesB);\n  };\n\n  GeometryBuilder.prototype.addFacePart = function (a, b, c) {\n    var normals = null;\n\n    if (this.faceNormals.length) {\n      normals = [this.faceNormals[a], this.faceNormals[b], this.faceNormals[c]];\n    }\n\n    var face = new THREE.Face3(this.faceIndices[a], this.faceIndices[b], this.faceIndices[c], normals);\n    this.targetGeometry.faces.push(face);\n\n    if (!this.sourceFaceUvs) {\n      return;\n    }\n\n    this.targetGeometry.faceVertexUvs[0].push([this.faceUvs[a], this.faceUvs[b], this.faceUvs[c]]);\n  };\n\n  GeometryBuilder.prototype.faceEdgeLength = function (a, b) {\n    var indexA = this.faceIndices[a];\n    var indexB = this.faceIndices[b];\n    var vertexA = this.targetGeometry.vertices[indexA];\n    var vertexB = this.targetGeometry.vertices[indexB];\n    return vertexA.distanceToSquared(vertexB);\n  };\n\n  GeometryBuilder.prototype.intersectionId = function (indexA, indexB) {\n    return [indexA, indexB].sort().join(',');\n  };\n\n  GeometryBuilder.prototype.keyIndex = function (key) {\n    return FACE_KEYS.indexOf(key);\n  };\n\n  GeometryBuilder.prototype.updateNewEdges = function (index) {\n    var edgeIndex = this.newEdges.length - 1;\n    var edge = this.newEdges[edgeIndex];\n\n    if (edge.length < 2) {\n      edge.push(index);\n    } else {\n      this.newEdges.push([index]);\n    }\n  };\n\n  GeometryBuilder.prototype.faceNormal = function (faceIndices) {\n    var vertices = faceIndices.map(function (index) {\n      return this.targetGeometry.vertices[index];\n    }.bind(this));\n    var edgeA = vertices[0].clone().sub(vertices[1]);\n    var edgeB = vertices[0].clone().sub(vertices[2]);\n    return edgeA.cross(edgeB).normalize();\n  };\n\n  var SliceGeometry = function (geometry, plane, closeHoles) {\n    var sliced = new THREE.Geometry();\n    var builder = new GeometryBuilder(geometry, sliced, plane);\n    var distances = [];\n    var positions = [];\n    geometry.vertices.forEach(function (vertex) {\n      var distance = findDistance(vertex, plane);\n      var position = distanceAsPosition(distance);\n      distances.push(distance);\n      positions.push(position);\n    });\n    geometry.faces.forEach(function (face, faceIndex) {\n      var facePositions = FACE_KEYS.map(function (key) {\n        return positions[face[key]];\n      });\n\n      if (facePositions.indexOf(FRONT) === -1 && facePositions.indexOf(BACK) !== -1) {\n        return;\n      }\n\n      builder.startFace(faceIndex);\n      var lastKey = FACE_KEYS[FACE_KEYS.length - 1];\n      var lastIndex = face[lastKey];\n      var lastDistance = distances[lastIndex];\n      var lastPosition = positions[lastIndex];\n      FACE_KEYS.map(function (key) {\n        var index = face[key];\n        var distance = distances[index];\n        var position = positions[index];\n\n        if (position === FRONT) {\n          if (lastPosition === BACK) {\n            builder.addIntersection(lastKey, key, lastDistance, distance);\n            builder.addVertex(key);\n          } else {\n            builder.addVertex(key);\n          }\n        }\n\n        if (position === ON) {\n          builder.addVertex(key);\n        }\n\n        if (position === BACK && lastPosition === FRONT) {\n          builder.addIntersection(lastKey, key, lastDistance, distance);\n        }\n\n        lastKey = key;\n        lastIndex = index;\n        lastPosition = position;\n        lastDistance = distance;\n      });\n      builder.endFace();\n    });\n\n    if (closeHoles) {\n      builder.closeHoles();\n    }\n\n    return sliced;\n  };\n}.call(this, module);","map":{"version":3,"sources":["client/three/slice.js"],"names":["module1","export","SliceGeometry","THREE","link","v","facesFromEdges","edges","chains","joinEdges","filter","validFace","faces","map","chain","edge","changes","connectChains","length","forEach","chainA","i","chainB","j","merged","mergeChains","chainStart","chainEnd","unshift","apply","reverseChain","push","reverse","FRONT","BACK","ON","FACE_KEYS","distanceAsPosition","distance","findDistance","vertex","plane","distanceToPoint","GeometryBuilder","sourceGeometry","targetGeometry","slicePlane","addedVertices","addedIntersections","newEdges","prototype","startFace","sourceFaceIndex","sourceFace","sourceFaceUvs","faceVertexUvs","faceIndices","faceNormals","faceUvs","endFace","indices","index","addFace","closeHoles","normal","faceNormal","dot","addVertex","key","addUv","addNormal","newIndex","hasOwnProperty","vertices","addIntersection","keyA","keyB","distanceA","distanceB","t","Math","abs","addIntersectionUv","addIntersectionNormal","indexA","indexB","id","intersectionId","vertexA","vertexB","newVertex","clone","lerp","updateNewEdges","keyIndex","uv","uvA","uvB","vertexNormals","normalA","normalB","normalize","addFacePart","pairs","diff","sort","pairA","pairB","lengthA","faceEdgeLength","lengthB","bind","a","indexOf","slice","concat","b","indicesA","indicesB","c","normals","face","Face3","distanceToSquared","join","edgeIndex","edgeA","sub","edgeB","cross","geometry","sliced","Geometry","builder","distances","positions","position","faceIndex","facePositions","lastKey","lastIndex","lastDistance","lastPosition"],"mappings":"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","sourcesContent":["import * as THREE from \"./three.module.js\";\n\nfunction facesFromEdges(edges) {\n    var chains = joinEdges(edges).filter(validFace);\n    var faces = chains.map(function (chain) {\n        return chain.map(function (edge) {\n            return edge[0];\n        });\n    });\n    return faces;\n}\n\nfunction joinEdges(edges) {\n    changes = true;\n    var chains = edges.map(function (edge) {\n        return [edge];\n    });\n    while (changes) {\n        changes = connectChains(chains);\n    }\n    chains = chains.filter(function (chain) {\n        return chain.length;\n    });\n    return chains;\n}\n\nfunction connectChains(chains) {\n    chains.forEach(function (chainA, i) {\n        chains.forEach(function (chainB, j) {\n            var merged = mergeChains(chainA, chainB);\n            if (merged) {\n                delete chains[j];\n                return true;\n            }\n        });\n    });\n    return false;\n}\n\nfunction mergeChains(chainA, chainB) {\n\n    if (chainA === chainB) {\n        return false;\n    }\n\n    if (chainStart(chainA) === chainEnd(chainB)) {\n        chainA.unshift.apply(chainA, chainB);\n        return true;\n    }\n\n    if (chainStart(chainA) === chainStart(chainB)) {\n        reverseChain(chainB);\n        chainA.unshift.apply(chainA, chainB);\n        return true;\n    }\n\n    if (chainEnd(chainA) === chainStart(chainB)) {\n        chainA.push.apply(chainA, chainB);\n        return true;\n    }\n\n    if (chainEnd(chainA) === chainEnd(chainB)) {\n        reverseChain(chainB);\n        chainA.push.apply(chainA, chainB);\n        return true;\n    }\n\n    return false;\n}\n\nfunction chainStart(chain) {\n    return chain[0][0];\n}\n\nfunction chainEnd(chain) {\n    return chain[chain.length - 1][1];\n}\n\nfunction reverseChain(chain) {\n    chain.reverse();\n    chain.forEach(function (edge) {\n        edge.reverse();\n    });\n}\n\nfunction validFace(chain) {\n    return chainStart(chain) === chainEnd(chain) ? 1 : 0;\n}\nvar FRONT = 'front';\nvar BACK = 'back';\nvar ON = 'on';\n\nvar FACE_KEYS = ['a', 'b', 'c'];\n\nvar distanceAsPosition = function(distance) {\n    if (distance < 0) {\n        return BACK;\n    }\n    if (distance > 0) {\n        return FRONT;\n    }\n    return ON;\n};\n\nvar findDistance = function(vertex, plane) {\n    return plane.distanceToPoint(vertex);\n};\n\nvar GeometryBuilder = function(sourceGeometry, targetGeometry, slicePlane) {\n    this.sourceGeometry = sourceGeometry;\n    this.targetGeometry = targetGeometry;\n    this.slicePlane = slicePlane;\n    this.addedVertices = [];\n    this.addedIntersections = [];\n    this.newEdges = [[]];\n};\n\nGeometryBuilder.prototype.startFace = function(sourceFaceIndex) {\n    this.sourceFaceIndex = sourceFaceIndex;\n    this.sourceFace = this.sourceGeometry.faces[sourceFaceIndex];\n    this.sourceFaceUvs = this.sourceGeometry.faceVertexUvs[0][sourceFaceIndex];\n\n    this.faceIndices = [];\n    this.faceNormals = [];\n    this.faceUvs = [];\n};\n\nGeometryBuilder.prototype.endFace = function() {\n    var indices = this.faceIndices.map(function(index, i) {\n        return i;\n    });\n    this.addFace(indices);\n};\n\nGeometryBuilder.prototype.closeHoles = function() {\n    facesFromEdges(this.newEdges)\n        .forEach(function(faceIndices) {\n            var normal = this.faceNormal(faceIndices);\n            if (normal.dot(this.slicePlane.normal) > .5) {\n                faceIndices.reverse();\n            }\n            this.startFace();\n            this.faceIndices = faceIndices;\n            this.endFace();\n        }, this);\n};\n\nGeometryBuilder.prototype.addVertex = function(key) {\n    this.addUv(key);\n    this.addNormal(key);\n\n    var index = this.sourceFace[key];\n    var newIndex;\n\n    if (this.addedVertices.hasOwnProperty(index)) {\n        newIndex = this.addedVertices[index];\n    } else {\n        var vertex = this.sourceGeometry.vertices[index];\n        this.targetGeometry.vertices.push(vertex);\n        newIndex = this.targetGeometry.vertices.length - 1;\n        this.addedVertices[index] = newIndex;\n    }\n    this.faceIndices.push(newIndex);\n};\n\nGeometryBuilder.prototype.addIntersection = function(keyA, keyB, distanceA, distanceB) {\n    var t = Math.abs(distanceA) / (Math.abs(distanceA) + Math.abs(distanceB));\n    this.addIntersectionUv(keyA, keyB, t);\n    this.addIntersectionNormal(keyA, keyB, t);\n\n    var indexA = this.sourceFace[keyA];\n    var indexB = this.sourceFace[keyB];\n    var id = this.intersectionId(indexA, indexB);\n    var index;\n\n    if (this.addedIntersections.hasOwnProperty(id)) {\n        index = this.addedIntersections[id];\n    } else {\n        var vertexA = this.sourceGeometry.vertices[indexA];\n        var vertexB = this.sourceGeometry.vertices[indexB];\n        var newVertex = vertexA.clone().lerp(vertexB, t);\n        this.targetGeometry.vertices.push(newVertex);\n        index = this.targetGeometry.vertices.length - 1;\n        this.addedIntersections[id] = index;\n    }\n    this.faceIndices.push(index);\n    this.updateNewEdges(index);\n};\n\nGeometryBuilder.prototype.addUv = function(key) {\n    if ( ! this.sourceFaceUvs) {\n        return;\n    }\n    var index = this.keyIndex(key);\n    var uv = this.sourceFaceUvs[index];\n    this.faceUvs.push(uv);\n};\n\nGeometryBuilder.prototype.addIntersectionUv = function(keyA, keyB, t) {\n    if ( ! this.sourceFaceUvs) {\n        return;\n    }\n    var indexA = this.keyIndex(keyA);\n    var indexB = this.keyIndex(keyB);\n    var uvA = this.sourceFaceUvs[indexA];\n    var uvB = this.sourceFaceUvs[indexB];\n    var uv = uvA.clone().lerp(uvB, t);\n    this.faceUvs.push(uv);\n};\n\nGeometryBuilder.prototype.addNormal = function(key) {\n    if ( ! this.sourceFace.vertexNormals.length) {\n        return;\n    }\n    var index = this.keyIndex(key);\n    var normal = this.sourceFace.vertexNormals[index];\n    this.faceNormals.push(normal);\n};\n\nGeometryBuilder.prototype.addIntersectionNormal = function(keyA, keyB, t) {\n    if ( ! this.sourceFace.vertexNormals.length) {\n        return;\n    }\n    var indexA = this.keyIndex(keyA);\n    var indexB = this.keyIndex(keyB);\n    var normalA = this.sourceFace.vertexNormals[indexA];\n    var normalB = this.sourceFace.vertexNormals[indexB];\n    var normal = normalA.clone().lerp(normalB, t).normalize();\n    this.faceNormals.push(normal);\n};\n\nGeometryBuilder.prototype.addFace = function(indices) {\n    if (indices.length === 3) {\n        this.addFacePart(indices[0], indices[1], indices[2]);\n        return;\n    }\n\n    var pairs = [];\n    for (var i = 0; i < indices.length; i++) {\n        for (var j = i + 1; j < indices.length; j++) {\n            var diff = Math.abs(i - j);\n            if (diff > 1 && diff < indices.length - 1) {\n                pairs.push([indices[i], indices[j]]);\n            }\n        }\n    }\n\n    pairs.sort(function(pairA, pairB) {\n        var lengthA = this.faceEdgeLength(pairA[0], pairA[1]);\n        var lengthB = this.faceEdgeLength(pairB[0], pairB[1]);\n        return lengthA - lengthB;\n    }.bind(this));\n\n    var a = indices.indexOf(pairs[0][0]);\n    indices = indices.slice(a).concat(indices.slice(0, a));\n\n    var b = indices.indexOf(pairs[0][1]);\n    var indicesA = indices.slice(0, b + 1);\n    var indicesB = indices.slice(b).concat(indices.slice(0, 1));\n\n    this.addFace(indicesA);\n    this.addFace(indicesB);\n};\n\nGeometryBuilder.prototype.addFacePart = function(a, b, c) {\n    var normals = null;\n    if (this.faceNormals.length) {\n        normals = [\n            this.faceNormals[a],\n            this.faceNormals[b],\n            this.faceNormals[c],\n        ];\n    }\n    var face = new THREE.Face3(\n        this.faceIndices[a],\n        this.faceIndices[b],\n        this.faceIndices[c],\n        normals\n    );\n    this.targetGeometry.faces.push(face);\n    if ( ! this.sourceFaceUvs) {\n        return;\n    }\n    this.targetGeometry.faceVertexUvs[0].push([\n        this.faceUvs[a],\n        this.faceUvs[b],\n        this.faceUvs[c]\n    ]);\n};\n\nGeometryBuilder.prototype.faceEdgeLength = function(a, b) {\n    var indexA = this.faceIndices[a];\n    var indexB = this.faceIndices[b];\n    var vertexA = this.targetGeometry.vertices[indexA];\n    var vertexB = this.targetGeometry.vertices[indexB];\n    return vertexA.distanceToSquared(vertexB);\n};\n\nGeometryBuilder.prototype.intersectionId = function(indexA, indexB) {\n    return [indexA, indexB].sort().join(',');\n};\n\nGeometryBuilder.prototype.keyIndex = function(key) {\n    return FACE_KEYS.indexOf(key);\n};\n\nGeometryBuilder.prototype.updateNewEdges = function(index) {\n    var edgeIndex = this.newEdges.length - 1;\n    var edge = this.newEdges[edgeIndex];\n    if (edge.length < 2) {\n        edge.push(index);\n    } else {\n        this.newEdges.push([index]);\n    }\n};\n\nGeometryBuilder.prototype.faceNormal = function(faceIndices) {\n    var vertices = faceIndices.map(function(index) {\n        return this.targetGeometry.vertices[index];\n    }.bind(this));\n    var edgeA = vertices[0].clone().sub(vertices[1]);\n    var edgeB = vertices[0].clone().sub(vertices[2]);\n    return edgeA.cross(edgeB).normalize();\n};\n\nvar SliceGeometry = function(geometry, plane, closeHoles) {\n    var sliced = new THREE.Geometry();\n    var builder = new GeometryBuilder(geometry, sliced, plane);\n\n    var distances = [];\n    var positions = [];\n\n    geometry.vertices.forEach(function (vertex) {\n        var distance = findDistance(vertex, plane);\n        var position = distanceAsPosition(distance);\n        distances.push(distance);\n        positions.push(position);\n    });\n\n    geometry.faces.forEach(function (face, faceIndex) {\n\n        var facePositions = FACE_KEYS.map(function (key) {\n            return positions[face[key]];\n        });\n\n        if (\n            facePositions.indexOf(FRONT) === -1 &&\n            facePositions.indexOf(BACK) !== -1\n        ) {\n            return;\n        }\n\n        builder.startFace(faceIndex);\n\n        var lastKey = FACE_KEYS[FACE_KEYS.length - 1];\n        var lastIndex = face[lastKey];\n        var lastDistance = distances[lastIndex];\n        var lastPosition = positions[lastIndex];\n\n        FACE_KEYS.map(function (key) {\n            var index = face[key];\n            var distance = distances[index];\n            var position = positions[index];\n\n            if (position === FRONT) {\n                if (lastPosition === BACK) {\n                    builder.addIntersection(lastKey, key, lastDistance, distance);\n                    builder.addVertex(key);\n                } else {\n                    builder.addVertex(key);\n                }\n            }\n\n            if (position === ON) {\n                builder.addVertex(key);\n            }\n\n            if (position === BACK && lastPosition === FRONT) {\n                builder.addIntersection(lastKey, key, lastDistance, distance);\n            }\n\n            lastKey = key;\n            lastIndex = index;\n            lastPosition = position;\n            lastDistance = distance;\n        });\n\n        builder.endFace();\n    });\n\n    if (closeHoles) {\n        builder.closeHoles();\n    }\n\n    return sliced;\n};\n\nexport { SliceGeometry };"]},"sourceType":"module","hash":"557934a0700f6351ca22e2f1a9878c44c80325dd"}
